{
  "openapi": "3.0.0",
  "info": {
    "title": "",
    "description": "",
    "version": "0.0.0"
  },
  "servers": [
    {
      "url": "/",
      "description": ""
    }
  ],
  "paths": {
    "/api/brands": {
      "get": {
        "operationId": "api_brands_get_collection",
        "tags": [
          "Brand"
        ],
        "responses": {
          "200": {
            "description": "Brand collection",
            "content": {
              "application/ld+json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "hydra:member": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Brand.jsonld"
                      }
                    },
                    "hydra:totalItems": {
                      "type": "integer",
                      "minimum": 0
                    },
                    "hydra:view": {
                      "type": "object",
                      "properties": {
                        "@id": {
                          "type": "string",
                          "format": "iri-reference"
                        },
                        "@type": {
                          "type": "string"
                        },
                        "hydra:first": {
                          "type": "string",
                          "format": "iri-reference"
                        },
                        "hydra:last": {
                          "type": "string",
                          "format": "iri-reference"
                        },
                        "hydra:previous": {
                          "type": "string",
                          "format": "iri-reference"
                        },
                        "hydra:next": {
                          "type": "string",
                          "format": "iri-reference"
                        }
                      },
                      "example": {
                        "@id": "string",
                        "type": "string",
                        "hydra:first": "string",
                        "hydra:last": "string",
                        "hydra:previous": "string",
                        "hydra:next": "string"
                      }
                    },
                    "hydra:search": {
                      "type": "object",
                      "properties": {
                        "@type": {
                          "type": "string"
                        },
                        "hydra:template": {
                          "type": "string"
                        },
                        "hydra:variableRepresentation": {
                          "type": "string"
                        },
                        "hydra:mapping": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "@type": {
                                "type": "string"
                              },
                              "variable": {
                                "type": "string"
                              },
                              "property": {
                                "type": "string",
                                "nullable": true
                              },
                              "required": {
                                "type": "boolean"
                              }
                            }
                          }
                        }
                      }
                    }
                  },
                  "required": [
                    "hydra:member"
                  ]
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Brand"
                  }
                }
              },
              "text/html": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Brand"
                  }
                }
              }
            }
          }
        },
        "summary": "Retrieves the collection of Brand resources.",
        "description": "Retrieves the collection of Brand resources.",
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "description": "The collection page number",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "integer",
              "default": 1
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          }
        ],
        "deprecated": false
      },
      "post": {
        "operationId": "api_brands_post",
        "tags": [
          "Brand"
        ],
        "responses": {
          "201": {
            "description": "Brand resource created",
            "content": {
              "application/ld+json": {
                "schema": {
                  "$ref": "#/components/schemas/Brand.jsonld"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Brand"
                }
              },
              "text/html": {
                "schema": {
                  "$ref": "#/components/schemas/Brand"
                }
              }
            },
            "links": {}
          },
          "400": {
            "description": "Invalid input"
          },
          "422": {
            "description": "Unprocessable entity"
          }
        },
        "summary": "Creates a Brand resource.",
        "description": "Creates a Brand resource.",
        "parameters": [],
        "requestBody": {
          "description": "The new Brand resource",
          "content": {
            "application/ld+json": {
              "schema": {
                "$ref": "#/components/schemas/Brand.jsonld"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Brand"
              }
            },
            "text/html": {
              "schema": {
                "$ref": "#/components/schemas/Brand"
              }
            }
          },
          "required": true
        },
        "deprecated": false
      },
      "parameters": []
    },
    "/api/brands/{id}": {
      "get": {
        "operationId": "api_brands_id_get",
        "tags": [
          "Brand"
        ],
        "responses": {
          "200": {
            "description": "Brand resource",
            "content": {
              "application/ld+json": {
                "schema": {
                  "$ref": "#/components/schemas/Brand.jsonld"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Brand"
                }
              },
              "text/html": {
                "schema": {
                  "$ref": "#/components/schemas/Brand"
                }
              }
            }
          },
          "404": {
            "description": "Resource not found"
          }
        },
        "summary": "Retrieves a Brand resource.",
        "description": "Retrieves a Brand resource.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Brand identifier",
            "required": true,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            },
            "style": "simple",
            "explode": false,
            "allowReserved": false
          }
        ],
        "deprecated": false
      },
      "put": {
        "operationId": "api_brands_id_put",
        "tags": [
          "Brand"
        ],
        "responses": {
          "200": {
            "description": "Brand resource updated",
            "content": {
              "application/ld+json": {
                "schema": {
                  "$ref": "#/components/schemas/Brand.jsonld"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Brand"
                }
              },
              "text/html": {
                "schema": {
                  "$ref": "#/components/schemas/Brand"
                }
              }
            },
            "links": {}
          },
          "400": {
            "description": "Invalid input"
          },
          "404": {
            "description": "Resource not found"
          },
          "422": {
            "description": "Unprocessable entity"
          }
        },
        "summary": "Replaces the Brand resource.",
        "description": "Replaces the Brand resource.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Brand identifier",
            "required": true,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            },
            "style": "simple",
            "explode": false,
            "allowReserved": false
          }
        ],
        "requestBody": {
          "description": "The updated Brand resource",
          "content": {
            "application/ld+json": {
              "schema": {
                "$ref": "#/components/schemas/Brand.jsonld"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Brand"
              }
            },
            "text/html": {
              "schema": {
                "$ref": "#/components/schemas/Brand"
              }
            }
          },
          "required": true
        },
        "deprecated": false
      },
      "delete": {
        "operationId": "api_brands_id_delete",
        "tags": [
          "Brand"
        ],
        "responses": {
          "204": {
            "description": "Brand resource deleted"
          },
          "404": {
            "description": "Resource not found"
          }
        },
        "summary": "Removes the Brand resource.",
        "description": "Removes the Brand resource.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Brand identifier",
            "required": true,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            },
            "style": "simple",
            "explode": false,
            "allowReserved": false
          }
        ],
        "deprecated": false
      },
      "patch": {
        "operationId": "api_brands_id_patch",
        "tags": [
          "Brand"
        ],
        "responses": {
          "200": {
            "description": "Brand resource updated",
            "content": {
              "application/ld+json": {
                "schema": {
                  "$ref": "#/components/schemas/Brand.jsonld"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Brand"
                }
              },
              "text/html": {
                "schema": {
                  "$ref": "#/components/schemas/Brand"
                }
              }
            },
            "links": {}
          },
          "400": {
            "description": "Invalid input"
          },
          "404": {
            "description": "Resource not found"
          },
          "422": {
            "description": "Unprocessable entity"
          }
        },
        "summary": "Updates the Brand resource.",
        "description": "Updates the Brand resource.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Brand identifier",
            "required": true,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            },
            "style": "simple",
            "explode": false,
            "allowReserved": false
          }
        ],
        "requestBody": {
          "description": "The updated Brand resource",
          "content": {
            "application/merge-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/Brand"
              }
            }
          },
          "required": true
        },
        "deprecated": false
      },
      "parameters": []
    },
    "/api/clients": {
      "get": {
        "operationId": "api_clients_get_collection",
        "tags": [
          "Client"
        ],
        "responses": {
          "200": {
            "description": "Client collection",
            "content": {
              "application/ld+json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "hydra:member": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Client.jsonld"
                      }
                    },
                    "hydra:totalItems": {
                      "type": "integer",
                      "minimum": 0
                    },
                    "hydra:view": {
                      "type": "object",
                      "properties": {
                        "@id": {
                          "type": "string",
                          "format": "iri-reference"
                        },
                        "@type": {
                          "type": "string"
                        },
                        "hydra:first": {
                          "type": "string",
                          "format": "iri-reference"
                        },
                        "hydra:last": {
                          "type": "string",
                          "format": "iri-reference"
                        },
                        "hydra:previous": {
                          "type": "string",
                          "format": "iri-reference"
                        },
                        "hydra:next": {
                          "type": "string",
                          "format": "iri-reference"
                        }
                      },
                      "example": {
                        "@id": "string",
                        "type": "string",
                        "hydra:first": "string",
                        "hydra:last": "string",
                        "hydra:previous": "string",
                        "hydra:next": "string"
                      }
                    },
                    "hydra:search": {
                      "type": "object",
                      "properties": {
                        "@type": {
                          "type": "string"
                        },
                        "hydra:template": {
                          "type": "string"
                        },
                        "hydra:variableRepresentation": {
                          "type": "string"
                        },
                        "hydra:mapping": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "@type": {
                                "type": "string"
                              },
                              "variable": {
                                "type": "string"
                              },
                              "property": {
                                "type": "string",
                                "nullable": true
                              },
                              "required": {
                                "type": "boolean"
                              }
                            }
                          }
                        }
                      }
                    }
                  },
                  "required": [
                    "hydra:member"
                  ]
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Client"
                  }
                }
              },
              "text/html": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Client"
                  }
                }
              }
            }
          }
        },
        "summary": "Retrieves the collection of Client resources.",
        "description": "Retrieves the collection of Client resources.",
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "description": "The collection page number",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "integer",
              "default": 1
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          }
        ],
        "deprecated": false
      },
      "post": {
        "operationId": "api_clients_post",
        "tags": [
          "Client"
        ],
        "responses": {
          "201": {
            "description": "Client resource created",
            "content": {
              "application/ld+json": {
                "schema": {
                  "$ref": "#/components/schemas/Client.jsonld"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Client"
                }
              },
              "text/html": {
                "schema": {
                  "$ref": "#/components/schemas/Client"
                }
              }
            },
            "links": {}
          },
          "400": {
            "description": "Invalid input"
          },
          "422": {
            "description": "Unprocessable entity"
          }
        },
        "summary": "Creates a Client resource.",
        "description": "Creates a Client resource.",
        "parameters": [],
        "requestBody": {
          "description": "The new Client resource",
          "content": {
            "application/ld+json": {
              "schema": {
                "$ref": "#/components/schemas/Client.jsonld"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Client"
              }
            },
            "text/html": {
              "schema": {
                "$ref": "#/components/schemas/Client"
              }
            }
          },
          "required": true
        },
        "deprecated": false
      },
      "parameters": []
    },
    "/api/clients/{id}": {
      "get": {
        "operationId": "api_clients_id_get",
        "tags": [
          "Client"
        ],
        "responses": {
          "200": {
            "description": "Client resource",
            "content": {
              "application/ld+json": {
                "schema": {
                  "$ref": "#/components/schemas/Client.jsonld"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Client"
                }
              },
              "text/html": {
                "schema": {
                  "$ref": "#/components/schemas/Client"
                }
              }
            }
          },
          "404": {
            "description": "Resource not found"
          }
        },
        "summary": "Retrieves a Client resource.",
        "description": "Retrieves a Client resource.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Client identifier",
            "required": true,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            },
            "style": "simple",
            "explode": false,
            "allowReserved": false
          }
        ],
        "deprecated": false
      },
      "put": {
        "operationId": "api_clients_id_put",
        "tags": [
          "Client"
        ],
        "responses": {
          "200": {
            "description": "Client resource updated",
            "content": {
              "application/ld+json": {
                "schema": {
                  "$ref": "#/components/schemas/Client.jsonld"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Client"
                }
              },
              "text/html": {
                "schema": {
                  "$ref": "#/components/schemas/Client"
                }
              }
            },
            "links": {}
          },
          "400": {
            "description": "Invalid input"
          },
          "404": {
            "description": "Resource not found"
          },
          "422": {
            "description": "Unprocessable entity"
          }
        },
        "summary": "Replaces the Client resource.",
        "description": "Replaces the Client resource.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Client identifier",
            "required": true,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            },
            "style": "simple",
            "explode": false,
            "allowReserved": false
          }
        ],
        "requestBody": {
          "description": "The updated Client resource",
          "content": {
            "application/ld+json": {
              "schema": {
                "$ref": "#/components/schemas/Client.jsonld"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Client"
              }
            },
            "text/html": {
              "schema": {
                "$ref": "#/components/schemas/Client"
              }
            }
          },
          "required": true
        },
        "deprecated": false
      },
      "delete": {
        "operationId": "api_clients_id_delete",
        "tags": [
          "Client"
        ],
        "responses": {
          "204": {
            "description": "Client resource deleted"
          },
          "404": {
            "description": "Resource not found"
          }
        },
        "summary": "Removes the Client resource.",
        "description": "Removes the Client resource.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Client identifier",
            "required": true,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            },
            "style": "simple",
            "explode": false,
            "allowReserved": false
          }
        ],
        "deprecated": false
      },
      "patch": {
        "operationId": "api_clients_id_patch",
        "tags": [
          "Client"
        ],
        "responses": {
          "200": {
            "description": "Client resource updated",
            "content": {
              "application/ld+json": {
                "schema": {
                  "$ref": "#/components/schemas/Client.jsonld"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Client"
                }
              },
              "text/html": {
                "schema": {
                  "$ref": "#/components/schemas/Client"
                }
              }
            },
            "links": {}
          },
          "400": {
            "description": "Invalid input"
          },
          "404": {
            "description": "Resource not found"
          },
          "422": {
            "description": "Unprocessable entity"
          }
        },
        "summary": "Updates the Client resource.",
        "description": "Updates the Client resource.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Client identifier",
            "required": true,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            },
            "style": "simple",
            "explode": false,
            "allowReserved": false
          }
        ],
        "requestBody": {
          "description": "The updated Client resource",
          "content": {
            "application/merge-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/Client"
              }
            }
          },
          "required": true
        },
        "deprecated": false
      },
      "parameters": []
    },
    "/api/contacts": {
      "get": {
        "operationId": "api_contacts_get_collection",
        "tags": [
          "Contact"
        ],
        "responses": {
          "200": {
            "description": "Contact collection",
            "content": {
              "application/ld+json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "hydra:member": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Contact.jsonld"
                      }
                    },
                    "hydra:totalItems": {
                      "type": "integer",
                      "minimum": 0
                    },
                    "hydra:view": {
                      "type": "object",
                      "properties": {
                        "@id": {
                          "type": "string",
                          "format": "iri-reference"
                        },
                        "@type": {
                          "type": "string"
                        },
                        "hydra:first": {
                          "type": "string",
                          "format": "iri-reference"
                        },
                        "hydra:last": {
                          "type": "string",
                          "format": "iri-reference"
                        },
                        "hydra:previous": {
                          "type": "string",
                          "format": "iri-reference"
                        },
                        "hydra:next": {
                          "type": "string",
                          "format": "iri-reference"
                        }
                      },
                      "example": {
                        "@id": "string",
                        "type": "string",
                        "hydra:first": "string",
                        "hydra:last": "string",
                        "hydra:previous": "string",
                        "hydra:next": "string"
                      }
                    },
                    "hydra:search": {
                      "type": "object",
                      "properties": {
                        "@type": {
                          "type": "string"
                        },
                        "hydra:template": {
                          "type": "string"
                        },
                        "hydra:variableRepresentation": {
                          "type": "string"
                        },
                        "hydra:mapping": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "@type": {
                                "type": "string"
                              },
                              "variable": {
                                "type": "string"
                              },
                              "property": {
                                "type": "string",
                                "nullable": true
                              },
                              "required": {
                                "type": "boolean"
                              }
                            }
                          }
                        }
                      }
                    }
                  },
                  "required": [
                    "hydra:member"
                  ]
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Contact"
                  }
                }
              },
              "text/html": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Contact"
                  }
                }
              }
            }
          }
        },
        "summary": "Retrieves the collection of Contact resources.",
        "description": "Retrieves the collection of Contact resources.",
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "description": "The collection page number",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "integer",
              "default": 1
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          }
        ],
        "deprecated": false
      },
      "post": {
        "operationId": "api_contacts_post",
        "tags": [
          "Contact"
        ],
        "responses": {
          "201": {
            "description": "Contact resource created",
            "content": {
              "application/ld+json": {
                "schema": {
                  "$ref": "#/components/schemas/Contact.jsonld"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Contact"
                }
              },
              "text/html": {
                "schema": {
                  "$ref": "#/components/schemas/Contact"
                }
              }
            },
            "links": {}
          },
          "400": {
            "description": "Invalid input"
          },
          "422": {
            "description": "Unprocessable entity"
          }
        },
        "summary": "Creates a Contact resource.",
        "description": "Creates a Contact resource.",
        "parameters": [],
        "requestBody": {
          "description": "The new Contact resource",
          "content": {
            "application/ld+json": {
              "schema": {
                "$ref": "#/components/schemas/Contact.jsonld"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Contact"
              }
            },
            "text/html": {
              "schema": {
                "$ref": "#/components/schemas/Contact"
              }
            }
          },
          "required": true
        },
        "deprecated": false
      },
      "parameters": []
    },
    "/api/contacts/{id}": {
      "get": {
        "operationId": "api_contacts_id_get",
        "tags": [
          "Contact"
        ],
        "responses": {
          "200": {
            "description": "Contact resource",
            "content": {
              "application/ld+json": {
                "schema": {
                  "$ref": "#/components/schemas/Contact.jsonld"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Contact"
                }
              },
              "text/html": {
                "schema": {
                  "$ref": "#/components/schemas/Contact"
                }
              }
            }
          },
          "404": {
            "description": "Resource not found"
          }
        },
        "summary": "Retrieves a Contact resource.",
        "description": "Retrieves a Contact resource.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Contact identifier",
            "required": true,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            },
            "style": "simple",
            "explode": false,
            "allowReserved": false
          }
        ],
        "deprecated": false
      },
      "put": {
        "operationId": "api_contacts_id_put",
        "tags": [
          "Contact"
        ],
        "responses": {
          "200": {
            "description": "Contact resource updated",
            "content": {
              "application/ld+json": {
                "schema": {
                  "$ref": "#/components/schemas/Contact.jsonld"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Contact"
                }
              },
              "text/html": {
                "schema": {
                  "$ref": "#/components/schemas/Contact"
                }
              }
            },
            "links": {}
          },
          "400": {
            "description": "Invalid input"
          },
          "404": {
            "description": "Resource not found"
          },
          "422": {
            "description": "Unprocessable entity"
          }
        },
        "summary": "Replaces the Contact resource.",
        "description": "Replaces the Contact resource.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Contact identifier",
            "required": true,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            },
            "style": "simple",
            "explode": false,
            "allowReserved": false
          }
        ],
        "requestBody": {
          "description": "The updated Contact resource",
          "content": {
            "application/ld+json": {
              "schema": {
                "$ref": "#/components/schemas/Contact.jsonld"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Contact"
              }
            },
            "text/html": {
              "schema": {
                "$ref": "#/components/schemas/Contact"
              }
            }
          },
          "required": true
        },
        "deprecated": false
      },
      "delete": {
        "operationId": "api_contacts_id_delete",
        "tags": [
          "Contact"
        ],
        "responses": {
          "204": {
            "description": "Contact resource deleted"
          },
          "404": {
            "description": "Resource not found"
          }
        },
        "summary": "Removes the Contact resource.",
        "description": "Removes the Contact resource.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Contact identifier",
            "required": true,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            },
            "style": "simple",
            "explode": false,
            "allowReserved": false
          }
        ],
        "deprecated": false
      },
      "patch": {
        "operationId": "api_contacts_id_patch",
        "tags": [
          "Contact"
        ],
        "responses": {
          "200": {
            "description": "Contact resource updated",
            "content": {
              "application/ld+json": {
                "schema": {
                  "$ref": "#/components/schemas/Contact.jsonld"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Contact"
                }
              },
              "text/html": {
                "schema": {
                  "$ref": "#/components/schemas/Contact"
                }
              }
            },
            "links": {}
          },
          "400": {
            "description": "Invalid input"
          },
          "404": {
            "description": "Resource not found"
          },
          "422": {
            "description": "Unprocessable entity"
          }
        },
        "summary": "Updates the Contact resource.",
        "description": "Updates the Contact resource.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Contact identifier",
            "required": true,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            },
            "style": "simple",
            "explode": false,
            "allowReserved": false
          }
        ],
        "requestBody": {
          "description": "The updated Contact resource",
          "content": {
            "application/merge-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/Contact"
              }
            }
          },
          "required": true
        },
        "deprecated": false
      },
      "parameters": []
    },
    "/api/equipment": {
      "get": {
        "operationId": "api_equipment_get_collection",
        "tags": [
          "Equipment"
        ],
        "responses": {
          "200": {
            "description": "Equipment collection",
            "content": {
              "application/ld+json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "hydra:member": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Equipment.jsonld"
                      }
                    },
                    "hydra:totalItems": {
                      "type": "integer",
                      "minimum": 0
                    },
                    "hydra:view": {
                      "type": "object",
                      "properties": {
                        "@id": {
                          "type": "string",
                          "format": "iri-reference"
                        },
                        "@type": {
                          "type": "string"
                        },
                        "hydra:first": {
                          "type": "string",
                          "format": "iri-reference"
                        },
                        "hydra:last": {
                          "type": "string",
                          "format": "iri-reference"
                        },
                        "hydra:previous": {
                          "type": "string",
                          "format": "iri-reference"
                        },
                        "hydra:next": {
                          "type": "string",
                          "format": "iri-reference"
                        }
                      },
                      "example": {
                        "@id": "string",
                        "type": "string",
                        "hydra:first": "string",
                        "hydra:last": "string",
                        "hydra:previous": "string",
                        "hydra:next": "string"
                      }
                    },
                    "hydra:search": {
                      "type": "object",
                      "properties": {
                        "@type": {
                          "type": "string"
                        },
                        "hydra:template": {
                          "type": "string"
                        },
                        "hydra:variableRepresentation": {
                          "type": "string"
                        },
                        "hydra:mapping": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "@type": {
                                "type": "string"
                              },
                              "variable": {
                                "type": "string"
                              },
                              "property": {
                                "type": "string",
                                "nullable": true
                              },
                              "required": {
                                "type": "boolean"
                              }
                            }
                          }
                        }
                      }
                    }
                  },
                  "required": [
                    "hydra:member"
                  ]
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Equipment"
                  }
                }
              },
              "text/html": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Equipment"
                  }
                }
              }
            }
          }
        },
        "summary": "Retrieves the collection of Equipment resources.",
        "description": "Retrieves the collection of Equipment resources.",
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "description": "The collection page number",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "integer",
              "default": 1
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          }
        ],
        "deprecated": false
      },
      "post": {
        "operationId": "api_equipment_post",
        "tags": [
          "Equipment"
        ],
        "responses": {
          "201": {
            "description": "Equipment resource created",
            "content": {
              "application/ld+json": {
                "schema": {
                  "$ref": "#/components/schemas/Equipment.jsonld"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Equipment"
                }
              },
              "text/html": {
                "schema": {
                  "$ref": "#/components/schemas/Equipment"
                }
              }
            },
            "links": {}
          },
          "400": {
            "description": "Invalid input"
          },
          "422": {
            "description": "Unprocessable entity"
          }
        },
        "summary": "Creates a Equipment resource.",
        "description": "Creates a Equipment resource.",
        "parameters": [],
        "requestBody": {
          "description": "The new Equipment resource",
          "content": {
            "application/ld+json": {
              "schema": {
                "$ref": "#/components/schemas/Equipment.jsonld"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Equipment"
              }
            },
            "text/html": {
              "schema": {
                "$ref": "#/components/schemas/Equipment"
              }
            }
          },
          "required": true
        },
        "deprecated": false
      },
      "parameters": []
    },
    "/api/equipment/{id}": {
      "get": {
        "operationId": "api_equipment_id_get",
        "tags": [
          "Equipment"
        ],
        "responses": {
          "200": {
            "description": "Equipment resource",
            "content": {
              "application/ld+json": {
                "schema": {
                  "$ref": "#/components/schemas/Equipment.jsonld"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Equipment"
                }
              },
              "text/html": {
                "schema": {
                  "$ref": "#/components/schemas/Equipment"
                }
              }
            }
          },
          "404": {
            "description": "Resource not found"
          }
        },
        "summary": "Retrieves a Equipment resource.",
        "description": "Retrieves a Equipment resource.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Equipment identifier",
            "required": true,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            },
            "style": "simple",
            "explode": false,
            "allowReserved": false
          }
        ],
        "deprecated": false
      },
      "put": {
        "operationId": "api_equipment_id_put",
        "tags": [
          "Equipment"
        ],
        "responses": {
          "200": {
            "description": "Equipment resource updated",
            "content": {
              "application/ld+json": {
                "schema": {
                  "$ref": "#/components/schemas/Equipment.jsonld"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Equipment"
                }
              },
              "text/html": {
                "schema": {
                  "$ref": "#/components/schemas/Equipment"
                }
              }
            },
            "links": {}
          },
          "400": {
            "description": "Invalid input"
          },
          "404": {
            "description": "Resource not found"
          },
          "422": {
            "description": "Unprocessable entity"
          }
        },
        "summary": "Replaces the Equipment resource.",
        "description": "Replaces the Equipment resource.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Equipment identifier",
            "required": true,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            },
            "style": "simple",
            "explode": false,
            "allowReserved": false
          }
        ],
        "requestBody": {
          "description": "The updated Equipment resource",
          "content": {
            "application/ld+json": {
              "schema": {
                "$ref": "#/components/schemas/Equipment.jsonld"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Equipment"
              }
            },
            "text/html": {
              "schema": {
                "$ref": "#/components/schemas/Equipment"
              }
            }
          },
          "required": true
        },
        "deprecated": false
      },
      "delete": {
        "operationId": "api_equipment_id_delete",
        "tags": [
          "Equipment"
        ],
        "responses": {
          "204": {
            "description": "Equipment resource deleted"
          },
          "404": {
            "description": "Resource not found"
          }
        },
        "summary": "Removes the Equipment resource.",
        "description": "Removes the Equipment resource.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Equipment identifier",
            "required": true,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            },
            "style": "simple",
            "explode": false,
            "allowReserved": false
          }
        ],
        "deprecated": false
      },
      "patch": {
        "operationId": "api_equipment_id_patch",
        "tags": [
          "Equipment"
        ],
        "responses": {
          "200": {
            "description": "Equipment resource updated",
            "content": {
              "application/ld+json": {
                "schema": {
                  "$ref": "#/components/schemas/Equipment.jsonld"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Equipment"
                }
              },
              "text/html": {
                "schema": {
                  "$ref": "#/components/schemas/Equipment"
                }
              }
            },
            "links": {}
          },
          "400": {
            "description": "Invalid input"
          },
          "404": {
            "description": "Resource not found"
          },
          "422": {
            "description": "Unprocessable entity"
          }
        },
        "summary": "Updates the Equipment resource.",
        "description": "Updates the Equipment resource.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Equipment identifier",
            "required": true,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            },
            "style": "simple",
            "explode": false,
            "allowReserved": false
          }
        ],
        "requestBody": {
          "description": "The updated Equipment resource",
          "content": {
            "application/merge-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/Equipment"
              }
            }
          },
          "required": true
        },
        "deprecated": false
      },
      "parameters": []
    },
    "/api/equipment_types": {
      "get": {
        "operationId": "api_equipment_types_get_collection",
        "tags": [
          "EquipmentType"
        ],
        "responses": {
          "200": {
            "description": "EquipmentType collection",
            "content": {
              "application/ld+json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "hydra:member": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/EquipmentType.jsonld"
                      }
                    },
                    "hydra:totalItems": {
                      "type": "integer",
                      "minimum": 0
                    },
                    "hydra:view": {
                      "type": "object",
                      "properties": {
                        "@id": {
                          "type": "string",
                          "format": "iri-reference"
                        },
                        "@type": {
                          "type": "string"
                        },
                        "hydra:first": {
                          "type": "string",
                          "format": "iri-reference"
                        },
                        "hydra:last": {
                          "type": "string",
                          "format": "iri-reference"
                        },
                        "hydra:previous": {
                          "type": "string",
                          "format": "iri-reference"
                        },
                        "hydra:next": {
                          "type": "string",
                          "format": "iri-reference"
                        }
                      },
                      "example": {
                        "@id": "string",
                        "type": "string",
                        "hydra:first": "string",
                        "hydra:last": "string",
                        "hydra:previous": "string",
                        "hydra:next": "string"
                      }
                    },
                    "hydra:search": {
                      "type": "object",
                      "properties": {
                        "@type": {
                          "type": "string"
                        },
                        "hydra:template": {
                          "type": "string"
                        },
                        "hydra:variableRepresentation": {
                          "type": "string"
                        },
                        "hydra:mapping": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "@type": {
                                "type": "string"
                              },
                              "variable": {
                                "type": "string"
                              },
                              "property": {
                                "type": "string",
                                "nullable": true
                              },
                              "required": {
                                "type": "boolean"
                              }
                            }
                          }
                        }
                      }
                    }
                  },
                  "required": [
                    "hydra:member"
                  ]
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/EquipmentType"
                  }
                }
              },
              "text/html": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/EquipmentType"
                  }
                }
              }
            }
          }
        },
        "summary": "Retrieves the collection of EquipmentType resources.",
        "description": "Retrieves the collection of EquipmentType resources.",
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "description": "The collection page number",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "integer",
              "default": 1
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          }
        ],
        "deprecated": false
      },
      "post": {
        "operationId": "api_equipment_types_post",
        "tags": [
          "EquipmentType"
        ],
        "responses": {
          "201": {
            "description": "EquipmentType resource created",
            "content": {
              "application/ld+json": {
                "schema": {
                  "$ref": "#/components/schemas/EquipmentType.jsonld"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EquipmentType"
                }
              },
              "text/html": {
                "schema": {
                  "$ref": "#/components/schemas/EquipmentType"
                }
              }
            },
            "links": {}
          },
          "400": {
            "description": "Invalid input"
          },
          "422": {
            "description": "Unprocessable entity"
          }
        },
        "summary": "Creates a EquipmentType resource.",
        "description": "Creates a EquipmentType resource.",
        "parameters": [],
        "requestBody": {
          "description": "The new EquipmentType resource",
          "content": {
            "application/ld+json": {
              "schema": {
                "$ref": "#/components/schemas/EquipmentType.jsonld"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EquipmentType"
              }
            },
            "text/html": {
              "schema": {
                "$ref": "#/components/schemas/EquipmentType"
              }
            }
          },
          "required": true
        },
        "deprecated": false
      },
      "parameters": []
    },
    "/api/equipment_types/{id}": {
      "get": {
        "operationId": "api_equipment_types_id_get",
        "tags": [
          "EquipmentType"
        ],
        "responses": {
          "200": {
            "description": "EquipmentType resource",
            "content": {
              "application/ld+json": {
                "schema": {
                  "$ref": "#/components/schemas/EquipmentType.jsonld"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EquipmentType"
                }
              },
              "text/html": {
                "schema": {
                  "$ref": "#/components/schemas/EquipmentType"
                }
              }
            }
          },
          "404": {
            "description": "Resource not found"
          }
        },
        "summary": "Retrieves a EquipmentType resource.",
        "description": "Retrieves a EquipmentType resource.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "EquipmentType identifier",
            "required": true,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            },
            "style": "simple",
            "explode": false,
            "allowReserved": false
          }
        ],
        "deprecated": false
      },
      "put": {
        "operationId": "api_equipment_types_id_put",
        "tags": [
          "EquipmentType"
        ],
        "responses": {
          "200": {
            "description": "EquipmentType resource updated",
            "content": {
              "application/ld+json": {
                "schema": {
                  "$ref": "#/components/schemas/EquipmentType.jsonld"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EquipmentType"
                }
              },
              "text/html": {
                "schema": {
                  "$ref": "#/components/schemas/EquipmentType"
                }
              }
            },
            "links": {}
          },
          "400": {
            "description": "Invalid input"
          },
          "404": {
            "description": "Resource not found"
          },
          "422": {
            "description": "Unprocessable entity"
          }
        },
        "summary": "Replaces the EquipmentType resource.",
        "description": "Replaces the EquipmentType resource.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "EquipmentType identifier",
            "required": true,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            },
            "style": "simple",
            "explode": false,
            "allowReserved": false
          }
        ],
        "requestBody": {
          "description": "The updated EquipmentType resource",
          "content": {
            "application/ld+json": {
              "schema": {
                "$ref": "#/components/schemas/EquipmentType.jsonld"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EquipmentType"
              }
            },
            "text/html": {
              "schema": {
                "$ref": "#/components/schemas/EquipmentType"
              }
            }
          },
          "required": true
        },
        "deprecated": false
      },
      "delete": {
        "operationId": "api_equipment_types_id_delete",
        "tags": [
          "EquipmentType"
        ],
        "responses": {
          "204": {
            "description": "EquipmentType resource deleted"
          },
          "404": {
            "description": "Resource not found"
          }
        },
        "summary": "Removes the EquipmentType resource.",
        "description": "Removes the EquipmentType resource.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "EquipmentType identifier",
            "required": true,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            },
            "style": "simple",
            "explode": false,
            "allowReserved": false
          }
        ],
        "deprecated": false
      },
      "patch": {
        "operationId": "api_equipment_types_id_patch",
        "tags": [
          "EquipmentType"
        ],
        "responses": {
          "200": {
            "description": "EquipmentType resource updated",
            "content": {
              "application/ld+json": {
                "schema": {
                  "$ref": "#/components/schemas/EquipmentType.jsonld"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EquipmentType"
                }
              },
              "text/html": {
                "schema": {
                  "$ref": "#/components/schemas/EquipmentType"
                }
              }
            },
            "links": {}
          },
          "400": {
            "description": "Invalid input"
          },
          "404": {
            "description": "Resource not found"
          },
          "422": {
            "description": "Unprocessable entity"
          }
        },
        "summary": "Updates the EquipmentType resource.",
        "description": "Updates the EquipmentType resource.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "EquipmentType identifier",
            "required": true,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            },
            "style": "simple",
            "explode": false,
            "allowReserved": false
          }
        ],
        "requestBody": {
          "description": "The updated EquipmentType resource",
          "content": {
            "application/merge-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/EquipmentType"
              }
            }
          },
          "required": true
        },
        "deprecated": false
      },
      "parameters": []
    },
    "/api/finalities": {
      "get": {
        "operationId": "api_finalities_get_collection",
        "tags": [
          "Finality"
        ],
        "responses": {
          "200": {
            "description": "Finality collection",
            "content": {
              "application/ld+json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "hydra:member": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Finality.jsonld"
                      }
                    },
                    "hydra:totalItems": {
                      "type": "integer",
                      "minimum": 0
                    },
                    "hydra:view": {
                      "type": "object",
                      "properties": {
                        "@id": {
                          "type": "string",
                          "format": "iri-reference"
                        },
                        "@type": {
                          "type": "string"
                        },
                        "hydra:first": {
                          "type": "string",
                          "format": "iri-reference"
                        },
                        "hydra:last": {
                          "type": "string",
                          "format": "iri-reference"
                        },
                        "hydra:previous": {
                          "type": "string",
                          "format": "iri-reference"
                        },
                        "hydra:next": {
                          "type": "string",
                          "format": "iri-reference"
                        }
                      },
                      "example": {
                        "@id": "string",
                        "type": "string",
                        "hydra:first": "string",
                        "hydra:last": "string",
                        "hydra:previous": "string",
                        "hydra:next": "string"
                      }
                    },
                    "hydra:search": {
                      "type": "object",
                      "properties": {
                        "@type": {
                          "type": "string"
                        },
                        "hydra:template": {
                          "type": "string"
                        },
                        "hydra:variableRepresentation": {
                          "type": "string"
                        },
                        "hydra:mapping": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "@type": {
                                "type": "string"
                              },
                              "variable": {
                                "type": "string"
                              },
                              "property": {
                                "type": "string",
                                "nullable": true
                              },
                              "required": {
                                "type": "boolean"
                              }
                            }
                          }
                        }
                      }
                    }
                  },
                  "required": [
                    "hydra:member"
                  ]
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Finality"
                  }
                }
              },
              "text/html": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Finality"
                  }
                }
              }
            }
          }
        },
        "summary": "Retrieves the collection of Finality resources.",
        "description": "Retrieves the collection of Finality resources.",
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "description": "The collection page number",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "integer",
              "default": 1
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          }
        ],
        "deprecated": false
      },
      "post": {
        "operationId": "api_finalities_post",
        "tags": [
          "Finality"
        ],
        "responses": {
          "201": {
            "description": "Finality resource created",
            "content": {
              "application/ld+json": {
                "schema": {
                  "$ref": "#/components/schemas/Finality.jsonld"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Finality"
                }
              },
              "text/html": {
                "schema": {
                  "$ref": "#/components/schemas/Finality"
                }
              }
            },
            "links": {}
          },
          "400": {
            "description": "Invalid input"
          },
          "422": {
            "description": "Unprocessable entity"
          }
        },
        "summary": "Creates a Finality resource.",
        "description": "Creates a Finality resource.",
        "parameters": [],
        "requestBody": {
          "description": "The new Finality resource",
          "content": {
            "application/ld+json": {
              "schema": {
                "$ref": "#/components/schemas/Finality.jsonld"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Finality"
              }
            },
            "text/html": {
              "schema": {
                "$ref": "#/components/schemas/Finality"
              }
            }
          },
          "required": true
        },
        "deprecated": false
      },
      "parameters": []
    },
    "/api/finalities/{id}": {
      "get": {
        "operationId": "api_finalities_id_get",
        "tags": [
          "Finality"
        ],
        "responses": {
          "200": {
            "description": "Finality resource",
            "content": {
              "application/ld+json": {
                "schema": {
                  "$ref": "#/components/schemas/Finality.jsonld"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Finality"
                }
              },
              "text/html": {
                "schema": {
                  "$ref": "#/components/schemas/Finality"
                }
              }
            }
          },
          "404": {
            "description": "Resource not found"
          }
        },
        "summary": "Retrieves a Finality resource.",
        "description": "Retrieves a Finality resource.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Finality identifier",
            "required": true,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            },
            "style": "simple",
            "explode": false,
            "allowReserved": false
          }
        ],
        "deprecated": false
      },
      "put": {
        "operationId": "api_finalities_id_put",
        "tags": [
          "Finality"
        ],
        "responses": {
          "200": {
            "description": "Finality resource updated",
            "content": {
              "application/ld+json": {
                "schema": {
                  "$ref": "#/components/schemas/Finality.jsonld"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Finality"
                }
              },
              "text/html": {
                "schema": {
                  "$ref": "#/components/schemas/Finality"
                }
              }
            },
            "links": {}
          },
          "400": {
            "description": "Invalid input"
          },
          "404": {
            "description": "Resource not found"
          },
          "422": {
            "description": "Unprocessable entity"
          }
        },
        "summary": "Replaces the Finality resource.",
        "description": "Replaces the Finality resource.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Finality identifier",
            "required": true,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            },
            "style": "simple",
            "explode": false,
            "allowReserved": false
          }
        ],
        "requestBody": {
          "description": "The updated Finality resource",
          "content": {
            "application/ld+json": {
              "schema": {
                "$ref": "#/components/schemas/Finality.jsonld"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Finality"
              }
            },
            "text/html": {
              "schema": {
                "$ref": "#/components/schemas/Finality"
              }
            }
          },
          "required": true
        },
        "deprecated": false
      },
      "delete": {
        "operationId": "api_finalities_id_delete",
        "tags": [
          "Finality"
        ],
        "responses": {
          "204": {
            "description": "Finality resource deleted"
          },
          "404": {
            "description": "Resource not found"
          }
        },
        "summary": "Removes the Finality resource.",
        "description": "Removes the Finality resource.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Finality identifier",
            "required": true,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            },
            "style": "simple",
            "explode": false,
            "allowReserved": false
          }
        ],
        "deprecated": false
      },
      "patch": {
        "operationId": "api_finalities_id_patch",
        "tags": [
          "Finality"
        ],
        "responses": {
          "200": {
            "description": "Finality resource updated",
            "content": {
              "application/ld+json": {
                "schema": {
                  "$ref": "#/components/schemas/Finality.jsonld"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Finality"
                }
              },
              "text/html": {
                "schema": {
                  "$ref": "#/components/schemas/Finality"
                }
              }
            },
            "links": {}
          },
          "400": {
            "description": "Invalid input"
          },
          "404": {
            "description": "Resource not found"
          },
          "422": {
            "description": "Unprocessable entity"
          }
        },
        "summary": "Updates the Finality resource.",
        "description": "Updates the Finality resource.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Finality identifier",
            "required": true,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            },
            "style": "simple",
            "explode": false,
            "allowReserved": false
          }
        ],
        "requestBody": {
          "description": "The updated Finality resource",
          "content": {
            "application/merge-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/Finality"
              }
            }
          },
          "required": true
        },
        "deprecated": false
      },
      "parameters": []
    },
    "/api/gas_types": {
      "get": {
        "operationId": "api_gas_types_get_collection",
        "tags": [
          "GasType"
        ],
        "responses": {
          "200": {
            "description": "GasType collection",
            "content": {
              "application/ld+json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "hydra:member": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/GasType.jsonld"
                      }
                    },
                    "hydra:totalItems": {
                      "type": "integer",
                      "minimum": 0
                    },
                    "hydra:view": {
                      "type": "object",
                      "properties": {
                        "@id": {
                          "type": "string",
                          "format": "iri-reference"
                        },
                        "@type": {
                          "type": "string"
                        },
                        "hydra:first": {
                          "type": "string",
                          "format": "iri-reference"
                        },
                        "hydra:last": {
                          "type": "string",
                          "format": "iri-reference"
                        },
                        "hydra:previous": {
                          "type": "string",
                          "format": "iri-reference"
                        },
                        "hydra:next": {
                          "type": "string",
                          "format": "iri-reference"
                        }
                      },
                      "example": {
                        "@id": "string",
                        "type": "string",
                        "hydra:first": "string",
                        "hydra:last": "string",
                        "hydra:previous": "string",
                        "hydra:next": "string"
                      }
                    },
                    "hydra:search": {
                      "type": "object",
                      "properties": {
                        "@type": {
                          "type": "string"
                        },
                        "hydra:template": {
                          "type": "string"
                        },
                        "hydra:variableRepresentation": {
                          "type": "string"
                        },
                        "hydra:mapping": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "@type": {
                                "type": "string"
                              },
                              "variable": {
                                "type": "string"
                              },
                              "property": {
                                "type": "string",
                                "nullable": true
                              },
                              "required": {
                                "type": "boolean"
                              }
                            }
                          }
                        }
                      }
                    }
                  },
                  "required": [
                    "hydra:member"
                  ]
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/GasType"
                  }
                }
              },
              "text/html": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/GasType"
                  }
                }
              }
            }
          }
        },
        "summary": "Retrieves the collection of GasType resources.",
        "description": "Retrieves the collection of GasType resources.",
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "description": "The collection page number",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "integer",
              "default": 1
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          }
        ],
        "deprecated": false
      },
      "post": {
        "operationId": "api_gas_types_post",
        "tags": [
          "GasType"
        ],
        "responses": {
          "201": {
            "description": "GasType resource created",
            "content": {
              "application/ld+json": {
                "schema": {
                  "$ref": "#/components/schemas/GasType.jsonld"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GasType"
                }
              },
              "text/html": {
                "schema": {
                  "$ref": "#/components/schemas/GasType"
                }
              }
            },
            "links": {}
          },
          "400": {
            "description": "Invalid input"
          },
          "422": {
            "description": "Unprocessable entity"
          }
        },
        "summary": "Creates a GasType resource.",
        "description": "Creates a GasType resource.",
        "parameters": [],
        "requestBody": {
          "description": "The new GasType resource",
          "content": {
            "application/ld+json": {
              "schema": {
                "$ref": "#/components/schemas/GasType.jsonld"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/GasType"
              }
            },
            "text/html": {
              "schema": {
                "$ref": "#/components/schemas/GasType"
              }
            }
          },
          "required": true
        },
        "deprecated": false
      },
      "parameters": []
    },
    "/api/gas_types/{id}": {
      "get": {
        "operationId": "api_gas_types_id_get",
        "tags": [
          "GasType"
        ],
        "responses": {
          "200": {
            "description": "GasType resource",
            "content": {
              "application/ld+json": {
                "schema": {
                  "$ref": "#/components/schemas/GasType.jsonld"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GasType"
                }
              },
              "text/html": {
                "schema": {
                  "$ref": "#/components/schemas/GasType"
                }
              }
            }
          },
          "404": {
            "description": "Resource not found"
          }
        },
        "summary": "Retrieves a GasType resource.",
        "description": "Retrieves a GasType resource.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "GasType identifier",
            "required": true,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            },
            "style": "simple",
            "explode": false,
            "allowReserved": false
          }
        ],
        "deprecated": false
      },
      "put": {
        "operationId": "api_gas_types_id_put",
        "tags": [
          "GasType"
        ],
        "responses": {
          "200": {
            "description": "GasType resource updated",
            "content": {
              "application/ld+json": {
                "schema": {
                  "$ref": "#/components/schemas/GasType.jsonld"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GasType"
                }
              },
              "text/html": {
                "schema": {
                  "$ref": "#/components/schemas/GasType"
                }
              }
            },
            "links": {}
          },
          "400": {
            "description": "Invalid input"
          },
          "404": {
            "description": "Resource not found"
          },
          "422": {
            "description": "Unprocessable entity"
          }
        },
        "summary": "Replaces the GasType resource.",
        "description": "Replaces the GasType resource.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "GasType identifier",
            "required": true,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            },
            "style": "simple",
            "explode": false,
            "allowReserved": false
          }
        ],
        "requestBody": {
          "description": "The updated GasType resource",
          "content": {
            "application/ld+json": {
              "schema": {
                "$ref": "#/components/schemas/GasType.jsonld"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/GasType"
              }
            },
            "text/html": {
              "schema": {
                "$ref": "#/components/schemas/GasType"
              }
            }
          },
          "required": true
        },
        "deprecated": false
      },
      "delete": {
        "operationId": "api_gas_types_id_delete",
        "tags": [
          "GasType"
        ],
        "responses": {
          "204": {
            "description": "GasType resource deleted"
          },
          "404": {
            "description": "Resource not found"
          }
        },
        "summary": "Removes the GasType resource.",
        "description": "Removes the GasType resource.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "GasType identifier",
            "required": true,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            },
            "style": "simple",
            "explode": false,
            "allowReserved": false
          }
        ],
        "deprecated": false
      },
      "patch": {
        "operationId": "api_gas_types_id_patch",
        "tags": [
          "GasType"
        ],
        "responses": {
          "200": {
            "description": "GasType resource updated",
            "content": {
              "application/ld+json": {
                "schema": {
                  "$ref": "#/components/schemas/GasType.jsonld"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GasType"
                }
              },
              "text/html": {
                "schema": {
                  "$ref": "#/components/schemas/GasType"
                }
              }
            },
            "links": {}
          },
          "400": {
            "description": "Invalid input"
          },
          "404": {
            "description": "Resource not found"
          },
          "422": {
            "description": "Unprocessable entity"
          }
        },
        "summary": "Updates the GasType resource.",
        "description": "Updates the GasType resource.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "GasType identifier",
            "required": true,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            },
            "style": "simple",
            "explode": false,
            "allowReserved": false
          }
        ],
        "requestBody": {
          "description": "The updated GasType resource",
          "content": {
            "application/merge-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/GasType"
              }
            }
          },
          "required": true
        },
        "deprecated": false
      },
      "parameters": []
    },
    "/api/intervention_questions": {
      "get": {
        "operationId": "api_intervention_questions_get_collection",
        "tags": [
          "InterventionQuestion"
        ],
        "responses": {
          "200": {
            "description": "InterventionQuestion collection",
            "content": {
              "application/ld+json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "hydra:member": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/InterventionQuestion.jsonld"
                      }
                    },
                    "hydra:totalItems": {
                      "type": "integer",
                      "minimum": 0
                    },
                    "hydra:view": {
                      "type": "object",
                      "properties": {
                        "@id": {
                          "type": "string",
                          "format": "iri-reference"
                        },
                        "@type": {
                          "type": "string"
                        },
                        "hydra:first": {
                          "type": "string",
                          "format": "iri-reference"
                        },
                        "hydra:last": {
                          "type": "string",
                          "format": "iri-reference"
                        },
                        "hydra:previous": {
                          "type": "string",
                          "format": "iri-reference"
                        },
                        "hydra:next": {
                          "type": "string",
                          "format": "iri-reference"
                        }
                      },
                      "example": {
                        "@id": "string",
                        "type": "string",
                        "hydra:first": "string",
                        "hydra:last": "string",
                        "hydra:previous": "string",
                        "hydra:next": "string"
                      }
                    },
                    "hydra:search": {
                      "type": "object",
                      "properties": {
                        "@type": {
                          "type": "string"
                        },
                        "hydra:template": {
                          "type": "string"
                        },
                        "hydra:variableRepresentation": {
                          "type": "string"
                        },
                        "hydra:mapping": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "@type": {
                                "type": "string"
                              },
                              "variable": {
                                "type": "string"
                              },
                              "property": {
                                "type": "string",
                                "nullable": true
                              },
                              "required": {
                                "type": "boolean"
                              }
                            }
                          }
                        }
                      }
                    }
                  },
                  "required": [
                    "hydra:member"
                  ]
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/InterventionQuestion"
                  }
                }
              },
              "text/html": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/InterventionQuestion"
                  }
                }
              }
            }
          }
        },
        "summary": "Retrieves the collection of InterventionQuestion resources.",
        "description": "Retrieves the collection of InterventionQuestion resources.",
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "description": "The collection page number",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "integer",
              "default": 1
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          }
        ],
        "deprecated": false
      },
      "post": {
        "operationId": "api_intervention_questions_post",
        "tags": [
          "InterventionQuestion"
        ],
        "responses": {
          "201": {
            "description": "InterventionQuestion resource created",
            "content": {
              "application/ld+json": {
                "schema": {
                  "$ref": "#/components/schemas/InterventionQuestion.jsonld"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InterventionQuestion"
                }
              },
              "text/html": {
                "schema": {
                  "$ref": "#/components/schemas/InterventionQuestion"
                }
              }
            },
            "links": {}
          },
          "400": {
            "description": "Invalid input"
          },
          "422": {
            "description": "Unprocessable entity"
          }
        },
        "summary": "Creates a InterventionQuestion resource.",
        "description": "Creates a InterventionQuestion resource.",
        "parameters": [],
        "requestBody": {
          "description": "The new InterventionQuestion resource",
          "content": {
            "application/ld+json": {
              "schema": {
                "$ref": "#/components/schemas/InterventionQuestion.jsonld"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/InterventionQuestion"
              }
            },
            "text/html": {
              "schema": {
                "$ref": "#/components/schemas/InterventionQuestion"
              }
            }
          },
          "required": true
        },
        "deprecated": false
      },
      "parameters": []
    },
    "/api/intervention_questions/{id}": {
      "get": {
        "operationId": "api_intervention_questions_id_get",
        "tags": [
          "InterventionQuestion"
        ],
        "responses": {
          "200": {
            "description": "InterventionQuestion resource",
            "content": {
              "application/ld+json": {
                "schema": {
                  "$ref": "#/components/schemas/InterventionQuestion.jsonld"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InterventionQuestion"
                }
              },
              "text/html": {
                "schema": {
                  "$ref": "#/components/schemas/InterventionQuestion"
                }
              }
            }
          },
          "404": {
            "description": "Resource not found"
          }
        },
        "summary": "Retrieves a InterventionQuestion resource.",
        "description": "Retrieves a InterventionQuestion resource.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "InterventionQuestion identifier",
            "required": true,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            },
            "style": "simple",
            "explode": false,
            "allowReserved": false
          }
        ],
        "deprecated": false
      },
      "put": {
        "operationId": "api_intervention_questions_id_put",
        "tags": [
          "InterventionQuestion"
        ],
        "responses": {
          "200": {
            "description": "InterventionQuestion resource updated",
            "content": {
              "application/ld+json": {
                "schema": {
                  "$ref": "#/components/schemas/InterventionQuestion.jsonld"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InterventionQuestion"
                }
              },
              "text/html": {
                "schema": {
                  "$ref": "#/components/schemas/InterventionQuestion"
                }
              }
            },
            "links": {}
          },
          "400": {
            "description": "Invalid input"
          },
          "404": {
            "description": "Resource not found"
          },
          "422": {
            "description": "Unprocessable entity"
          }
        },
        "summary": "Replaces the InterventionQuestion resource.",
        "description": "Replaces the InterventionQuestion resource.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "InterventionQuestion identifier",
            "required": true,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            },
            "style": "simple",
            "explode": false,
            "allowReserved": false
          }
        ],
        "requestBody": {
          "description": "The updated InterventionQuestion resource",
          "content": {
            "application/ld+json": {
              "schema": {
                "$ref": "#/components/schemas/InterventionQuestion.jsonld"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/InterventionQuestion"
              }
            },
            "text/html": {
              "schema": {
                "$ref": "#/components/schemas/InterventionQuestion"
              }
            }
          },
          "required": true
        },
        "deprecated": false
      },
      "delete": {
        "operationId": "api_intervention_questions_id_delete",
        "tags": [
          "InterventionQuestion"
        ],
        "responses": {
          "204": {
            "description": "InterventionQuestion resource deleted"
          },
          "404": {
            "description": "Resource not found"
          }
        },
        "summary": "Removes the InterventionQuestion resource.",
        "description": "Removes the InterventionQuestion resource.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "InterventionQuestion identifier",
            "required": true,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            },
            "style": "simple",
            "explode": false,
            "allowReserved": false
          }
        ],
        "deprecated": false
      },
      "patch": {
        "operationId": "api_intervention_questions_id_patch",
        "tags": [
          "InterventionQuestion"
        ],
        "responses": {
          "200": {
            "description": "InterventionQuestion resource updated",
            "content": {
              "application/ld+json": {
                "schema": {
                  "$ref": "#/components/schemas/InterventionQuestion.jsonld"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InterventionQuestion"
                }
              },
              "text/html": {
                "schema": {
                  "$ref": "#/components/schemas/InterventionQuestion"
                }
              }
            },
            "links": {}
          },
          "400": {
            "description": "Invalid input"
          },
          "404": {
            "description": "Resource not found"
          },
          "422": {
            "description": "Unprocessable entity"
          }
        },
        "summary": "Updates the InterventionQuestion resource.",
        "description": "Updates the InterventionQuestion resource.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "InterventionQuestion identifier",
            "required": true,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            },
            "style": "simple",
            "explode": false,
            "allowReserved": false
          }
        ],
        "requestBody": {
          "description": "The updated InterventionQuestion resource",
          "content": {
            "application/merge-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/InterventionQuestion"
              }
            }
          },
          "required": true
        },
        "deprecated": false
      },
      "parameters": []
    },
    "/api/intervention_types": {
      "get": {
        "operationId": "api_intervention_types_get_collection",
        "tags": [
          "InterventionType"
        ],
        "responses": {
          "200": {
            "description": "InterventionType collection",
            "content": {
              "application/ld+json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "hydra:member": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/InterventionType.jsonld"
                      }
                    },
                    "hydra:totalItems": {
                      "type": "integer",
                      "minimum": 0
                    },
                    "hydra:view": {
                      "type": "object",
                      "properties": {
                        "@id": {
                          "type": "string",
                          "format": "iri-reference"
                        },
                        "@type": {
                          "type": "string"
                        },
                        "hydra:first": {
                          "type": "string",
                          "format": "iri-reference"
                        },
                        "hydra:last": {
                          "type": "string",
                          "format": "iri-reference"
                        },
                        "hydra:previous": {
                          "type": "string",
                          "format": "iri-reference"
                        },
                        "hydra:next": {
                          "type": "string",
                          "format": "iri-reference"
                        }
                      },
                      "example": {
                        "@id": "string",
                        "type": "string",
                        "hydra:first": "string",
                        "hydra:last": "string",
                        "hydra:previous": "string",
                        "hydra:next": "string"
                      }
                    },
                    "hydra:search": {
                      "type": "object",
                      "properties": {
                        "@type": {
                          "type": "string"
                        },
                        "hydra:template": {
                          "type": "string"
                        },
                        "hydra:variableRepresentation": {
                          "type": "string"
                        },
                        "hydra:mapping": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "@type": {
                                "type": "string"
                              },
                              "variable": {
                                "type": "string"
                              },
                              "property": {
                                "type": "string",
                                "nullable": true
                              },
                              "required": {
                                "type": "boolean"
                              }
                            }
                          }
                        }
                      }
                    }
                  },
                  "required": [
                    "hydra:member"
                  ]
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/InterventionType"
                  }
                }
              },
              "text/html": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/InterventionType"
                  }
                }
              }
            }
          }
        },
        "summary": "Retrieves the collection of InterventionType resources.",
        "description": "Retrieves the collection of InterventionType resources.",
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "description": "The collection page number",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "integer",
              "default": 1
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          }
        ],
        "deprecated": false
      },
      "post": {
        "operationId": "api_intervention_types_post",
        "tags": [
          "InterventionType"
        ],
        "responses": {
          "201": {
            "description": "InterventionType resource created",
            "content": {
              "application/ld+json": {
                "schema": {
                  "$ref": "#/components/schemas/InterventionType.jsonld"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InterventionType"
                }
              },
              "text/html": {
                "schema": {
                  "$ref": "#/components/schemas/InterventionType"
                }
              }
            },
            "links": {}
          },
          "400": {
            "description": "Invalid input"
          },
          "422": {
            "description": "Unprocessable entity"
          }
        },
        "summary": "Creates a InterventionType resource.",
        "description": "Creates a InterventionType resource.",
        "parameters": [],
        "requestBody": {
          "description": "The new InterventionType resource",
          "content": {
            "application/ld+json": {
              "schema": {
                "$ref": "#/components/schemas/InterventionType.jsonld"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/InterventionType"
              }
            },
            "text/html": {
              "schema": {
                "$ref": "#/components/schemas/InterventionType"
              }
            }
          },
          "required": true
        },
        "deprecated": false
      },
      "parameters": []
    },
    "/api/intervention_types/{id}": {
      "get": {
        "operationId": "api_intervention_types_id_get",
        "tags": [
          "InterventionType"
        ],
        "responses": {
          "200": {
            "description": "InterventionType resource",
            "content": {
              "application/ld+json": {
                "schema": {
                  "$ref": "#/components/schemas/InterventionType.jsonld"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InterventionType"
                }
              },
              "text/html": {
                "schema": {
                  "$ref": "#/components/schemas/InterventionType"
                }
              }
            }
          },
          "404": {
            "description": "Resource not found"
          }
        },
        "summary": "Retrieves a InterventionType resource.",
        "description": "Retrieves a InterventionType resource.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "InterventionType identifier",
            "required": true,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            },
            "style": "simple",
            "explode": false,
            "allowReserved": false
          }
        ],
        "deprecated": false
      },
      "put": {
        "operationId": "api_intervention_types_id_put",
        "tags": [
          "InterventionType"
        ],
        "responses": {
          "200": {
            "description": "InterventionType resource updated",
            "content": {
              "application/ld+json": {
                "schema": {
                  "$ref": "#/components/schemas/InterventionType.jsonld"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InterventionType"
                }
              },
              "text/html": {
                "schema": {
                  "$ref": "#/components/schemas/InterventionType"
                }
              }
            },
            "links": {}
          },
          "400": {
            "description": "Invalid input"
          },
          "404": {
            "description": "Resource not found"
          },
          "422": {
            "description": "Unprocessable entity"
          }
        },
        "summary": "Replaces the InterventionType resource.",
        "description": "Replaces the InterventionType resource.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "InterventionType identifier",
            "required": true,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            },
            "style": "simple",
            "explode": false,
            "allowReserved": false
          }
        ],
        "requestBody": {
          "description": "The updated InterventionType resource",
          "content": {
            "application/ld+json": {
              "schema": {
                "$ref": "#/components/schemas/InterventionType.jsonld"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/InterventionType"
              }
            },
            "text/html": {
              "schema": {
                "$ref": "#/components/schemas/InterventionType"
              }
            }
          },
          "required": true
        },
        "deprecated": false
      },
      "delete": {
        "operationId": "api_intervention_types_id_delete",
        "tags": [
          "InterventionType"
        ],
        "responses": {
          "204": {
            "description": "InterventionType resource deleted"
          },
          "404": {
            "description": "Resource not found"
          }
        },
        "summary": "Removes the InterventionType resource.",
        "description": "Removes the InterventionType resource.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "InterventionType identifier",
            "required": true,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            },
            "style": "simple",
            "explode": false,
            "allowReserved": false
          }
        ],
        "deprecated": false
      },
      "patch": {
        "operationId": "api_intervention_types_id_patch",
        "tags": [
          "InterventionType"
        ],
        "responses": {
          "200": {
            "description": "InterventionType resource updated",
            "content": {
              "application/ld+json": {
                "schema": {
                  "$ref": "#/components/schemas/InterventionType.jsonld"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InterventionType"
                }
              },
              "text/html": {
                "schema": {
                  "$ref": "#/components/schemas/InterventionType"
                }
              }
            },
            "links": {}
          },
          "400": {
            "description": "Invalid input"
          },
          "404": {
            "description": "Resource not found"
          },
          "422": {
            "description": "Unprocessable entity"
          }
        },
        "summary": "Updates the InterventionType resource.",
        "description": "Updates the InterventionType resource.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "InterventionType identifier",
            "required": true,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            },
            "style": "simple",
            "explode": false,
            "allowReserved": false
          }
        ],
        "requestBody": {
          "description": "The updated InterventionType resource",
          "content": {
            "application/merge-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/InterventionType"
              }
            }
          },
          "required": true
        },
        "deprecated": false
      },
      "parameters": []
    },
    "/api/interventions": {
      "get": {
        "operationId": "api_interventions_get_collection",
        "tags": [
          "Intervention"
        ],
        "responses": {
          "200": {
            "description": "Intervention collection",
            "content": {
              "application/ld+json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "hydra:member": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Intervention.jsonld"
                      }
                    },
                    "hydra:totalItems": {
                      "type": "integer",
                      "minimum": 0
                    },
                    "hydra:view": {
                      "type": "object",
                      "properties": {
                        "@id": {
                          "type": "string",
                          "format": "iri-reference"
                        },
                        "@type": {
                          "type": "string"
                        },
                        "hydra:first": {
                          "type": "string",
                          "format": "iri-reference"
                        },
                        "hydra:last": {
                          "type": "string",
                          "format": "iri-reference"
                        },
                        "hydra:previous": {
                          "type": "string",
                          "format": "iri-reference"
                        },
                        "hydra:next": {
                          "type": "string",
                          "format": "iri-reference"
                        }
                      },
                      "example": {
                        "@id": "string",
                        "type": "string",
                        "hydra:first": "string",
                        "hydra:last": "string",
                        "hydra:previous": "string",
                        "hydra:next": "string"
                      }
                    },
                    "hydra:search": {
                      "type": "object",
                      "properties": {
                        "@type": {
                          "type": "string"
                        },
                        "hydra:template": {
                          "type": "string"
                        },
                        "hydra:variableRepresentation": {
                          "type": "string"
                        },
                        "hydra:mapping": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "@type": {
                                "type": "string"
                              },
                              "variable": {
                                "type": "string"
                              },
                              "property": {
                                "type": "string",
                                "nullable": true
                              },
                              "required": {
                                "type": "boolean"
                              }
                            }
                          }
                        }
                      }
                    }
                  },
                  "required": [
                    "hydra:member"
                  ]
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Intervention"
                  }
                }
              },
              "text/html": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Intervention"
                  }
                }
              }
            }
          }
        },
        "summary": "Retrieves the collection of Intervention resources.",
        "description": "Retrieves the collection of Intervention resources.",
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "description": "The collection page number",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "integer",
              "default": 1
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          }
        ],
        "deprecated": false
      },
      "post": {
        "operationId": "api_interventions_post",
        "tags": [
          "Intervention"
        ],
        "responses": {
          "201": {
            "description": "Intervention resource created",
            "content": {
              "application/ld+json": {
                "schema": {
                  "$ref": "#/components/schemas/Intervention.jsonld"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Intervention"
                }
              },
              "text/html": {
                "schema": {
                  "$ref": "#/components/schemas/Intervention"
                }
              }
            },
            "links": {}
          },
          "400": {
            "description": "Invalid input"
          },
          "422": {
            "description": "Unprocessable entity"
          }
        },
        "summary": "Creates a Intervention resource.",
        "description": "Creates a Intervention resource.",
        "parameters": [],
        "requestBody": {
          "description": "The new Intervention resource",
          "content": {
            "application/ld+json": {
              "schema": {
                "$ref": "#/components/schemas/Intervention.jsonld"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Intervention"
              }
            },
            "text/html": {
              "schema": {
                "$ref": "#/components/schemas/Intervention"
              }
            }
          },
          "required": true
        },
        "deprecated": false
      },
      "parameters": []
    },
    "/api/interventions/{id}": {
      "get": {
        "operationId": "api_interventions_id_get",
        "tags": [
          "Intervention"
        ],
        "responses": {
          "200": {
            "description": "Intervention resource",
            "content": {
              "application/ld+json": {
                "schema": {
                  "$ref": "#/components/schemas/Intervention.jsonld"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Intervention"
                }
              },
              "text/html": {
                "schema": {
                  "$ref": "#/components/schemas/Intervention"
                }
              }
            }
          },
          "404": {
            "description": "Resource not found"
          }
        },
        "summary": "Retrieves a Intervention resource.",
        "description": "Retrieves a Intervention resource.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Intervention identifier",
            "required": true,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            },
            "style": "simple",
            "explode": false,
            "allowReserved": false
          }
        ],
        "deprecated": false
      },
      "put": {
        "operationId": "api_interventions_id_put",
        "tags": [
          "Intervention"
        ],
        "responses": {
          "200": {
            "description": "Intervention resource updated",
            "content": {
              "application/ld+json": {
                "schema": {
                  "$ref": "#/components/schemas/Intervention.jsonld"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Intervention"
                }
              },
              "text/html": {
                "schema": {
                  "$ref": "#/components/schemas/Intervention"
                }
              }
            },
            "links": {}
          },
          "400": {
            "description": "Invalid input"
          },
          "404": {
            "description": "Resource not found"
          },
          "422": {
            "description": "Unprocessable entity"
          }
        },
        "summary": "Replaces the Intervention resource.",
        "description": "Replaces the Intervention resource.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Intervention identifier",
            "required": true,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            },
            "style": "simple",
            "explode": false,
            "allowReserved": false
          }
        ],
        "requestBody": {
          "description": "The updated Intervention resource",
          "content": {
            "application/ld+json": {
              "schema": {
                "$ref": "#/components/schemas/Intervention.jsonld"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Intervention"
              }
            },
            "text/html": {
              "schema": {
                "$ref": "#/components/schemas/Intervention"
              }
            }
          },
          "required": true
        },
        "deprecated": false
      },
      "delete": {
        "operationId": "api_interventions_id_delete",
        "tags": [
          "Intervention"
        ],
        "responses": {
          "204": {
            "description": "Intervention resource deleted"
          },
          "404": {
            "description": "Resource not found"
          }
        },
        "summary": "Removes the Intervention resource.",
        "description": "Removes the Intervention resource.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Intervention identifier",
            "required": true,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            },
            "style": "simple",
            "explode": false,
            "allowReserved": false
          }
        ],
        "deprecated": false
      },
      "patch": {
        "operationId": "api_interventions_id_patch",
        "tags": [
          "Intervention"
        ],
        "responses": {
          "200": {
            "description": "Intervention resource updated",
            "content": {
              "application/ld+json": {
                "schema": {
                  "$ref": "#/components/schemas/Intervention.jsonld"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Intervention"
                }
              },
              "text/html": {
                "schema": {
                  "$ref": "#/components/schemas/Intervention"
                }
              }
            },
            "links": {}
          },
          "400": {
            "description": "Invalid input"
          },
          "404": {
            "description": "Resource not found"
          },
          "422": {
            "description": "Unprocessable entity"
          }
        },
        "summary": "Updates the Intervention resource.",
        "description": "Updates the Intervention resource.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Intervention identifier",
            "required": true,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            },
            "style": "simple",
            "explode": false,
            "allowReserved": false
          }
        ],
        "requestBody": {
          "description": "The updated Intervention resource",
          "content": {
            "application/merge-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/Intervention"
              }
            }
          },
          "required": true
        },
        "deprecated": false
      },
      "parameters": []
    },
    "/api/locations": {
      "get": {
        "operationId": "api_locations_get_collection",
        "tags": [
          "Location"
        ],
        "responses": {
          "200": {
            "description": "Location collection",
            "content": {
              "application/ld+json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "hydra:member": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Location.jsonld"
                      }
                    },
                    "hydra:totalItems": {
                      "type": "integer",
                      "minimum": 0
                    },
                    "hydra:view": {
                      "type": "object",
                      "properties": {
                        "@id": {
                          "type": "string",
                          "format": "iri-reference"
                        },
                        "@type": {
                          "type": "string"
                        },
                        "hydra:first": {
                          "type": "string",
                          "format": "iri-reference"
                        },
                        "hydra:last": {
                          "type": "string",
                          "format": "iri-reference"
                        },
                        "hydra:previous": {
                          "type": "string",
                          "format": "iri-reference"
                        },
                        "hydra:next": {
                          "type": "string",
                          "format": "iri-reference"
                        }
                      },
                      "example": {
                        "@id": "string",
                        "type": "string",
                        "hydra:first": "string",
                        "hydra:last": "string",
                        "hydra:previous": "string",
                        "hydra:next": "string"
                      }
                    },
                    "hydra:search": {
                      "type": "object",
                      "properties": {
                        "@type": {
                          "type": "string"
                        },
                        "hydra:template": {
                          "type": "string"
                        },
                        "hydra:variableRepresentation": {
                          "type": "string"
                        },
                        "hydra:mapping": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "@type": {
                                "type": "string"
                              },
                              "variable": {
                                "type": "string"
                              },
                              "property": {
                                "type": "string",
                                "nullable": true
                              },
                              "required": {
                                "type": "boolean"
                              }
                            }
                          }
                        }
                      }
                    }
                  },
                  "required": [
                    "hydra:member"
                  ]
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Location"
                  }
                }
              },
              "text/html": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Location"
                  }
                }
              }
            }
          }
        },
        "summary": "Retrieves the collection of Location resources.",
        "description": "Retrieves the collection of Location resources.",
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "description": "The collection page number",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "integer",
              "default": 1
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          }
        ],
        "deprecated": false
      },
      "post": {
        "operationId": "api_locations_post",
        "tags": [
          "Location"
        ],
        "responses": {
          "201": {
            "description": "Location resource created",
            "content": {
              "application/ld+json": {
                "schema": {
                  "$ref": "#/components/schemas/Location.jsonld"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Location"
                }
              },
              "text/html": {
                "schema": {
                  "$ref": "#/components/schemas/Location"
                }
              }
            },
            "links": {}
          },
          "400": {
            "description": "Invalid input"
          },
          "422": {
            "description": "Unprocessable entity"
          }
        },
        "summary": "Creates a Location resource.",
        "description": "Creates a Location resource.",
        "parameters": [],
        "requestBody": {
          "description": "The new Location resource",
          "content": {
            "application/ld+json": {
              "schema": {
                "$ref": "#/components/schemas/Location.jsonld"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Location"
              }
            },
            "text/html": {
              "schema": {
                "$ref": "#/components/schemas/Location"
              }
            }
          },
          "required": true
        },
        "deprecated": false
      },
      "parameters": []
    },
    "/api/locations/{id}": {
      "get": {
        "operationId": "api_locations_id_get",
        "tags": [
          "Location"
        ],
        "responses": {
          "200": {
            "description": "Location resource",
            "content": {
              "application/ld+json": {
                "schema": {
                  "$ref": "#/components/schemas/Location.jsonld"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Location"
                }
              },
              "text/html": {
                "schema": {
                  "$ref": "#/components/schemas/Location"
                }
              }
            }
          },
          "404": {
            "description": "Resource not found"
          }
        },
        "summary": "Retrieves a Location resource.",
        "description": "Retrieves a Location resource.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Location identifier",
            "required": true,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            },
            "style": "simple",
            "explode": false,
            "allowReserved": false
          }
        ],
        "deprecated": false
      },
      "put": {
        "operationId": "api_locations_id_put",
        "tags": [
          "Location"
        ],
        "responses": {
          "200": {
            "description": "Location resource updated",
            "content": {
              "application/ld+json": {
                "schema": {
                  "$ref": "#/components/schemas/Location.jsonld"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Location"
                }
              },
              "text/html": {
                "schema": {
                  "$ref": "#/components/schemas/Location"
                }
              }
            },
            "links": {}
          },
          "400": {
            "description": "Invalid input"
          },
          "404": {
            "description": "Resource not found"
          },
          "422": {
            "description": "Unprocessable entity"
          }
        },
        "summary": "Replaces the Location resource.",
        "description": "Replaces the Location resource.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Location identifier",
            "required": true,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            },
            "style": "simple",
            "explode": false,
            "allowReserved": false
          }
        ],
        "requestBody": {
          "description": "The updated Location resource",
          "content": {
            "application/ld+json": {
              "schema": {
                "$ref": "#/components/schemas/Location.jsonld"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Location"
              }
            },
            "text/html": {
              "schema": {
                "$ref": "#/components/schemas/Location"
              }
            }
          },
          "required": true
        },
        "deprecated": false
      },
      "delete": {
        "operationId": "api_locations_id_delete",
        "tags": [
          "Location"
        ],
        "responses": {
          "204": {
            "description": "Location resource deleted"
          },
          "404": {
            "description": "Resource not found"
          }
        },
        "summary": "Removes the Location resource.",
        "description": "Removes the Location resource.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Location identifier",
            "required": true,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            },
            "style": "simple",
            "explode": false,
            "allowReserved": false
          }
        ],
        "deprecated": false
      },
      "patch": {
        "operationId": "api_locations_id_patch",
        "tags": [
          "Location"
        ],
        "responses": {
          "200": {
            "description": "Location resource updated",
            "content": {
              "application/ld+json": {
                "schema": {
                  "$ref": "#/components/schemas/Location.jsonld"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Location"
                }
              },
              "text/html": {
                "schema": {
                  "$ref": "#/components/schemas/Location"
                }
              }
            },
            "links": {}
          },
          "400": {
            "description": "Invalid input"
          },
          "404": {
            "description": "Resource not found"
          },
          "422": {
            "description": "Unprocessable entity"
          }
        },
        "summary": "Updates the Location resource.",
        "description": "Updates the Location resource.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Location identifier",
            "required": true,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            },
            "style": "simple",
            "explode": false,
            "allowReserved": false
          }
        ],
        "requestBody": {
          "description": "The updated Location resource",
          "content": {
            "application/merge-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/Location"
              }
            }
          },
          "required": true
        },
        "deprecated": false
      },
      "parameters": []
    },
    "/api/login_check": {
      "post": {
        "operationId": "login_check_post",
        "tags": [
          "Login Check"
        ],
        "responses": {
          "200": {
            "description": "User token created",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "token": {
                      "readOnly": true,
                      "type": "string",
                      "nullable": false
                    }
                  },
                  "required": [
                    "token"
                  ]
                }
              }
            }
          }
        },
        "summary": "Creates a user token.",
        "description": "Creates a user token.",
        "requestBody": {
          "description": "The login data",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "username": {
                    "type": "string",
                    "nullable": false
                  },
                  "password": {
                    "type": "string",
                    "nullable": false
                  }
                },
                "required": [
                  "username",
                  "password"
                ]
              }
            }
          },
          "required": true
        }
      },
      "parameters": []
    },
    "/api/models": {
      "get": {
        "operationId": "api_models_get_collection",
        "tags": [
          "Model"
        ],
        "responses": {
          "200": {
            "description": "Model collection",
            "content": {
              "application/ld+json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "hydra:member": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Model.jsonld"
                      }
                    },
                    "hydra:totalItems": {
                      "type": "integer",
                      "minimum": 0
                    },
                    "hydra:view": {
                      "type": "object",
                      "properties": {
                        "@id": {
                          "type": "string",
                          "format": "iri-reference"
                        },
                        "@type": {
                          "type": "string"
                        },
                        "hydra:first": {
                          "type": "string",
                          "format": "iri-reference"
                        },
                        "hydra:last": {
                          "type": "string",
                          "format": "iri-reference"
                        },
                        "hydra:previous": {
                          "type": "string",
                          "format": "iri-reference"
                        },
                        "hydra:next": {
                          "type": "string",
                          "format": "iri-reference"
                        }
                      },
                      "example": {
                        "@id": "string",
                        "type": "string",
                        "hydra:first": "string",
                        "hydra:last": "string",
                        "hydra:previous": "string",
                        "hydra:next": "string"
                      }
                    },
                    "hydra:search": {
                      "type": "object",
                      "properties": {
                        "@type": {
                          "type": "string"
                        },
                        "hydra:template": {
                          "type": "string"
                        },
                        "hydra:variableRepresentation": {
                          "type": "string"
                        },
                        "hydra:mapping": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "@type": {
                                "type": "string"
                              },
                              "variable": {
                                "type": "string"
                              },
                              "property": {
                                "type": "string",
                                "nullable": true
                              },
                              "required": {
                                "type": "boolean"
                              }
                            }
                          }
                        }
                      }
                    }
                  },
                  "required": [
                    "hydra:member"
                  ]
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Model"
                  }
                }
              },
              "text/html": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Model"
                  }
                }
              }
            }
          }
        },
        "summary": "Retrieves the collection of Model resources.",
        "description": "Retrieves the collection of Model resources.",
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "description": "The collection page number",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "integer",
              "default": 1
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          }
        ],
        "deprecated": false
      },
      "post": {
        "operationId": "api_models_post",
        "tags": [
          "Model"
        ],
        "responses": {
          "201": {
            "description": "Model resource created",
            "content": {
              "application/ld+json": {
                "schema": {
                  "$ref": "#/components/schemas/Model.jsonld"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Model"
                }
              },
              "text/html": {
                "schema": {
                  "$ref": "#/components/schemas/Model"
                }
              }
            },
            "links": {}
          },
          "400": {
            "description": "Invalid input"
          },
          "422": {
            "description": "Unprocessable entity"
          }
        },
        "summary": "Creates a Model resource.",
        "description": "Creates a Model resource.",
        "parameters": [],
        "requestBody": {
          "description": "The new Model resource",
          "content": {
            "application/ld+json": {
              "schema": {
                "$ref": "#/components/schemas/Model.jsonld"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Model"
              }
            },
            "text/html": {
              "schema": {
                "$ref": "#/components/schemas/Model"
              }
            }
          },
          "required": true
        },
        "deprecated": false
      },
      "parameters": []
    },
    "/api/models/{id}": {
      "get": {
        "operationId": "api_models_id_get",
        "tags": [
          "Model"
        ],
        "responses": {
          "200": {
            "description": "Model resource",
            "content": {
              "application/ld+json": {
                "schema": {
                  "$ref": "#/components/schemas/Model.jsonld"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Model"
                }
              },
              "text/html": {
                "schema": {
                  "$ref": "#/components/schemas/Model"
                }
              }
            }
          },
          "404": {
            "description": "Resource not found"
          }
        },
        "summary": "Retrieves a Model resource.",
        "description": "Retrieves a Model resource.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Model identifier",
            "required": true,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            },
            "style": "simple",
            "explode": false,
            "allowReserved": false
          }
        ],
        "deprecated": false
      },
      "put": {
        "operationId": "api_models_id_put",
        "tags": [
          "Model"
        ],
        "responses": {
          "200": {
            "description": "Model resource updated",
            "content": {
              "application/ld+json": {
                "schema": {
                  "$ref": "#/components/schemas/Model.jsonld"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Model"
                }
              },
              "text/html": {
                "schema": {
                  "$ref": "#/components/schemas/Model"
                }
              }
            },
            "links": {}
          },
          "400": {
            "description": "Invalid input"
          },
          "404": {
            "description": "Resource not found"
          },
          "422": {
            "description": "Unprocessable entity"
          }
        },
        "summary": "Replaces the Model resource.",
        "description": "Replaces the Model resource.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Model identifier",
            "required": true,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            },
            "style": "simple",
            "explode": false,
            "allowReserved": false
          }
        ],
        "requestBody": {
          "description": "The updated Model resource",
          "content": {
            "application/ld+json": {
              "schema": {
                "$ref": "#/components/schemas/Model.jsonld"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Model"
              }
            },
            "text/html": {
              "schema": {
                "$ref": "#/components/schemas/Model"
              }
            }
          },
          "required": true
        },
        "deprecated": false
      },
      "delete": {
        "operationId": "api_models_id_delete",
        "tags": [
          "Model"
        ],
        "responses": {
          "204": {
            "description": "Model resource deleted"
          },
          "404": {
            "description": "Resource not found"
          }
        },
        "summary": "Removes the Model resource.",
        "description": "Removes the Model resource.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Model identifier",
            "required": true,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            },
            "style": "simple",
            "explode": false,
            "allowReserved": false
          }
        ],
        "deprecated": false
      },
      "patch": {
        "operationId": "api_models_id_patch",
        "tags": [
          "Model"
        ],
        "responses": {
          "200": {
            "description": "Model resource updated",
            "content": {
              "application/ld+json": {
                "schema": {
                  "$ref": "#/components/schemas/Model.jsonld"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Model"
                }
              },
              "text/html": {
                "schema": {
                  "$ref": "#/components/schemas/Model"
                }
              }
            },
            "links": {}
          },
          "400": {
            "description": "Invalid input"
          },
          "404": {
            "description": "Resource not found"
          },
          "422": {
            "description": "Unprocessable entity"
          }
        },
        "summary": "Updates the Model resource.",
        "description": "Updates the Model resource.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Model identifier",
            "required": true,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            },
            "style": "simple",
            "explode": false,
            "allowReserved": false
          }
        ],
        "requestBody": {
          "description": "The updated Model resource",
          "content": {
            "application/merge-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/Model"
              }
            }
          },
          "required": true
        },
        "deprecated": false
      },
      "parameters": []
    },
    "/api/nfc_tags": {
      "get": {
        "operationId": "api_nfc_tags_get_collection",
        "tags": [
          "NfcTag"
        ],
        "responses": {
          "200": {
            "description": "NfcTag collection",
            "content": {
              "application/ld+json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "hydra:member": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/NfcTag.jsonld"
                      }
                    },
                    "hydra:totalItems": {
                      "type": "integer",
                      "minimum": 0
                    },
                    "hydra:view": {
                      "type": "object",
                      "properties": {
                        "@id": {
                          "type": "string",
                          "format": "iri-reference"
                        },
                        "@type": {
                          "type": "string"
                        },
                        "hydra:first": {
                          "type": "string",
                          "format": "iri-reference"
                        },
                        "hydra:last": {
                          "type": "string",
                          "format": "iri-reference"
                        },
                        "hydra:previous": {
                          "type": "string",
                          "format": "iri-reference"
                        },
                        "hydra:next": {
                          "type": "string",
                          "format": "iri-reference"
                        }
                      },
                      "example": {
                        "@id": "string",
                        "type": "string",
                        "hydra:first": "string",
                        "hydra:last": "string",
                        "hydra:previous": "string",
                        "hydra:next": "string"
                      }
                    },
                    "hydra:search": {
                      "type": "object",
                      "properties": {
                        "@type": {
                          "type": "string"
                        },
                        "hydra:template": {
                          "type": "string"
                        },
                        "hydra:variableRepresentation": {
                          "type": "string"
                        },
                        "hydra:mapping": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "@type": {
                                "type": "string"
                              },
                              "variable": {
                                "type": "string"
                              },
                              "property": {
                                "type": "string",
                                "nullable": true
                              },
                              "required": {
                                "type": "boolean"
                              }
                            }
                          }
                        }
                      }
                    }
                  },
                  "required": [
                    "hydra:member"
                  ]
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/NfcTag"
                  }
                }
              },
              "text/html": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/NfcTag"
                  }
                }
              }
            }
          }
        },
        "summary": "Retrieves the collection of NfcTag resources.",
        "description": "Retrieves the collection of NfcTag resources.",
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "description": "The collection page number",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "integer",
              "default": 1
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          }
        ],
        "deprecated": false
      },
      "post": {
        "operationId": "api_nfc_tags_post",
        "tags": [
          "NfcTag"
        ],
        "responses": {
          "201": {
            "description": "NfcTag resource created",
            "content": {
              "application/ld+json": {
                "schema": {
                  "$ref": "#/components/schemas/NfcTag.jsonld"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NfcTag"
                }
              },
              "text/html": {
                "schema": {
                  "$ref": "#/components/schemas/NfcTag"
                }
              }
            },
            "links": {}
          },
          "400": {
            "description": "Invalid input"
          },
          "422": {
            "description": "Unprocessable entity"
          }
        },
        "summary": "Creates a NfcTag resource.",
        "description": "Creates a NfcTag resource.",
        "parameters": [],
        "requestBody": {
          "description": "The new NfcTag resource",
          "content": {
            "application/ld+json": {
              "schema": {
                "$ref": "#/components/schemas/NfcTag.jsonld"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/NfcTag"
              }
            },
            "text/html": {
              "schema": {
                "$ref": "#/components/schemas/NfcTag"
              }
            }
          },
          "required": true
        },
        "deprecated": false
      },
      "parameters": []
    },
    "/api/nfc_tags/{id}": {
      "get": {
        "operationId": "api_nfc_tags_id_get",
        "tags": [
          "NfcTag"
        ],
        "responses": {
          "200": {
            "description": "NfcTag resource",
            "content": {
              "application/ld+json": {
                "schema": {
                  "$ref": "#/components/schemas/NfcTag.jsonld"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NfcTag"
                }
              },
              "text/html": {
                "schema": {
                  "$ref": "#/components/schemas/NfcTag"
                }
              }
            }
          },
          "404": {
            "description": "Resource not found"
          }
        },
        "summary": "Retrieves a NfcTag resource.",
        "description": "Retrieves a NfcTag resource.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "NfcTag identifier",
            "required": true,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            },
            "style": "simple",
            "explode": false,
            "allowReserved": false
          }
        ],
        "deprecated": false
      },
      "put": {
        "operationId": "api_nfc_tags_id_put",
        "tags": [
          "NfcTag"
        ],
        "responses": {
          "200": {
            "description": "NfcTag resource updated",
            "content": {
              "application/ld+json": {
                "schema": {
                  "$ref": "#/components/schemas/NfcTag.jsonld"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NfcTag"
                }
              },
              "text/html": {
                "schema": {
                  "$ref": "#/components/schemas/NfcTag"
                }
              }
            },
            "links": {}
          },
          "400": {
            "description": "Invalid input"
          },
          "404": {
            "description": "Resource not found"
          },
          "422": {
            "description": "Unprocessable entity"
          }
        },
        "summary": "Replaces the NfcTag resource.",
        "description": "Replaces the NfcTag resource.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "NfcTag identifier",
            "required": true,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            },
            "style": "simple",
            "explode": false,
            "allowReserved": false
          }
        ],
        "requestBody": {
          "description": "The updated NfcTag resource",
          "content": {
            "application/ld+json": {
              "schema": {
                "$ref": "#/components/schemas/NfcTag.jsonld"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/NfcTag"
              }
            },
            "text/html": {
              "schema": {
                "$ref": "#/components/schemas/NfcTag"
              }
            }
          },
          "required": true
        },
        "deprecated": false
      },
      "delete": {
        "operationId": "api_nfc_tags_id_delete",
        "tags": [
          "NfcTag"
        ],
        "responses": {
          "204": {
            "description": "NfcTag resource deleted"
          },
          "404": {
            "description": "Resource not found"
          }
        },
        "summary": "Removes the NfcTag resource.",
        "description": "Removes the NfcTag resource.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "NfcTag identifier",
            "required": true,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            },
            "style": "simple",
            "explode": false,
            "allowReserved": false
          }
        ],
        "deprecated": false
      },
      "patch": {
        "operationId": "api_nfc_tags_id_patch",
        "tags": [
          "NfcTag"
        ],
        "responses": {
          "200": {
            "description": "NfcTag resource updated",
            "content": {
              "application/ld+json": {
                "schema": {
                  "$ref": "#/components/schemas/NfcTag.jsonld"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NfcTag"
                }
              },
              "text/html": {
                "schema": {
                  "$ref": "#/components/schemas/NfcTag"
                }
              }
            },
            "links": {}
          },
          "400": {
            "description": "Invalid input"
          },
          "404": {
            "description": "Resource not found"
          },
          "422": {
            "description": "Unprocessable entity"
          }
        },
        "summary": "Updates the NfcTag resource.",
        "description": "Updates the NfcTag resource.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "NfcTag identifier",
            "required": true,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            },
            "style": "simple",
            "explode": false,
            "allowReserved": false
          }
        ],
        "requestBody": {
          "description": "The updated NfcTag resource",
          "content": {
            "application/merge-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/NfcTag"
              }
            }
          },
          "required": true
        },
        "deprecated": false
      },
      "parameters": []
    },
    "/api/people": {
      "get": {
        "operationId": "api_people_get_collection",
        "tags": [
          "Person"
        ],
        "responses": {
          "200": {
            "description": "Person collection",
            "content": {
              "application/ld+json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "hydra:member": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Person.jsonld"
                      }
                    },
                    "hydra:totalItems": {
                      "type": "integer",
                      "minimum": 0
                    },
                    "hydra:view": {
                      "type": "object",
                      "properties": {
                        "@id": {
                          "type": "string",
                          "format": "iri-reference"
                        },
                        "@type": {
                          "type": "string"
                        },
                        "hydra:first": {
                          "type": "string",
                          "format": "iri-reference"
                        },
                        "hydra:last": {
                          "type": "string",
                          "format": "iri-reference"
                        },
                        "hydra:previous": {
                          "type": "string",
                          "format": "iri-reference"
                        },
                        "hydra:next": {
                          "type": "string",
                          "format": "iri-reference"
                        }
                      },
                      "example": {
                        "@id": "string",
                        "type": "string",
                        "hydra:first": "string",
                        "hydra:last": "string",
                        "hydra:previous": "string",
                        "hydra:next": "string"
                      }
                    },
                    "hydra:search": {
                      "type": "object",
                      "properties": {
                        "@type": {
                          "type": "string"
                        },
                        "hydra:template": {
                          "type": "string"
                        },
                        "hydra:variableRepresentation": {
                          "type": "string"
                        },
                        "hydra:mapping": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "@type": {
                                "type": "string"
                              },
                              "variable": {
                                "type": "string"
                              },
                              "property": {
                                "type": "string",
                                "nullable": true
                              },
                              "required": {
                                "type": "boolean"
                              }
                            }
                          }
                        }
                      }
                    }
                  },
                  "required": [
                    "hydra:member"
                  ]
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Person"
                  }
                }
              },
              "text/html": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Person"
                  }
                }
              }
            }
          }
        },
        "summary": "Retrieves the collection of Person resources.",
        "description": "Retrieves the collection of Person resources.",
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "description": "The collection page number",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "integer",
              "default": 1
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          }
        ],
        "deprecated": false
      },
      "post": {
        "operationId": "api_people_post",
        "tags": [
          "Person"
        ],
        "responses": {
          "201": {
            "description": "Person resource created",
            "content": {
              "application/ld+json": {
                "schema": {
                  "$ref": "#/components/schemas/Person.jsonld"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Person"
                }
              },
              "text/html": {
                "schema": {
                  "$ref": "#/components/schemas/Person"
                }
              }
            },
            "links": {}
          },
          "400": {
            "description": "Invalid input"
          },
          "422": {
            "description": "Unprocessable entity"
          }
        },
        "summary": "Creates a Person resource.",
        "description": "Creates a Person resource.",
        "parameters": [],
        "requestBody": {
          "description": "The new Person resource",
          "content": {
            "application/ld+json": {
              "schema": {
                "$ref": "#/components/schemas/Person.jsonld"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Person"
              }
            },
            "text/html": {
              "schema": {
                "$ref": "#/components/schemas/Person"
              }
            }
          },
          "required": true
        },
        "deprecated": false
      },
      "parameters": []
    },
    "/api/people/{id}": {
      "get": {
        "operationId": "api_people_id_get",
        "tags": [
          "Person"
        ],
        "responses": {
          "200": {
            "description": "Person resource",
            "content": {
              "application/ld+json": {
                "schema": {
                  "$ref": "#/components/schemas/Person.jsonld"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Person"
                }
              },
              "text/html": {
                "schema": {
                  "$ref": "#/components/schemas/Person"
                }
              }
            }
          },
          "404": {
            "description": "Resource not found"
          }
        },
        "summary": "Retrieves a Person resource.",
        "description": "Retrieves a Person resource.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Person identifier",
            "required": true,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            },
            "style": "simple",
            "explode": false,
            "allowReserved": false
          }
        ],
        "deprecated": false
      },
      "put": {
        "operationId": "api_people_id_put",
        "tags": [
          "Person"
        ],
        "responses": {
          "200": {
            "description": "Person resource updated",
            "content": {
              "application/ld+json": {
                "schema": {
                  "$ref": "#/components/schemas/Person.jsonld"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Person"
                }
              },
              "text/html": {
                "schema": {
                  "$ref": "#/components/schemas/Person"
                }
              }
            },
            "links": {}
          },
          "400": {
            "description": "Invalid input"
          },
          "404": {
            "description": "Resource not found"
          },
          "422": {
            "description": "Unprocessable entity"
          }
        },
        "summary": "Replaces the Person resource.",
        "description": "Replaces the Person resource.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Person identifier",
            "required": true,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            },
            "style": "simple",
            "explode": false,
            "allowReserved": false
          }
        ],
        "requestBody": {
          "description": "The updated Person resource",
          "content": {
            "application/ld+json": {
              "schema": {
                "$ref": "#/components/schemas/Person.jsonld"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Person"
              }
            },
            "text/html": {
              "schema": {
                "$ref": "#/components/schemas/Person"
              }
            }
          },
          "required": true
        },
        "deprecated": false
      },
      "delete": {
        "operationId": "api_people_id_delete",
        "tags": [
          "Person"
        ],
        "responses": {
          "204": {
            "description": "Person resource deleted"
          },
          "404": {
            "description": "Resource not found"
          }
        },
        "summary": "Removes the Person resource.",
        "description": "Removes the Person resource.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Person identifier",
            "required": true,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            },
            "style": "simple",
            "explode": false,
            "allowReserved": false
          }
        ],
        "deprecated": false
      },
      "patch": {
        "operationId": "api_people_id_patch",
        "tags": [
          "Person"
        ],
        "responses": {
          "200": {
            "description": "Person resource updated",
            "content": {
              "application/ld+json": {
                "schema": {
                  "$ref": "#/components/schemas/Person.jsonld"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Person"
                }
              },
              "text/html": {
                "schema": {
                  "$ref": "#/components/schemas/Person"
                }
              }
            },
            "links": {}
          },
          "400": {
            "description": "Invalid input"
          },
          "404": {
            "description": "Resource not found"
          },
          "422": {
            "description": "Unprocessable entity"
          }
        },
        "summary": "Updates the Person resource.",
        "description": "Updates the Person resource.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Person identifier",
            "required": true,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            },
            "style": "simple",
            "explode": false,
            "allowReserved": false
          }
        ],
        "requestBody": {
          "description": "The updated Person resource",
          "content": {
            "application/merge-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/Person"
              }
            }
          },
          "required": true
        },
        "deprecated": false
      },
      "parameters": []
    },
    "/api/placements": {
      "get": {
        "operationId": "api_placements_get_collection",
        "tags": [
          "Placement"
        ],
        "responses": {
          "200": {
            "description": "Placement collection",
            "content": {
              "application/ld+json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "hydra:member": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Placement.jsonld"
                      }
                    },
                    "hydra:totalItems": {
                      "type": "integer",
                      "minimum": 0
                    },
                    "hydra:view": {
                      "type": "object",
                      "properties": {
                        "@id": {
                          "type": "string",
                          "format": "iri-reference"
                        },
                        "@type": {
                          "type": "string"
                        },
                        "hydra:first": {
                          "type": "string",
                          "format": "iri-reference"
                        },
                        "hydra:last": {
                          "type": "string",
                          "format": "iri-reference"
                        },
                        "hydra:previous": {
                          "type": "string",
                          "format": "iri-reference"
                        },
                        "hydra:next": {
                          "type": "string",
                          "format": "iri-reference"
                        }
                      },
                      "example": {
                        "@id": "string",
                        "type": "string",
                        "hydra:first": "string",
                        "hydra:last": "string",
                        "hydra:previous": "string",
                        "hydra:next": "string"
                      }
                    },
                    "hydra:search": {
                      "type": "object",
                      "properties": {
                        "@type": {
                          "type": "string"
                        },
                        "hydra:template": {
                          "type": "string"
                        },
                        "hydra:variableRepresentation": {
                          "type": "string"
                        },
                        "hydra:mapping": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "@type": {
                                "type": "string"
                              },
                              "variable": {
                                "type": "string"
                              },
                              "property": {
                                "type": "string",
                                "nullable": true
                              },
                              "required": {
                                "type": "boolean"
                              }
                            }
                          }
                        }
                      }
                    }
                  },
                  "required": [
                    "hydra:member"
                  ]
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Placement"
                  }
                }
              },
              "text/html": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Placement"
                  }
                }
              }
            }
          }
        },
        "summary": "Retrieves the collection of Placement resources.",
        "description": "Retrieves the collection of Placement resources.",
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "description": "The collection page number",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "integer",
              "default": 1
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          }
        ],
        "deprecated": false
      },
      "post": {
        "operationId": "api_placements_post",
        "tags": [
          "Placement"
        ],
        "responses": {
          "201": {
            "description": "Placement resource created",
            "content": {
              "application/ld+json": {
                "schema": {
                  "$ref": "#/components/schemas/Placement.jsonld"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Placement"
                }
              },
              "text/html": {
                "schema": {
                  "$ref": "#/components/schemas/Placement"
                }
              }
            },
            "links": {}
          },
          "400": {
            "description": "Invalid input"
          },
          "422": {
            "description": "Unprocessable entity"
          }
        },
        "summary": "Creates a Placement resource.",
        "description": "Creates a Placement resource.",
        "parameters": [],
        "requestBody": {
          "description": "The new Placement resource",
          "content": {
            "application/ld+json": {
              "schema": {
                "$ref": "#/components/schemas/Placement.jsonld"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Placement"
              }
            },
            "text/html": {
              "schema": {
                "$ref": "#/components/schemas/Placement"
              }
            }
          },
          "required": true
        },
        "deprecated": false
      },
      "parameters": []
    },
    "/api/placements/{id}": {
      "get": {
        "operationId": "api_placements_id_get",
        "tags": [
          "Placement"
        ],
        "responses": {
          "200": {
            "description": "Placement resource",
            "content": {
              "application/ld+json": {
                "schema": {
                  "$ref": "#/components/schemas/Placement.jsonld"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Placement"
                }
              },
              "text/html": {
                "schema": {
                  "$ref": "#/components/schemas/Placement"
                }
              }
            }
          },
          "404": {
            "description": "Resource not found"
          }
        },
        "summary": "Retrieves a Placement resource.",
        "description": "Retrieves a Placement resource.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Placement identifier",
            "required": true,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            },
            "style": "simple",
            "explode": false,
            "allowReserved": false
          }
        ],
        "deprecated": false
      },
      "put": {
        "operationId": "api_placements_id_put",
        "tags": [
          "Placement"
        ],
        "responses": {
          "200": {
            "description": "Placement resource updated",
            "content": {
              "application/ld+json": {
                "schema": {
                  "$ref": "#/components/schemas/Placement.jsonld"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Placement"
                }
              },
              "text/html": {
                "schema": {
                  "$ref": "#/components/schemas/Placement"
                }
              }
            },
            "links": {}
          },
          "400": {
            "description": "Invalid input"
          },
          "404": {
            "description": "Resource not found"
          },
          "422": {
            "description": "Unprocessable entity"
          }
        },
        "summary": "Replaces the Placement resource.",
        "description": "Replaces the Placement resource.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Placement identifier",
            "required": true,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            },
            "style": "simple",
            "explode": false,
            "allowReserved": false
          }
        ],
        "requestBody": {
          "description": "The updated Placement resource",
          "content": {
            "application/ld+json": {
              "schema": {
                "$ref": "#/components/schemas/Placement.jsonld"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Placement"
              }
            },
            "text/html": {
              "schema": {
                "$ref": "#/components/schemas/Placement"
              }
            }
          },
          "required": true
        },
        "deprecated": false
      },
      "delete": {
        "operationId": "api_placements_id_delete",
        "tags": [
          "Placement"
        ],
        "responses": {
          "204": {
            "description": "Placement resource deleted"
          },
          "404": {
            "description": "Resource not found"
          }
        },
        "summary": "Removes the Placement resource.",
        "description": "Removes the Placement resource.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Placement identifier",
            "required": true,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            },
            "style": "simple",
            "explode": false,
            "allowReserved": false
          }
        ],
        "deprecated": false
      },
      "patch": {
        "operationId": "api_placements_id_patch",
        "tags": [
          "Placement"
        ],
        "responses": {
          "200": {
            "description": "Placement resource updated",
            "content": {
              "application/ld+json": {
                "schema": {
                  "$ref": "#/components/schemas/Placement.jsonld"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Placement"
                }
              },
              "text/html": {
                "schema": {
                  "$ref": "#/components/schemas/Placement"
                }
              }
            },
            "links": {}
          },
          "400": {
            "description": "Invalid input"
          },
          "404": {
            "description": "Resource not found"
          },
          "422": {
            "description": "Unprocessable entity"
          }
        },
        "summary": "Updates the Placement resource.",
        "description": "Updates the Placement resource.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Placement identifier",
            "required": true,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            },
            "style": "simple",
            "explode": false,
            "allowReserved": false
          }
        ],
        "requestBody": {
          "description": "The updated Placement resource",
          "content": {
            "application/merge-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/Placement"
              }
            }
          },
          "required": true
        },
        "deprecated": false
      },
      "parameters": []
    },
    "/api/sites": {
      "get": {
        "operationId": "api_sites_get_collection",
        "tags": [
          "Site"
        ],
        "responses": {
          "200": {
            "description": "Site collection",
            "content": {
              "application/ld+json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "hydra:member": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Site.jsonld"
                      }
                    },
                    "hydra:totalItems": {
                      "type": "integer",
                      "minimum": 0
                    },
                    "hydra:view": {
                      "type": "object",
                      "properties": {
                        "@id": {
                          "type": "string",
                          "format": "iri-reference"
                        },
                        "@type": {
                          "type": "string"
                        },
                        "hydra:first": {
                          "type": "string",
                          "format": "iri-reference"
                        },
                        "hydra:last": {
                          "type": "string",
                          "format": "iri-reference"
                        },
                        "hydra:previous": {
                          "type": "string",
                          "format": "iri-reference"
                        },
                        "hydra:next": {
                          "type": "string",
                          "format": "iri-reference"
                        }
                      },
                      "example": {
                        "@id": "string",
                        "type": "string",
                        "hydra:first": "string",
                        "hydra:last": "string",
                        "hydra:previous": "string",
                        "hydra:next": "string"
                      }
                    },
                    "hydra:search": {
                      "type": "object",
                      "properties": {
                        "@type": {
                          "type": "string"
                        },
                        "hydra:template": {
                          "type": "string"
                        },
                        "hydra:variableRepresentation": {
                          "type": "string"
                        },
                        "hydra:mapping": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "@type": {
                                "type": "string"
                              },
                              "variable": {
                                "type": "string"
                              },
                              "property": {
                                "type": "string",
                                "nullable": true
                              },
                              "required": {
                                "type": "boolean"
                              }
                            }
                          }
                        }
                      }
                    }
                  },
                  "required": [
                    "hydra:member"
                  ]
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Site"
                  }
                }
              },
              "text/html": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Site"
                  }
                }
              }
            }
          }
        },
        "summary": "Retrieves the collection of Site resources.",
        "description": "Retrieves the collection of Site resources.",
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "description": "The collection page number",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "integer",
              "default": 1
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          }
        ],
        "deprecated": false
      },
      "post": {
        "operationId": "api_sites_post",
        "tags": [
          "Site"
        ],
        "responses": {
          "201": {
            "description": "Site resource created",
            "content": {
              "application/ld+json": {
                "schema": {
                  "$ref": "#/components/schemas/Site.jsonld"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Site"
                }
              },
              "text/html": {
                "schema": {
                  "$ref": "#/components/schemas/Site"
                }
              }
            },
            "links": {}
          },
          "400": {
            "description": "Invalid input"
          },
          "422": {
            "description": "Unprocessable entity"
          }
        },
        "summary": "Creates a Site resource.",
        "description": "Creates a Site resource.",
        "parameters": [],
        "requestBody": {
          "description": "The new Site resource",
          "content": {
            "application/ld+json": {
              "schema": {
                "$ref": "#/components/schemas/Site.jsonld"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Site"
              }
            },
            "text/html": {
              "schema": {
                "$ref": "#/components/schemas/Site"
              }
            }
          },
          "required": true
        },
        "deprecated": false
      },
      "parameters": []
    },
    "/api/sites/{id}": {
      "get": {
        "operationId": "api_sites_id_get",
        "tags": [
          "Site"
        ],
        "responses": {
          "200": {
            "description": "Site resource",
            "content": {
              "application/ld+json": {
                "schema": {
                  "$ref": "#/components/schemas/Site.jsonld"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Site"
                }
              },
              "text/html": {
                "schema": {
                  "$ref": "#/components/schemas/Site"
                }
              }
            }
          },
          "404": {
            "description": "Resource not found"
          }
        },
        "summary": "Retrieves a Site resource.",
        "description": "Retrieves a Site resource.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Site identifier",
            "required": true,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            },
            "style": "simple",
            "explode": false,
            "allowReserved": false
          }
        ],
        "deprecated": false
      },
      "put": {
        "operationId": "api_sites_id_put",
        "tags": [
          "Site"
        ],
        "responses": {
          "200": {
            "description": "Site resource updated",
            "content": {
              "application/ld+json": {
                "schema": {
                  "$ref": "#/components/schemas/Site.jsonld"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Site"
                }
              },
              "text/html": {
                "schema": {
                  "$ref": "#/components/schemas/Site"
                }
              }
            },
            "links": {}
          },
          "400": {
            "description": "Invalid input"
          },
          "404": {
            "description": "Resource not found"
          },
          "422": {
            "description": "Unprocessable entity"
          }
        },
        "summary": "Replaces the Site resource.",
        "description": "Replaces the Site resource.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Site identifier",
            "required": true,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            },
            "style": "simple",
            "explode": false,
            "allowReserved": false
          }
        ],
        "requestBody": {
          "description": "The updated Site resource",
          "content": {
            "application/ld+json": {
              "schema": {
                "$ref": "#/components/schemas/Site.jsonld"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Site"
              }
            },
            "text/html": {
              "schema": {
                "$ref": "#/components/schemas/Site"
              }
            }
          },
          "required": true
        },
        "deprecated": false
      },
      "delete": {
        "operationId": "api_sites_id_delete",
        "tags": [
          "Site"
        ],
        "responses": {
          "204": {
            "description": "Site resource deleted"
          },
          "404": {
            "description": "Resource not found"
          }
        },
        "summary": "Removes the Site resource.",
        "description": "Removes the Site resource.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Site identifier",
            "required": true,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            },
            "style": "simple",
            "explode": false,
            "allowReserved": false
          }
        ],
        "deprecated": false
      },
      "patch": {
        "operationId": "api_sites_id_patch",
        "tags": [
          "Site"
        ],
        "responses": {
          "200": {
            "description": "Site resource updated",
            "content": {
              "application/ld+json": {
                "schema": {
                  "$ref": "#/components/schemas/Site.jsonld"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Site"
                }
              },
              "text/html": {
                "schema": {
                  "$ref": "#/components/schemas/Site"
                }
              }
            },
            "links": {}
          },
          "400": {
            "description": "Invalid input"
          },
          "404": {
            "description": "Resource not found"
          },
          "422": {
            "description": "Unprocessable entity"
          }
        },
        "summary": "Updates the Site resource.",
        "description": "Updates the Site resource.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Site identifier",
            "required": true,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            },
            "style": "simple",
            "explode": false,
            "allowReserved": false
          }
        ],
        "requestBody": {
          "description": "The updated Site resource",
          "content": {
            "application/merge-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/Site"
              }
            }
          },
          "required": true
        },
        "deprecated": false
      },
      "parameters": []
    },
    "/api/users": {
      "get": {
        "operationId": "api_users_get_collection",
        "tags": [
          "User"
        ],
        "responses": {
          "200": {
            "description": "User collection",
            "content": {
              "application/ld+json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "hydra:member": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/User.jsonld"
                      }
                    },
                    "hydra:totalItems": {
                      "type": "integer",
                      "minimum": 0
                    },
                    "hydra:view": {
                      "type": "object",
                      "properties": {
                        "@id": {
                          "type": "string",
                          "format": "iri-reference"
                        },
                        "@type": {
                          "type": "string"
                        },
                        "hydra:first": {
                          "type": "string",
                          "format": "iri-reference"
                        },
                        "hydra:last": {
                          "type": "string",
                          "format": "iri-reference"
                        },
                        "hydra:previous": {
                          "type": "string",
                          "format": "iri-reference"
                        },
                        "hydra:next": {
                          "type": "string",
                          "format": "iri-reference"
                        }
                      },
                      "example": {
                        "@id": "string",
                        "type": "string",
                        "hydra:first": "string",
                        "hydra:last": "string",
                        "hydra:previous": "string",
                        "hydra:next": "string"
                      }
                    },
                    "hydra:search": {
                      "type": "object",
                      "properties": {
                        "@type": {
                          "type": "string"
                        },
                        "hydra:template": {
                          "type": "string"
                        },
                        "hydra:variableRepresentation": {
                          "type": "string"
                        },
                        "hydra:mapping": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "@type": {
                                "type": "string"
                              },
                              "variable": {
                                "type": "string"
                              },
                              "property": {
                                "type": "string",
                                "nullable": true
                              },
                              "required": {
                                "type": "boolean"
                              }
                            }
                          }
                        }
                      }
                    }
                  },
                  "required": [
                    "hydra:member"
                  ]
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/User"
                  }
                }
              },
              "text/html": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/User"
                  }
                }
              }
            }
          }
        },
        "summary": "Retrieves the collection of User resources.",
        "description": "Retrieves the collection of User resources.",
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "description": "The collection page number",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "integer",
              "default": 1
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          }
        ],
        "deprecated": false
      },
      "post": {
        "operationId": "api_users_post",
        "tags": [
          "User"
        ],
        "responses": {
          "201": {
            "description": "User resource created",
            "content": {
              "application/ld+json": {
                "schema": {
                  "$ref": "#/components/schemas/User.jsonld"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/User"
                }
              },
              "text/html": {
                "schema": {
                  "$ref": "#/components/schemas/User"
                }
              }
            },
            "links": {}
          },
          "400": {
            "description": "Invalid input"
          },
          "422": {
            "description": "Unprocessable entity"
          }
        },
        "summary": "Creates a User resource.",
        "description": "Creates a User resource.",
        "parameters": [],
        "requestBody": {
          "description": "The new User resource",
          "content": {
            "application/ld+json": {
              "schema": {
                "$ref": "#/components/schemas/User.jsonld"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/User"
              }
            },
            "text/html": {
              "schema": {
                "$ref": "#/components/schemas/User"
              }
            }
          },
          "required": true
        },
        "deprecated": false
      },
      "parameters": []
    },
    "/api/users/{id}": {
      "get": {
        "operationId": "api_users_id_get",
        "tags": [
          "User"
        ],
        "responses": {
          "200": {
            "description": "User resource",
            "content": {
              "application/ld+json": {
                "schema": {
                  "$ref": "#/components/schemas/User.jsonld"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/User"
                }
              },
              "text/html": {
                "schema": {
                  "$ref": "#/components/schemas/User"
                }
              }
            }
          },
          "404": {
            "description": "Resource not found"
          }
        },
        "summary": "Retrieves a User resource.",
        "description": "Retrieves a User resource.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "User identifier",
            "required": true,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            },
            "style": "simple",
            "explode": false,
            "allowReserved": false
          }
        ],
        "deprecated": false
      },
      "put": {
        "operationId": "api_users_id_put",
        "tags": [
          "User"
        ],
        "responses": {
          "200": {
            "description": "User resource updated",
            "content": {
              "application/ld+json": {
                "schema": {
                  "$ref": "#/components/schemas/User.jsonld"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/User"
                }
              },
              "text/html": {
                "schema": {
                  "$ref": "#/components/schemas/User"
                }
              }
            },
            "links": {}
          },
          "400": {
            "description": "Invalid input"
          },
          "404": {
            "description": "Resource not found"
          },
          "422": {
            "description": "Unprocessable entity"
          }
        },
        "summary": "Replaces the User resource.",
        "description": "Replaces the User resource.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "User identifier",
            "required": true,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            },
            "style": "simple",
            "explode": false,
            "allowReserved": false
          }
        ],
        "requestBody": {
          "description": "The updated User resource",
          "content": {
            "application/ld+json": {
              "schema": {
                "$ref": "#/components/schemas/User.jsonld"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/User"
              }
            },
            "text/html": {
              "schema": {
                "$ref": "#/components/schemas/User"
              }
            }
          },
          "required": true
        },
        "deprecated": false
      },
      "delete": {
        "operationId": "api_users_id_delete",
        "tags": [
          "User"
        ],
        "responses": {
          "204": {
            "description": "User resource deleted"
          },
          "404": {
            "description": "Resource not found"
          }
        },
        "summary": "Removes the User resource.",
        "description": "Removes the User resource.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "User identifier",
            "required": true,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            },
            "style": "simple",
            "explode": false,
            "allowReserved": false
          }
        ],
        "deprecated": false
      },
      "patch": {
        "operationId": "api_users_id_patch",
        "tags": [
          "User"
        ],
        "responses": {
          "200": {
            "description": "User resource updated",
            "content": {
              "application/ld+json": {
                "schema": {
                  "$ref": "#/components/schemas/User.jsonld"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/User"
                }
              },
              "text/html": {
                "schema": {
                  "$ref": "#/components/schemas/User"
                }
              }
            },
            "links": {}
          },
          "400": {
            "description": "Invalid input"
          },
          "404": {
            "description": "Resource not found"
          },
          "422": {
            "description": "Unprocessable entity"
          }
        },
        "summary": "Updates the User resource.",
        "description": "Updates the User resource.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "User identifier",
            "required": true,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            },
            "style": "simple",
            "explode": false,
            "allowReserved": false
          }
        ],
        "requestBody": {
          "description": "The updated User resource",
          "content": {
            "application/merge-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/User"
              }
            }
          },
          "required": true
        },
        "deprecated": false
      },
      "parameters": []
    }
  },
  "components": {
    "schemas": {
      "Brand": {
        "type": "object",
        "description": "",
        "deprecated": false,
        "properties": {
          "id": {
            "readOnly": true,
            "type": "integer"
          },
          "name": {
            "type": "string"
          },
          "savNumber": {
            "type": "string",
            "nullable": true
          },
          "savLink": {
            "type": "string",
            "nullable": true
          },
          "models": {
            "type": "array",
            "items": {
              "type": "string",
              "format": "iri-reference"
            }
          },
          "equipment": {
            "type": "array",
            "items": {
              "type": "string",
              "format": "iri-reference"
            }
          }
        }
      },
      "Brand.jsonld": {
        "type": "object",
        "description": "",
        "deprecated": false,
        "properties": {
          "@context": {
            "readOnly": true,
            "oneOf": [
              {
                "type": "string"
              },
              {
                "type": "object",
                "properties": {
                  "@vocab": {
                    "type": "string"
                  },
                  "hydra": {
                    "type": "string",
                    "enum": [
                      "http://www.w3.org/ns/hydra/core#"
                    ]
                  }
                },
                "required": [
                  "@vocab",
                  "hydra"
                ],
                "additionalProperties": true
              }
            ]
          },
          "@id": {
            "readOnly": true,
            "type": "string"
          },
          "@type": {
            "readOnly": true,
            "type": "string"
          },
          "id": {
            "readOnly": true,
            "type": "integer"
          },
          "name": {
            "type": "string"
          },
          "savNumber": {
            "type": "string",
            "nullable": true
          },
          "savLink": {
            "type": "string",
            "nullable": true
          },
          "models": {
            "type": "array",
            "items": {
              "type": "string",
              "format": "iri-reference"
            }
          },
          "equipment": {
            "type": "array",
            "items": {
              "type": "string",
              "format": "iri-reference"
            }
          }
        }
      },
      "Client": {
        "type": "object",
        "description": "",
        "deprecated": false,
        "properties": {
          "id": {
            "readOnly": true,
            "type": "integer"
          },
          "address": {
            "type": "string"
          },
          "postCode": {
            "type": "string"
          },
          "city": {
            "type": "string"
          },
          "phone": {
            "type": "string"
          },
          "email": {
            "type": "string"
          },
          "person": {
            "type": "string",
            "format": "iri-reference",
            "nullable": true
          },
          "sites": {
            "type": "array",
            "items": {
              "type": "string",
              "format": "iri-reference"
            }
          }
        }
      },
      "Client.jsonld": {
        "type": "object",
        "description": "",
        "deprecated": false,
        "properties": {
          "@context": {
            "readOnly": true,
            "oneOf": [
              {
                "type": "string"
              },
              {
                "type": "object",
                "properties": {
                  "@vocab": {
                    "type": "string"
                  },
                  "hydra": {
                    "type": "string",
                    "enum": [
                      "http://www.w3.org/ns/hydra/core#"
                    ]
                  }
                },
                "required": [
                  "@vocab",
                  "hydra"
                ],
                "additionalProperties": true
              }
            ]
          },
          "@id": {
            "readOnly": true,
            "type": "string"
          },
          "@type": {
            "readOnly": true,
            "type": "string"
          },
          "id": {
            "readOnly": true,
            "type": "integer"
          },
          "address": {
            "type": "string"
          },
          "postCode": {
            "type": "string"
          },
          "city": {
            "type": "string"
          },
          "phone": {
            "type": "string"
          },
          "email": {
            "type": "string"
          },
          "person": {
            "type": "string",
            "format": "iri-reference",
            "nullable": true
          },
          "sites": {
            "type": "array",
            "items": {
              "type": "string",
              "format": "iri-reference"
            }
          }
        }
      },
      "Contact": {
        "type": "object",
        "description": "",
        "deprecated": false,
        "properties": {
          "id": {
            "readOnly": true,
            "type": "integer"
          },
          "lastName": {
            "type": "string"
          },
          "firstName": {
            "type": "string"
          },
          "phone": {
            "type": "string"
          },
          "email": {
            "type": "string"
          },
          "position": {
            "type": "string"
          },
          "site": {
            "type": "array",
            "items": {
              "type": "string",
              "format": "iri-reference"
            }
          }
        }
      },
      "Contact.jsonld": {
        "type": "object",
        "description": "",
        "deprecated": false,
        "properties": {
          "@context": {
            "readOnly": true,
            "oneOf": [
              {
                "type": "string"
              },
              {
                "type": "object",
                "properties": {
                  "@vocab": {
                    "type": "string"
                  },
                  "hydra": {
                    "type": "string",
                    "enum": [
                      "http://www.w3.org/ns/hydra/core#"
                    ]
                  }
                },
                "required": [
                  "@vocab",
                  "hydra"
                ],
                "additionalProperties": true
              }
            ]
          },
          "@id": {
            "readOnly": true,
            "type": "string"
          },
          "@type": {
            "readOnly": true,
            "type": "string"
          },
          "id": {
            "readOnly": true,
            "type": "integer"
          },
          "lastName": {
            "type": "string"
          },
          "firstName": {
            "type": "string"
          },
          "phone": {
            "type": "string"
          },
          "email": {
            "type": "string"
          },
          "position": {
            "type": "string"
          },
          "site": {
            "type": "array",
            "items": {
              "type": "string",
              "format": "iri-reference"
            }
          }
        }
      },
      "Equipment": {
        "type": "object",
        "description": "",
        "deprecated": false,
        "properties": {
          "id": {
            "readOnly": true,
            "type": "integer"
          },
          "installationDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "serialNumber": {
            "type": "string"
          },
          "parent": {
            "type": "string",
            "format": "iri-reference",
            "nullable": true
          },
          "equipment": {
            "type": "array",
            "items": {
              "type": "string",
              "format": "iri-reference"
            }
          },
          "nfcTag": {
            "type": "string",
            "format": "iri-reference",
            "nullable": true
          },
          "brand": {
            "type": "string",
            "format": "iri-reference",
            "nullable": true
          },
          "location": {
            "type": "string",
            "format": "iri-reference",
            "nullable": true
          },
          "locationDetail": {
            "type": "string",
            "nullable": true
          },
          "equipmentType": {
            "type": "string",
            "format": "iri-reference",
            "nullable": true
          },
          "placement": {
            "type": "string",
            "format": "iri-reference",
            "nullable": true
          },
          "remoteNumber": {
            "type": "string",
            "nullable": true
          },
          "gas": {
            "type": "string",
            "format": "iri-reference",
            "nullable": true
          },
          "gasWeight": {
            "type": "number",
            "nullable": true
          },
          "hasLeakDetection": {
            "type": "boolean",
            "nullable": true
          },
          "lastLeakDetection": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "nextLeakDetection": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "finality": {
            "type": "array",
            "items": {
              "type": "string",
              "format": "iri-reference"
            }
          },
          "capacity": {
            "type": "number",
            "nullable": true
          },
          "picto": {
            "type": "string",
            "nullable": true
          },
          "interventions": {
            "type": "array",
            "items": {
              "type": "string",
              "format": "iri-reference"
            }
          }
        }
      },
      "Equipment.jsonld": {
        "type": "object",
        "description": "",
        "deprecated": false,
        "properties": {
          "@context": {
            "readOnly": true,
            "oneOf": [
              {
                "type": "string"
              },
              {
                "type": "object",
                "properties": {
                  "@vocab": {
                    "type": "string"
                  },
                  "hydra": {
                    "type": "string",
                    "enum": [
                      "http://www.w3.org/ns/hydra/core#"
                    ]
                  }
                },
                "required": [
                  "@vocab",
                  "hydra"
                ],
                "additionalProperties": true
              }
            ]
          },
          "@id": {
            "readOnly": true,
            "type": "string"
          },
          "@type": {
            "readOnly": true,
            "type": "string"
          },
          "id": {
            "readOnly": true,
            "type": "integer"
          },
          "installationDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "serialNumber": {
            "type": "string"
          },
          "parent": {
            "type": "string",
            "format": "iri-reference",
            "nullable": true
          },
          "equipment": {
            "type": "array",
            "items": {
              "type": "string",
              "format": "iri-reference"
            }
          },
          "nfcTag": {
            "type": "string",
            "format": "iri-reference",
            "nullable": true
          },
          "brand": {
            "type": "string",
            "format": "iri-reference",
            "nullable": true
          },
          "location": {
            "type": "string",
            "format": "iri-reference",
            "nullable": true
          },
          "locationDetail": {
            "type": "string",
            "nullable": true
          },
          "equipmentType": {
            "type": "string",
            "format": "iri-reference",
            "nullable": true
          },
          "placement": {
            "type": "string",
            "format": "iri-reference",
            "nullable": true
          },
          "remoteNumber": {
            "type": "string",
            "nullable": true
          },
          "gas": {
            "type": "string",
            "format": "iri-reference",
            "nullable": true
          },
          "gasWeight": {
            "type": "number",
            "nullable": true
          },
          "hasLeakDetection": {
            "type": "boolean",
            "nullable": true
          },
          "lastLeakDetection": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "nextLeakDetection": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "finality": {
            "type": "array",
            "items": {
              "type": "string",
              "format": "iri-reference"
            }
          },
          "capacity": {
            "type": "number",
            "nullable": true
          },
          "picto": {
            "type": "string",
            "nullable": true
          },
          "interventions": {
            "type": "array",
            "items": {
              "type": "string",
              "format": "iri-reference"
            }
          }
        }
      },
      "EquipmentType": {
        "type": "object",
        "description": "",
        "deprecated": false,
        "properties": {
          "id": {
            "readOnly": true,
            "type": "integer"
          },
          "type": {
            "type": "string"
          },
          "equipment": {
            "type": "array",
            "items": {
              "type": "string",
              "format": "iri-reference"
            }
          }
        }
      },
      "EquipmentType.jsonld": {
        "type": "object",
        "description": "",
        "deprecated": false,
        "properties": {
          "@context": {
            "readOnly": true,
            "oneOf": [
              {
                "type": "string"
              },
              {
                "type": "object",
                "properties": {
                  "@vocab": {
                    "type": "string"
                  },
                  "hydra": {
                    "type": "string",
                    "enum": [
                      "http://www.w3.org/ns/hydra/core#"
                    ]
                  }
                },
                "required": [
                  "@vocab",
                  "hydra"
                ],
                "additionalProperties": true
              }
            ]
          },
          "@id": {
            "readOnly": true,
            "type": "string"
          },
          "@type": {
            "readOnly": true,
            "type": "string"
          },
          "id": {
            "readOnly": true,
            "type": "integer"
          },
          "type": {
            "type": "string"
          },
          "equipment": {
            "type": "array",
            "items": {
              "type": "string",
              "format": "iri-reference"
            }
          }
        }
      },
      "Finality": {
        "type": "object",
        "description": "",
        "deprecated": false,
        "properties": {
          "id": {
            "readOnly": true,
            "type": "integer"
          },
          "name": {
            "type": "string"
          },
          "equipment": {
            "type": "array",
            "items": {
              "type": "string",
              "format": "iri-reference"
            }
          }
        }
      },
      "Finality.jsonld": {
        "type": "object",
        "description": "",
        "deprecated": false,
        "properties": {
          "@context": {
            "readOnly": true,
            "oneOf": [
              {
                "type": "string"
              },
              {
                "type": "object",
                "properties": {
                  "@vocab": {
                    "type": "string"
                  },
                  "hydra": {
                    "type": "string",
                    "enum": [
                      "http://www.w3.org/ns/hydra/core#"
                    ]
                  }
                },
                "required": [
                  "@vocab",
                  "hydra"
                ],
                "additionalProperties": true
              }
            ]
          },
          "@id": {
            "readOnly": true,
            "type": "string"
          },
          "@type": {
            "readOnly": true,
            "type": "string"
          },
          "id": {
            "readOnly": true,
            "type": "integer"
          },
          "name": {
            "type": "string"
          },
          "equipment": {
            "type": "array",
            "items": {
              "type": "string",
              "format": "iri-reference"
            }
          }
        }
      },
      "GasType": {
        "type": "object",
        "description": "",
        "deprecated": false,
        "properties": {
          "id": {
            "readOnly": true,
            "type": "integer"
          },
          "name": {
            "type": "string"
          },
          "eqCo2PerKg": {
            "type": "number"
          },
          "equipment": {
            "type": "array",
            "items": {
              "type": "string",
              "format": "iri-reference"
            }
          }
        }
      },
      "GasType.jsonld": {
        "type": "object",
        "description": "",
        "deprecated": false,
        "properties": {
          "@context": {
            "readOnly": true,
            "oneOf": [
              {
                "type": "string"
              },
              {
                "type": "object",
                "properties": {
                  "@vocab": {
                    "type": "string"
                  },
                  "hydra": {
                    "type": "string",
                    "enum": [
                      "http://www.w3.org/ns/hydra/core#"
                    ]
                  }
                },
                "required": [
                  "@vocab",
                  "hydra"
                ],
                "additionalProperties": true
              }
            ]
          },
          "@id": {
            "readOnly": true,
            "type": "string"
          },
          "@type": {
            "readOnly": true,
            "type": "string"
          },
          "id": {
            "readOnly": true,
            "type": "integer"
          },
          "name": {
            "type": "string"
          },
          "eqCo2PerKg": {
            "type": "number"
          },
          "equipment": {
            "type": "array",
            "items": {
              "type": "string",
              "format": "iri-reference"
            }
          }
        }
      },
      "Intervention": {
        "type": "object",
        "description": "",
        "deprecated": false,
        "properties": {
          "id": {
            "readOnly": true,
            "type": "integer"
          },
          "technician": {
            "type": "string",
            "nullable": true
          },
          "enterprise": {
            "type": "string",
            "nullable": true
          },
          "person": {
            "type": "string",
            "format": "iri-reference",
            "nullable": true
          },
          "equipment": {
            "type": "string",
            "format": "iri-reference",
            "nullable": true
          },
          "response": {
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        }
      },
      "Intervention.jsonld": {
        "type": "object",
        "description": "",
        "deprecated": false,
        "properties": {
          "@context": {
            "readOnly": true,
            "oneOf": [
              {
                "type": "string"
              },
              {
                "type": "object",
                "properties": {
                  "@vocab": {
                    "type": "string"
                  },
                  "hydra": {
                    "type": "string",
                    "enum": [
                      "http://www.w3.org/ns/hydra/core#"
                    ]
                  }
                },
                "required": [
                  "@vocab",
                  "hydra"
                ],
                "additionalProperties": true
              }
            ]
          },
          "@id": {
            "readOnly": true,
            "type": "string"
          },
          "@type": {
            "readOnly": true,
            "type": "string"
          },
          "id": {
            "readOnly": true,
            "type": "integer"
          },
          "technician": {
            "type": "string",
            "nullable": true
          },
          "enterprise": {
            "type": "string",
            "nullable": true
          },
          "person": {
            "type": "string",
            "format": "iri-reference",
            "nullable": true
          },
          "equipment": {
            "type": "string",
            "format": "iri-reference",
            "nullable": true
          },
          "response": {
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        }
      },
      "InterventionQuestion": {
        "type": "object",
        "description": "",
        "deprecated": false,
        "properties": {
          "id": {
            "readOnly": true,
            "type": "integer"
          },
          "question": {
            "writeOnly": true,
            "type": "string"
          },
          "interventionTypes": {
            "type": "array",
            "items": {
              "type": "string",
              "format": "iri-reference"
            }
          }
        }
      },
      "InterventionQuestion.jsonld": {
        "type": "object",
        "description": "",
        "deprecated": false,
        "properties": {
          "@context": {
            "readOnly": true,
            "oneOf": [
              {
                "type": "string"
              },
              {
                "type": "object",
                "properties": {
                  "@vocab": {
                    "type": "string"
                  },
                  "hydra": {
                    "type": "string",
                    "enum": [
                      "http://www.w3.org/ns/hydra/core#"
                    ]
                  }
                },
                "required": [
                  "@vocab",
                  "hydra"
                ],
                "additionalProperties": true
              }
            ]
          },
          "@id": {
            "readOnly": true,
            "type": "string"
          },
          "@type": {
            "readOnly": true,
            "type": "string"
          },
          "id": {
            "readOnly": true,
            "type": "integer"
          },
          "question": {
            "writeOnly": true,
            "type": "string"
          },
          "interventionTypes": {
            "type": "array",
            "items": {
              "type": "string",
              "format": "iri-reference"
            }
          }
        }
      },
      "InterventionType": {
        "type": "object",
        "description": "",
        "deprecated": false,
        "properties": {
          "id": {
            "readOnly": true,
            "type": "integer"
          },
          "type": {
            "type": "string"
          },
          "interventionQuestion": {
            "type": "array",
            "items": {
              "type": "string",
              "format": "iri-reference"
            }
          },
          "interventions": {
            "type": "array",
            "items": {
              "type": "string",
              "format": "iri-reference"
            }
          }
        }
      },
      "InterventionType.jsonld": {
        "type": "object",
        "description": "",
        "deprecated": false,
        "properties": {
          "@context": {
            "readOnly": true,
            "oneOf": [
              {
                "type": "string"
              },
              {
                "type": "object",
                "properties": {
                  "@vocab": {
                    "type": "string"
                  },
                  "hydra": {
                    "type": "string",
                    "enum": [
                      "http://www.w3.org/ns/hydra/core#"
                    ]
                  }
                },
                "required": [
                  "@vocab",
                  "hydra"
                ],
                "additionalProperties": true
              }
            ]
          },
          "@id": {
            "readOnly": true,
            "type": "string"
          },
          "@type": {
            "readOnly": true,
            "type": "string"
          },
          "id": {
            "readOnly": true,
            "type": "integer"
          },
          "type": {
            "type": "string"
          },
          "interventionQuestion": {
            "type": "array",
            "items": {
              "type": "string",
              "format": "iri-reference"
            }
          },
          "interventions": {
            "type": "array",
            "items": {
              "type": "string",
              "format": "iri-reference"
            }
          }
        }
      },
      "Location": {
        "type": "object",
        "description": "",
        "deprecated": false,
        "properties": {
          "id": {
            "readOnly": true,
            "type": "integer"
          },
          "name": {
            "type": "string"
          },
          "equipment": {
            "type": "array",
            "items": {
              "type": "string",
              "format": "iri-reference"
            }
          }
        }
      },
      "Location.jsonld": {
        "type": "object",
        "description": "",
        "deprecated": false,
        "properties": {
          "@context": {
            "readOnly": true,
            "oneOf": [
              {
                "type": "string"
              },
              {
                "type": "object",
                "properties": {
                  "@vocab": {
                    "type": "string"
                  },
                  "hydra": {
                    "type": "string",
                    "enum": [
                      "http://www.w3.org/ns/hydra/core#"
                    ]
                  }
                },
                "required": [
                  "@vocab",
                  "hydra"
                ],
                "additionalProperties": true
              }
            ]
          },
          "@id": {
            "readOnly": true,
            "type": "string"
          },
          "@type": {
            "readOnly": true,
            "type": "string"
          },
          "id": {
            "readOnly": true,
            "type": "integer"
          },
          "name": {
            "type": "string"
          },
          "equipment": {
            "type": "array",
            "items": {
              "type": "string",
              "format": "iri-reference"
            }
          }
        }
      },
      "Model": {
        "type": "object",
        "description": "",
        "deprecated": false,
        "properties": {
          "id": {
            "readOnly": true,
            "type": "integer"
          },
          "name": {
            "type": "string"
          },
          "manuelLink": {
            "type": "string",
            "nullable": true
          },
          "brand": {
            "type": "string",
            "format": "iri-reference",
            "nullable": true
          }
        }
      },
      "Model.jsonld": {
        "type": "object",
        "description": "",
        "deprecated": false,
        "properties": {
          "@context": {
            "readOnly": true,
            "oneOf": [
              {
                "type": "string"
              },
              {
                "type": "object",
                "properties": {
                  "@vocab": {
                    "type": "string"
                  },
                  "hydra": {
                    "type": "string",
                    "enum": [
                      "http://www.w3.org/ns/hydra/core#"
                    ]
                  }
                },
                "required": [
                  "@vocab",
                  "hydra"
                ],
                "additionalProperties": true
              }
            ]
          },
          "@id": {
            "readOnly": true,
            "type": "string"
          },
          "@type": {
            "readOnly": true,
            "type": "string"
          },
          "id": {
            "readOnly": true,
            "type": "integer"
          },
          "name": {
            "type": "string"
          },
          "manuelLink": {
            "type": "string",
            "nullable": true
          },
          "brand": {
            "type": "string",
            "format": "iri-reference",
            "nullable": true
          }
        }
      },
      "NfcTag": {
        "type": "object",
        "description": "",
        "deprecated": false,
        "properties": {
          "id": {
            "readOnly": true,
            "type": "integer"
          },
          "uid": {
            "type": "string"
          }
        }
      },
      "NfcTag.jsonld": {
        "type": "object",
        "description": "",
        "deprecated": false,
        "properties": {
          "@context": {
            "readOnly": true,
            "oneOf": [
              {
                "type": "string"
              },
              {
                "type": "object",
                "properties": {
                  "@vocab": {
                    "type": "string"
                  },
                  "hydra": {
                    "type": "string",
                    "enum": [
                      "http://www.w3.org/ns/hydra/core#"
                    ]
                  }
                },
                "required": [
                  "@vocab",
                  "hydra"
                ],
                "additionalProperties": true
              }
            ]
          },
          "@id": {
            "readOnly": true,
            "type": "string"
          },
          "@type": {
            "readOnly": true,
            "type": "string"
          },
          "id": {
            "readOnly": true,
            "type": "integer"
          },
          "uid": {
            "type": "string"
          }
        }
      },
      "Person": {
        "type": "object",
        "description": "",
        "deprecated": false,
        "properties": {
          "id": {
            "readOnly": true,
            "type": "integer"
          },
          "firstName": {
            "type": "string",
            "nullable": true
          },
          "lastName": {
            "type": "string",
            "nullable": true
          },
          "phone": {
            "type": "string"
          },
          "interventions": {
            "type": "array",
            "items": {
              "type": "string",
              "format": "iri-reference"
            }
          }
        }
      },
      "Person.jsonld": {
        "type": "object",
        "description": "",
        "deprecated": false,
        "properties": {
          "@context": {
            "readOnly": true,
            "oneOf": [
              {
                "type": "string"
              },
              {
                "type": "object",
                "properties": {
                  "@vocab": {
                    "type": "string"
                  },
                  "hydra": {
                    "type": "string",
                    "enum": [
                      "http://www.w3.org/ns/hydra/core#"
                    ]
                  }
                },
                "required": [
                  "@vocab",
                  "hydra"
                ],
                "additionalProperties": true
              }
            ]
          },
          "@id": {
            "readOnly": true,
            "type": "string"
          },
          "@type": {
            "readOnly": true,
            "type": "string"
          },
          "id": {
            "readOnly": true,
            "type": "integer"
          },
          "firstName": {
            "type": "string",
            "nullable": true
          },
          "lastName": {
            "type": "string",
            "nullable": true
          },
          "phone": {
            "type": "string"
          },
          "interventions": {
            "type": "array",
            "items": {
              "type": "string",
              "format": "iri-reference"
            }
          }
        }
      },
      "Placement": {
        "type": "object",
        "description": "",
        "deprecated": false,
        "properties": {
          "id": {
            "readOnly": true,
            "type": "integer"
          },
          "type": {
            "type": "string"
          },
          "equipment": {
            "type": "array",
            "items": {
              "type": "string",
              "format": "iri-reference"
            }
          }
        }
      },
      "Placement.jsonld": {
        "type": "object",
        "description": "",
        "deprecated": false,
        "properties": {
          "@context": {
            "readOnly": true,
            "oneOf": [
              {
                "type": "string"
              },
              {
                "type": "object",
                "properties": {
                  "@vocab": {
                    "type": "string"
                  },
                  "hydra": {
                    "type": "string",
                    "enum": [
                      "http://www.w3.org/ns/hydra/core#"
                    ]
                  }
                },
                "required": [
                  "@vocab",
                  "hydra"
                ],
                "additionalProperties": true
              }
            ]
          },
          "@id": {
            "readOnly": true,
            "type": "string"
          },
          "@type": {
            "readOnly": true,
            "type": "string"
          },
          "id": {
            "readOnly": true,
            "type": "integer"
          },
          "type": {
            "type": "string"
          },
          "equipment": {
            "type": "array",
            "items": {
              "type": "string",
              "format": "iri-reference"
            }
          }
        }
      },
      "Site": {
        "type": "object",
        "description": "",
        "deprecated": false,
        "properties": {
          "id": {
            "readOnly": true,
            "type": "integer"
          },
          "address": {
            "type": "string"
          },
          "city": {
            "type": "string"
          },
          "postCode": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "client": {
            "type": "string",
            "format": "iri-reference",
            "nullable": true
          },
          "contacts": {
            "type": "array",
            "items": {
              "type": "string",
              "format": "iri-reference"
            }
          }
        }
      },
      "Site.jsonld": {
        "type": "object",
        "description": "",
        "deprecated": false,
        "properties": {
          "@context": {
            "readOnly": true,
            "oneOf": [
              {
                "type": "string"
              },
              {
                "type": "object",
                "properties": {
                  "@vocab": {
                    "type": "string"
                  },
                  "hydra": {
                    "type": "string",
                    "enum": [
                      "http://www.w3.org/ns/hydra/core#"
                    ]
                  }
                },
                "required": [
                  "@vocab",
                  "hydra"
                ],
                "additionalProperties": true
              }
            ]
          },
          "@id": {
            "readOnly": true,
            "type": "string"
          },
          "@type": {
            "readOnly": true,
            "type": "string"
          },
          "id": {
            "readOnly": true,
            "type": "integer"
          },
          "address": {
            "type": "string"
          },
          "city": {
            "type": "string"
          },
          "postCode": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "client": {
            "type": "string",
            "format": "iri-reference",
            "nullable": true
          },
          "contacts": {
            "type": "array",
            "items": {
              "type": "string",
              "format": "iri-reference"
            }
          }
        }
      },
      "User": {
        "type": "object",
        "description": "",
        "deprecated": false,
        "properties": {
          "id": {
            "readOnly": true,
            "type": "integer"
          },
          "phone": {
            "type": "string"
          },
          "roles": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "password": {
            "description": "The hashed password",
            "type": "string"
          },
          "person": {
            "type": "string",
            "format": "iri-reference",
            "nullable": true
          },
          "userIdentifier": {
            "readOnly": true,
            "description": "A visual identifier that represents this user.",
            "type": "string"
          }
        }
      },
      "User.jsonld": {
        "type": "object",
        "description": "",
        "deprecated": false,
        "properties": {
          "@context": {
            "readOnly": true,
            "oneOf": [
              {
                "type": "string"
              },
              {
                "type": "object",
                "properties": {
                  "@vocab": {
                    "type": "string"
                  },
                  "hydra": {
                    "type": "string",
                    "enum": [
                      "http://www.w3.org/ns/hydra/core#"
                    ]
                  }
                },
                "required": [
                  "@vocab",
                  "hydra"
                ],
                "additionalProperties": true
              }
            ]
          },
          "@id": {
            "readOnly": true,
            "type": "string"
          },
          "@type": {
            "readOnly": true,
            "type": "string"
          },
          "id": {
            "readOnly": true,
            "type": "integer"
          },
          "phone": {
            "type": "string"
          },
          "roles": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "password": {
            "description": "The hashed password",
            "type": "string"
          },
          "person": {
            "type": "string",
            "format": "iri-reference",
            "nullable": true
          },
          "userIdentifier": {
            "readOnly": true,
            "description": "A visual identifier that represents this user.",
            "type": "string"
          }
        }
      }
    },
    "responses": {},
    "parameters": {},
    "examples": {},
    "requestBodies": {},
    "headers": {},
    "securitySchemes": {}
  },
  "security": [],
  "tags": []
}