/**
 * This file was auto-generated by openapi-typescript.
 * Do not make direct changes to the file.
 */


/** OneOf type helpers */
type Without<T, U> = { [P in Exclude<keyof T, keyof U>]?: never };
type XOR<T, U> = (T | U) extends object ? (Without<T, U> & U) | (Without<U, T> & T) : T | U;
type OneOf<T extends any[]> = T extends [infer Only] ? Only : T extends [infer A, infer B, ...infer Rest] ? OneOf<[XOR<A, B>, ...Rest]> : never;

export interface paths {
  "/api/brands": {
    /**
     * Retrieves the collection of Brand resources.
     * @description Retrieves the collection of Brand resources.
     */
    get: operations["api_brands_get_collection"];
    /**
     * Creates a Brand resource.
     * @description Creates a Brand resource.
     */
    post: operations["api_brands_post"];
  };
  "/api/brands/{id}": {
    /**
     * Retrieves a Brand resource.
     * @description Retrieves a Brand resource.
     */
    get: operations["api_brands_id_get"];
    /**
     * Replaces the Brand resource.
     * @description Replaces the Brand resource.
     */
    put: operations["api_brands_id_put"];
    /**
     * Removes the Brand resource.
     * @description Removes the Brand resource.
     */
    delete: operations["api_brands_id_delete"];
    /**
     * Updates the Brand resource.
     * @description Updates the Brand resource.
     */
    patch: operations["api_brands_id_patch"];
  };
  "/api/clients": {
    /**
     * Retrieves the collection of Client resources.
     * @description Retrieves the collection of Client resources.
     */
    get: operations["api_clients_get_collection"];
    /**
     * Creates a Client resource.
     * @description Creates a Client resource.
     */
    post: operations["api_clients_post"];
  };
  "/api/clients/{id}": {
    /**
     * Retrieves a Client resource.
     * @description Retrieves a Client resource.
     */
    get: operations["api_clients_id_get"];
    /**
     * Replaces the Client resource.
     * @description Replaces the Client resource.
     */
    put: operations["api_clients_id_put"];
    /**
     * Removes the Client resource.
     * @description Removes the Client resource.
     */
    delete: operations["api_clients_id_delete"];
    /**
     * Updates the Client resource.
     * @description Updates the Client resource.
     */
    patch: operations["api_clients_id_patch"];
  };
  "/api/contacts": {
    /**
     * Retrieves the collection of Contact resources.
     * @description Retrieves the collection of Contact resources.
     */
    get: operations["api_contacts_get_collection"];
    /**
     * Creates a Contact resource.
     * @description Creates a Contact resource.
     */
    post: operations["api_contacts_post"];
  };
  "/api/contacts/{id}": {
    /**
     * Retrieves a Contact resource.
     * @description Retrieves a Contact resource.
     */
    get: operations["api_contacts_id_get"];
    /**
     * Replaces the Contact resource.
     * @description Replaces the Contact resource.
     */
    put: operations["api_contacts_id_put"];
    /**
     * Removes the Contact resource.
     * @description Removes the Contact resource.
     */
    delete: operations["api_contacts_id_delete"];
    /**
     * Updates the Contact resource.
     * @description Updates the Contact resource.
     */
    patch: operations["api_contacts_id_patch"];
  };
  "/api/equipment": {
    /**
     * Retrieves the collection of Equipment resources.
     * @description Retrieves the collection of Equipment resources.
     */
    get: operations["api_equipment_get_collection"];
    /**
     * Creates a Equipment resource.
     * @description Creates a Equipment resource.
     */
    post: operations["api_equipment_post"];
  };
  "/api/equipment/{id}": {
    /**
     * Retrieves a Equipment resource.
     * @description Retrieves a Equipment resource.
     */
    get: operations["api_equipment_id_get"];
    /**
     * Replaces the Equipment resource.
     * @description Replaces the Equipment resource.
     */
    put: operations["api_equipment_id_put"];
    /**
     * Removes the Equipment resource.
     * @description Removes the Equipment resource.
     */
    delete: operations["api_equipment_id_delete"];
    /**
     * Updates the Equipment resource.
     * @description Updates the Equipment resource.
     */
    patch: operations["api_equipment_id_patch"];
  };
  "/api/equipment_types": {
    /**
     * Retrieves the collection of EquipmentType resources.
     * @description Retrieves the collection of EquipmentType resources.
     */
    get: operations["api_equipment_types_get_collection"];
    /**
     * Creates a EquipmentType resource.
     * @description Creates a EquipmentType resource.
     */
    post: operations["api_equipment_types_post"];
  };
  "/api/equipment_types/{id}": {
    /**
     * Retrieves a EquipmentType resource.
     * @description Retrieves a EquipmentType resource.
     */
    get: operations["api_equipment_types_id_get"];
    /**
     * Replaces the EquipmentType resource.
     * @description Replaces the EquipmentType resource.
     */
    put: operations["api_equipment_types_id_put"];
    /**
     * Removes the EquipmentType resource.
     * @description Removes the EquipmentType resource.
     */
    delete: operations["api_equipment_types_id_delete"];
    /**
     * Updates the EquipmentType resource.
     * @description Updates the EquipmentType resource.
     */
    patch: operations["api_equipment_types_id_patch"];
  };
  "/api/finalities": {
    /**
     * Retrieves the collection of Finality resources.
     * @description Retrieves the collection of Finality resources.
     */
    get: operations["api_finalities_get_collection"];
    /**
     * Creates a Finality resource.
     * @description Creates a Finality resource.
     */
    post: operations["api_finalities_post"];
  };
  "/api/finalities/{id}": {
    /**
     * Retrieves a Finality resource.
     * @description Retrieves a Finality resource.
     */
    get: operations["api_finalities_id_get"];
    /**
     * Replaces the Finality resource.
     * @description Replaces the Finality resource.
     */
    put: operations["api_finalities_id_put"];
    /**
     * Removes the Finality resource.
     * @description Removes the Finality resource.
     */
    delete: operations["api_finalities_id_delete"];
    /**
     * Updates the Finality resource.
     * @description Updates the Finality resource.
     */
    patch: operations["api_finalities_id_patch"];
  };
  "/api/gas_types": {
    /**
     * Retrieves the collection of GasType resources.
     * @description Retrieves the collection of GasType resources.
     */
    get: operations["api_gas_types_get_collection"];
    /**
     * Creates a GasType resource.
     * @description Creates a GasType resource.
     */
    post: operations["api_gas_types_post"];
  };
  "/api/gas_types/{id}": {
    /**
     * Retrieves a GasType resource.
     * @description Retrieves a GasType resource.
     */
    get: operations["api_gas_types_id_get"];
    /**
     * Replaces the GasType resource.
     * @description Replaces the GasType resource.
     */
    put: operations["api_gas_types_id_put"];
    /**
     * Removes the GasType resource.
     * @description Removes the GasType resource.
     */
    delete: operations["api_gas_types_id_delete"];
    /**
     * Updates the GasType resource.
     * @description Updates the GasType resource.
     */
    patch: operations["api_gas_types_id_patch"];
  };
  "/api/intervention_questions": {
    /**
     * Retrieves the collection of InterventionQuestion resources.
     * @description Retrieves the collection of InterventionQuestion resources.
     */
    get: operations["api_intervention_questions_get_collection"];
    /**
     * Creates a InterventionQuestion resource.
     * @description Creates a InterventionQuestion resource.
     */
    post: operations["api_intervention_questions_post"];
  };
  "/api/intervention_questions/{id}": {
    /**
     * Retrieves a InterventionQuestion resource.
     * @description Retrieves a InterventionQuestion resource.
     */
    get: operations["api_intervention_questions_id_get"];
    /**
     * Replaces the InterventionQuestion resource.
     * @description Replaces the InterventionQuestion resource.
     */
    put: operations["api_intervention_questions_id_put"];
    /**
     * Removes the InterventionQuestion resource.
     * @description Removes the InterventionQuestion resource.
     */
    delete: operations["api_intervention_questions_id_delete"];
    /**
     * Updates the InterventionQuestion resource.
     * @description Updates the InterventionQuestion resource.
     */
    patch: operations["api_intervention_questions_id_patch"];
  };
  "/api/intervention_types": {
    /**
     * Retrieves the collection of InterventionType resources.
     * @description Retrieves the collection of InterventionType resources.
     */
    get: operations["api_intervention_types_get_collection"];
    /**
     * Creates a InterventionType resource.
     * @description Creates a InterventionType resource.
     */
    post: operations["api_intervention_types_post"];
  };
  "/api/intervention_types/{id}": {
    /**
     * Retrieves a InterventionType resource.
     * @description Retrieves a InterventionType resource.
     */
    get: operations["api_intervention_types_id_get"];
    /**
     * Replaces the InterventionType resource.
     * @description Replaces the InterventionType resource.
     */
    put: operations["api_intervention_types_id_put"];
    /**
     * Removes the InterventionType resource.
     * @description Removes the InterventionType resource.
     */
    delete: operations["api_intervention_types_id_delete"];
    /**
     * Updates the InterventionType resource.
     * @description Updates the InterventionType resource.
     */
    patch: operations["api_intervention_types_id_patch"];
  };
  "/api/interventions": {
    /**
     * Retrieves the collection of Intervention resources.
     * @description Retrieves the collection of Intervention resources.
     */
    get: operations["api_interventions_get_collection"];
    /**
     * Creates a Intervention resource.
     * @description Creates a Intervention resource.
     */
    post: operations["api_interventions_post"];
  };
  "/api/interventions/{id}": {
    /**
     * Retrieves a Intervention resource.
     * @description Retrieves a Intervention resource.
     */
    get: operations["api_interventions_id_get"];
    /**
     * Replaces the Intervention resource.
     * @description Replaces the Intervention resource.
     */
    put: operations["api_interventions_id_put"];
    /**
     * Removes the Intervention resource.
     * @description Removes the Intervention resource.
     */
    delete: operations["api_interventions_id_delete"];
    /**
     * Updates the Intervention resource.
     * @description Updates the Intervention resource.
     */
    patch: operations["api_interventions_id_patch"];
  };
  "/api/locations": {
    /**
     * Retrieves the collection of Location resources.
     * @description Retrieves the collection of Location resources.
     */
    get: operations["api_locations_get_collection"];
    /**
     * Creates a Location resource.
     * @description Creates a Location resource.
     */
    post: operations["api_locations_post"];
  };
  "/api/locations/{id}": {
    /**
     * Retrieves a Location resource.
     * @description Retrieves a Location resource.
     */
    get: operations["api_locations_id_get"];
    /**
     * Replaces the Location resource.
     * @description Replaces the Location resource.
     */
    put: operations["api_locations_id_put"];
    /**
     * Removes the Location resource.
     * @description Removes the Location resource.
     */
    delete: operations["api_locations_id_delete"];
    /**
     * Updates the Location resource.
     * @description Updates the Location resource.
     */
    patch: operations["api_locations_id_patch"];
  };
  "/api/login_check": {
    /**
     * Creates a user token.
     * @description Creates a user token.
     */
    post: operations["login_check_post"];
  };
  "/api/models": {
    /**
     * Retrieves the collection of Model resources.
     * @description Retrieves the collection of Model resources.
     */
    get: operations["api_models_get_collection"];
    /**
     * Creates a Model resource.
     * @description Creates a Model resource.
     */
    post: operations["api_models_post"];
  };
  "/api/models/{id}": {
    /**
     * Retrieves a Model resource.
     * @description Retrieves a Model resource.
     */
    get: operations["api_models_id_get"];
    /**
     * Replaces the Model resource.
     * @description Replaces the Model resource.
     */
    put: operations["api_models_id_put"];
    /**
     * Removes the Model resource.
     * @description Removes the Model resource.
     */
    delete: operations["api_models_id_delete"];
    /**
     * Updates the Model resource.
     * @description Updates the Model resource.
     */
    patch: operations["api_models_id_patch"];
  };
  "/api/nfc_tags": {
    /**
     * Retrieves the collection of NfcTag resources.
     * @description Retrieves the collection of NfcTag resources.
     */
    get: operations["api_nfc_tags_get_collection"];
    /**
     * Creates a NfcTag resource.
     * @description Creates a NfcTag resource.
     */
    post: operations["api_nfc_tags_post"];
  };
  "/api/nfc_tags/{id}": {
    /**
     * Retrieves a NfcTag resource.
     * @description Retrieves a NfcTag resource.
     */
    get: operations["api_nfc_tags_id_get"];
    /**
     * Replaces the NfcTag resource.
     * @description Replaces the NfcTag resource.
     */
    put: operations["api_nfc_tags_id_put"];
    /**
     * Removes the NfcTag resource.
     * @description Removes the NfcTag resource.
     */
    delete: operations["api_nfc_tags_id_delete"];
    /**
     * Updates the NfcTag resource.
     * @description Updates the NfcTag resource.
     */
    patch: operations["api_nfc_tags_id_patch"];
  };
  "/api/people": {
    /**
     * Retrieves the collection of Person resources.
     * @description Retrieves the collection of Person resources.
     */
    get: operations["api_people_get_collection"];
    /**
     * Creates a Person resource.
     * @description Creates a Person resource.
     */
    post: operations["api_people_post"];
  };
  "/api/people/{id}": {
    /**
     * Retrieves a Person resource.
     * @description Retrieves a Person resource.
     */
    get: operations["api_people_id_get"];
    /**
     * Replaces the Person resource.
     * @description Replaces the Person resource.
     */
    put: operations["api_people_id_put"];
    /**
     * Removes the Person resource.
     * @description Removes the Person resource.
     */
    delete: operations["api_people_id_delete"];
    /**
     * Updates the Person resource.
     * @description Updates the Person resource.
     */
    patch: operations["api_people_id_patch"];
  };
  "/api/placements": {
    /**
     * Retrieves the collection of Placement resources.
     * @description Retrieves the collection of Placement resources.
     */
    get: operations["api_placements_get_collection"];
    /**
     * Creates a Placement resource.
     * @description Creates a Placement resource.
     */
    post: operations["api_placements_post"];
  };
  "/api/placements/{id}": {
    /**
     * Retrieves a Placement resource.
     * @description Retrieves a Placement resource.
     */
    get: operations["api_placements_id_get"];
    /**
     * Replaces the Placement resource.
     * @description Replaces the Placement resource.
     */
    put: operations["api_placements_id_put"];
    /**
     * Removes the Placement resource.
     * @description Removes the Placement resource.
     */
    delete: operations["api_placements_id_delete"];
    /**
     * Updates the Placement resource.
     * @description Updates the Placement resource.
     */
    patch: operations["api_placements_id_patch"];
  };
  "/api/sites": {
    /**
     * Retrieves the collection of Site resources.
     * @description Retrieves the collection of Site resources.
     */
    get: operations["api_sites_get_collection"];
    /**
     * Creates a Site resource.
     * @description Creates a Site resource.
     */
    post: operations["api_sites_post"];
  };
  "/api/sites/{id}": {
    /**
     * Retrieves a Site resource.
     * @description Retrieves a Site resource.
     */
    get: operations["api_sites_id_get"];
    /**
     * Replaces the Site resource.
     * @description Replaces the Site resource.
     */
    put: operations["api_sites_id_put"];
    /**
     * Removes the Site resource.
     * @description Removes the Site resource.
     */
    delete: operations["api_sites_id_delete"];
    /**
     * Updates the Site resource.
     * @description Updates the Site resource.
     */
    patch: operations["api_sites_id_patch"];
  };
  "/api/users": {
    /**
     * Retrieves the collection of User resources.
     * @description Retrieves the collection of User resources.
     */
    get: operations["api_users_get_collection"];
    /**
     * Creates a User resource.
     * @description Creates a User resource.
     */
    post: operations["api_users_post"];
  };
  "/api/users/{id}": {
    /**
     * Retrieves a User resource.
     * @description Retrieves a User resource.
     */
    get: operations["api_users_id_get"];
    /**
     * Replaces the User resource.
     * @description Replaces the User resource.
     */
    put: operations["api_users_id_put"];
    /**
     * Removes the User resource.
     * @description Removes the User resource.
     */
    delete: operations["api_users_id_delete"];
    /**
     * Updates the User resource.
     * @description Updates the User resource.
     */
    patch: operations["api_users_id_patch"];
  };
}

export type webhooks = Record<string, never>;

export interface components {
  schemas: {
    Brand: {
      id?: number;
      name?: string;
      savNumber?: string | null;
      savLink?: string | null;
      models?: string[];
      equipment?: string[];
    };
    "Brand.jsonld": {
      "@context"?: OneOf<[string, {
        "@vocab": string;
        /** @enum {string} */
        hydra: "http://www.w3.org/ns/hydra/core#";
        [key: string]: unknown;
      }]>;
      "@id"?: string;
      "@type"?: string;
      id?: number;
      name?: string;
      savNumber?: string | null;
      savLink?: string | null;
      models?: string[];
      equipment?: string[];
    };
    Client: {
      id?: number;
      address?: string;
      postCode?: string;
      city?: string;
      phone?: string;
      email?: string;
      /** Format: iri-reference */
      person?: string | null;
      sites?: string[];
    };
    "Client.jsonld": {
      "@context"?: OneOf<[string, {
        "@vocab": string;
        /** @enum {string} */
        hydra: "http://www.w3.org/ns/hydra/core#";
        [key: string]: unknown;
      }]>;
      "@id"?: string;
      "@type"?: string;
      id?: number;
      address?: string;
      postCode?: string;
      city?: string;
      phone?: string;
      email?: string;
      /** Format: iri-reference */
      person?: string | null;
      sites?: string[];
    };
    Contact: {
      id?: number;
      lastName?: string;
      firstName?: string;
      phone?: string;
      email?: string;
      position?: string;
      site?: string[];
    };
    "Contact.jsonld": {
      "@context"?: OneOf<[string, {
        "@vocab": string;
        /** @enum {string} */
        hydra: "http://www.w3.org/ns/hydra/core#";
        [key: string]: unknown;
      }]>;
      "@id"?: string;
      "@type"?: string;
      id?: number;
      lastName?: string;
      firstName?: string;
      phone?: string;
      email?: string;
      position?: string;
      site?: string[];
    };
    Equipment: {
      id?: number;
      /** Format: date-time */
      installationDate?: string | null;
      serialNumber?: string;
      /** Format: iri-reference */
      parent?: string | null;
      equipment?: string[];
      /** Format: iri-reference */
      nfcTag?: string | null;
      /** Format: iri-reference */
      brand?: string | null;
      /** Format: iri-reference */
      location?: string | null;
      locationDetail?: string | null;
      /** Format: iri-reference */
      equipmentType?: string | null;
      /** Format: iri-reference */
      placement?: string | null;
      remoteNumber?: string | null;
      /** Format: iri-reference */
      gas?: string | null;
      gasWeight?: number | null;
      hasLeakDetection?: boolean | null;
      /** Format: date-time */
      lastLeakDetection?: string | null;
      /** Format: date-time */
      nextLeakDetection?: string | null;
      finality?: string[];
      capacity?: number | null;
      picto?: string | null;
      interventions?: string[];
    };
    "Equipment.jsonld": {
      "@context"?: OneOf<[string, {
        "@vocab": string;
        /** @enum {string} */
        hydra: "http://www.w3.org/ns/hydra/core#";
        [key: string]: unknown;
      }]>;
      "@id"?: string;
      "@type"?: string;
      id?: number;
      /** Format: date-time */
      installationDate?: string | null;
      serialNumber?: string;
      /** Format: iri-reference */
      parent?: string | null;
      equipment?: string[];
      /** Format: iri-reference */
      nfcTag?: string | null;
      /** Format: iri-reference */
      brand?: string | null;
      /** Format: iri-reference */
      location?: string | null;
      locationDetail?: string | null;
      /** Format: iri-reference */
      equipmentType?: string | null;
      /** Format: iri-reference */
      placement?: string | null;
      remoteNumber?: string | null;
      /** Format: iri-reference */
      gas?: string | null;
      gasWeight?: number | null;
      hasLeakDetection?: boolean | null;
      /** Format: date-time */
      lastLeakDetection?: string | null;
      /** Format: date-time */
      nextLeakDetection?: string | null;
      finality?: string[];
      capacity?: number | null;
      picto?: string | null;
      interventions?: string[];
    };
    EquipmentType: {
      id?: number;
      type?: string;
      equipment?: string[];
    };
    "EquipmentType.jsonld": {
      "@context"?: OneOf<[string, {
        "@vocab": string;
        /** @enum {string} */
        hydra: "http://www.w3.org/ns/hydra/core#";
        [key: string]: unknown;
      }]>;
      "@id"?: string;
      "@type"?: string;
      id?: number;
      type?: string;
      equipment?: string[];
    };
    Finality: {
      id?: number;
      name?: string;
      equipment?: string[];
    };
    "Finality.jsonld": {
      "@context"?: OneOf<[string, {
        "@vocab": string;
        /** @enum {string} */
        hydra: "http://www.w3.org/ns/hydra/core#";
        [key: string]: unknown;
      }]>;
      "@id"?: string;
      "@type"?: string;
      id?: number;
      name?: string;
      equipment?: string[];
    };
    GasType: {
      id?: number;
      name?: string;
      eqCo2PerKg?: number;
      equipment?: string[];
    };
    "GasType.jsonld": {
      "@context"?: OneOf<[string, {
        "@vocab": string;
        /** @enum {string} */
        hydra: "http://www.w3.org/ns/hydra/core#";
        [key: string]: unknown;
      }]>;
      "@id"?: string;
      "@type"?: string;
      id?: number;
      name?: string;
      eqCo2PerKg?: number;
      equipment?: string[];
    };
    Intervention: {
      id?: number;
      technician?: string | null;
      enterprise?: string | null;
      /** Format: iri-reference */
      person?: string | null;
      /** Format: iri-reference */
      equipment?: string | null;
      response?: string[];
    };
    "Intervention.jsonld": {
      "@context"?: OneOf<[string, {
        "@vocab": string;
        /** @enum {string} */
        hydra: "http://www.w3.org/ns/hydra/core#";
        [key: string]: unknown;
      }]>;
      "@id"?: string;
      "@type"?: string;
      id?: number;
      technician?: string | null;
      enterprise?: string | null;
      /** Format: iri-reference */
      person?: string | null;
      /** Format: iri-reference */
      equipment?: string | null;
      response?: string[];
    };
    InterventionQuestion: {
      id?: number;
      question?: string;
      interventionTypes?: string[];
    };
    "InterventionQuestion.jsonld": {
      "@context"?: OneOf<[string, {
        "@vocab": string;
        /** @enum {string} */
        hydra: "http://www.w3.org/ns/hydra/core#";
        [key: string]: unknown;
      }]>;
      "@id"?: string;
      "@type"?: string;
      id?: number;
      question?: string;
      interventionTypes?: string[];
    };
    InterventionType: {
      id?: number;
      type?: string;
      interventionQuestion?: string[];
      interventions?: string[];
    };
    "InterventionType.jsonld": {
      "@context"?: OneOf<[string, {
        "@vocab": string;
        /** @enum {string} */
        hydra: "http://www.w3.org/ns/hydra/core#";
        [key: string]: unknown;
      }]>;
      "@id"?: string;
      "@type"?: string;
      id?: number;
      type?: string;
      interventionQuestion?: string[];
      interventions?: string[];
    };
    Location: {
      id?: number;
      name?: string;
      equipment?: string[];
    };
    "Location.jsonld": {
      "@context"?: OneOf<[string, {
        "@vocab": string;
        /** @enum {string} */
        hydra: "http://www.w3.org/ns/hydra/core#";
        [key: string]: unknown;
      }]>;
      "@id"?: string;
      "@type"?: string;
      id?: number;
      name?: string;
      equipment?: string[];
    };
    Model: {
      id?: number;
      name?: string;
      manuelLink?: string | null;
      /** Format: iri-reference */
      brand?: string | null;
    };
    "Model.jsonld": {
      "@context"?: OneOf<[string, {
        "@vocab": string;
        /** @enum {string} */
        hydra: "http://www.w3.org/ns/hydra/core#";
        [key: string]: unknown;
      }]>;
      "@id"?: string;
      "@type"?: string;
      id?: number;
      name?: string;
      manuelLink?: string | null;
      /** Format: iri-reference */
      brand?: string | null;
    };
    NfcTag: {
      id?: number;
      uid?: string;
    };
    "NfcTag.jsonld": {
      "@context"?: OneOf<[string, {
        "@vocab": string;
        /** @enum {string} */
        hydra: "http://www.w3.org/ns/hydra/core#";
        [key: string]: unknown;
      }]>;
      "@id"?: string;
      "@type"?: string;
      id?: number;
      uid?: string;
    };
    Person: {
      id?: number;
      firstName?: string | null;
      lastName?: string | null;
      phone?: string;
      interventions?: string[];
    };
    "Person.jsonld": {
      "@context"?: OneOf<[string, {
        "@vocab": string;
        /** @enum {string} */
        hydra: "http://www.w3.org/ns/hydra/core#";
        [key: string]: unknown;
      }]>;
      "@id"?: string;
      "@type"?: string;
      id?: number;
      firstName?: string | null;
      lastName?: string | null;
      phone?: string;
      interventions?: string[];
    };
    Placement: {
      id?: number;
      type?: string;
      equipment?: string[];
    };
    "Placement.jsonld": {
      "@context"?: OneOf<[string, {
        "@vocab": string;
        /** @enum {string} */
        hydra: "http://www.w3.org/ns/hydra/core#";
        [key: string]: unknown;
      }]>;
      "@id"?: string;
      "@type"?: string;
      id?: number;
      type?: string;
      equipment?: string[];
    };
    Site: {
      id?: number;
      address?: string;
      city?: string;
      postCode?: string;
      name?: string;
      /** Format: iri-reference */
      client?: string | null;
      contacts?: string[];
    };
    "Site.jsonld": {
      "@context"?: OneOf<[string, {
        "@vocab": string;
        /** @enum {string} */
        hydra: "http://www.w3.org/ns/hydra/core#";
        [key: string]: unknown;
      }]>;
      "@id"?: string;
      "@type"?: string;
      id?: number;
      address?: string;
      city?: string;
      postCode?: string;
      name?: string;
      /** Format: iri-reference */
      client?: string | null;
      contacts?: string[];
    };
    User: {
      id?: number;
      phone?: string;
      roles?: string[];
      /** @description The hashed password */
      password?: string;
      /** Format: iri-reference */
      person?: string | null;
      /** @description A visual identifier that represents this user. */
      userIdentifier?: string;
    };
    "User.jsonld": {
      "@context"?: OneOf<[string, {
        "@vocab": string;
        /** @enum {string} */
        hydra: "http://www.w3.org/ns/hydra/core#";
        [key: string]: unknown;
      }]>;
      "@id"?: string;
      "@type"?: string;
      id?: number;
      phone?: string;
      roles?: string[];
      /** @description The hashed password */
      password?: string;
      /** Format: iri-reference */
      person?: string | null;
      /** @description A visual identifier that represents this user. */
      userIdentifier?: string;
    };
  };
  responses: {
  };
  parameters: {
  };
  requestBodies: {
  };
  headers: {
  };
  pathItems: never;
}

export type $defs = Record<string, never>;

export type external = Record<string, never>;

export interface operations {

  /**
   * Retrieves the collection of Brand resources.
   * @description Retrieves the collection of Brand resources.
   */
  api_brands_get_collection: {
    parameters: {
      query?: {
        /** @description The collection page number */
        page?: number;
      };
    };
    responses: {
      /** @description Brand collection */
      200: {
        content: {
          "application/ld+json": {
            "hydra:member": components["schemas"]["Brand.jsonld"][];
            "hydra:totalItems"?: number;
            /**
             * @example {
             *   "@id": "string",
             *   "type": "string",
             *   "hydra:first": "string",
             *   "hydra:last": "string",
             *   "hydra:previous": "string",
             *   "hydra:next": "string"
             * }
             */
            "hydra:view"?: {
              /** Format: iri-reference */
              "@id"?: string;
              "@type"?: string;
              /** Format: iri-reference */
              "hydra:first"?: string;
              /** Format: iri-reference */
              "hydra:last"?: string;
              /** Format: iri-reference */
              "hydra:previous"?: string;
              /** Format: iri-reference */
              "hydra:next"?: string;
            };
            "hydra:search"?: {
              "@type"?: string;
              "hydra:template"?: string;
              "hydra:variableRepresentation"?: string;
              "hydra:mapping"?: ({
                  "@type"?: string;
                  variable?: string;
                  property?: string | null;
                  required?: boolean;
                })[];
            };
          };
          "application/json": components["schemas"]["Brand"][];
          "text/html": components["schemas"]["Brand"][];
        };
      };
    };
  };
  /**
   * Creates a Brand resource.
   * @description Creates a Brand resource.
   */
  api_brands_post: {
    /** @description The new Brand resource */
    requestBody: {
      content: {
        "application/ld+json": components["schemas"]["Brand.jsonld"];
        "application/json": components["schemas"]["Brand"];
        "text/html": components["schemas"]["Brand"];
      };
    };
    responses: {
      /** @description Brand resource created */
      201: {
        content: {
          "application/ld+json": components["schemas"]["Brand.jsonld"];
          "application/json": components["schemas"]["Brand"];
          "text/html": components["schemas"]["Brand"];
        };
      };
      /** @description Invalid input */
      400: {
        content: never;
      };
      /** @description Unprocessable entity */
      422: {
        content: never;
      };
    };
  };
  /**
   * Retrieves a Brand resource.
   * @description Retrieves a Brand resource.
   */
  api_brands_id_get: {
    parameters: {
      path: {
        /** @description Brand identifier */
        id: string;
      };
    };
    responses: {
      /** @description Brand resource */
      200: {
        content: {
          "application/ld+json": components["schemas"]["Brand.jsonld"];
          "application/json": components["schemas"]["Brand"];
          "text/html": components["schemas"]["Brand"];
        };
      };
      /** @description Resource not found */
      404: {
        content: never;
      };
    };
  };
  /**
   * Replaces the Brand resource.
   * @description Replaces the Brand resource.
   */
  api_brands_id_put: {
    parameters: {
      path: {
        /** @description Brand identifier */
        id: string;
      };
    };
    /** @description The updated Brand resource */
    requestBody: {
      content: {
        "application/ld+json": components["schemas"]["Brand.jsonld"];
        "application/json": components["schemas"]["Brand"];
        "text/html": components["schemas"]["Brand"];
      };
    };
    responses: {
      /** @description Brand resource updated */
      200: {
        content: {
          "application/ld+json": components["schemas"]["Brand.jsonld"];
          "application/json": components["schemas"]["Brand"];
          "text/html": components["schemas"]["Brand"];
        };
      };
      /** @description Invalid input */
      400: {
        content: never;
      };
      /** @description Resource not found */
      404: {
        content: never;
      };
      /** @description Unprocessable entity */
      422: {
        content: never;
      };
    };
  };
  /**
   * Removes the Brand resource.
   * @description Removes the Brand resource.
   */
  api_brands_id_delete: {
    parameters: {
      path: {
        /** @description Brand identifier */
        id: string;
      };
    };
    responses: {
      /** @description Brand resource deleted */
      204: {
        content: never;
      };
      /** @description Resource not found */
      404: {
        content: never;
      };
    };
  };
  /**
   * Updates the Brand resource.
   * @description Updates the Brand resource.
   */
  api_brands_id_patch: {
    parameters: {
      path: {
        /** @description Brand identifier */
        id: string;
      };
    };
    /** @description The updated Brand resource */
    requestBody: {
      content: {
        "application/merge-patch+json": components["schemas"]["Brand"];
      };
    };
    responses: {
      /** @description Brand resource updated */
      200: {
        content: {
          "application/ld+json": components["schemas"]["Brand.jsonld"];
          "application/json": components["schemas"]["Brand"];
          "text/html": components["schemas"]["Brand"];
        };
      };
      /** @description Invalid input */
      400: {
        content: never;
      };
      /** @description Resource not found */
      404: {
        content: never;
      };
      /** @description Unprocessable entity */
      422: {
        content: never;
      };
    };
  };
  /**
   * Retrieves the collection of Client resources.
   * @description Retrieves the collection of Client resources.
   */
  api_clients_get_collection: {
    parameters: {
      query?: {
        /** @description The collection page number */
        page?: number;
      };
    };
    responses: {
      /** @description Client collection */
      200: {
        content: {
          "application/ld+json": {
            "hydra:member": components["schemas"]["Client.jsonld"][];
            "hydra:totalItems"?: number;
            /**
             * @example {
             *   "@id": "string",
             *   "type": "string",
             *   "hydra:first": "string",
             *   "hydra:last": "string",
             *   "hydra:previous": "string",
             *   "hydra:next": "string"
             * }
             */
            "hydra:view"?: {
              /** Format: iri-reference */
              "@id"?: string;
              "@type"?: string;
              /** Format: iri-reference */
              "hydra:first"?: string;
              /** Format: iri-reference */
              "hydra:last"?: string;
              /** Format: iri-reference */
              "hydra:previous"?: string;
              /** Format: iri-reference */
              "hydra:next"?: string;
            };
            "hydra:search"?: {
              "@type"?: string;
              "hydra:template"?: string;
              "hydra:variableRepresentation"?: string;
              "hydra:mapping"?: ({
                  "@type"?: string;
                  variable?: string;
                  property?: string | null;
                  required?: boolean;
                })[];
            };
          };
          "application/json": components["schemas"]["Client"][];
          "text/html": components["schemas"]["Client"][];
        };
      };
    };
  };
  /**
   * Creates a Client resource.
   * @description Creates a Client resource.
   */
  api_clients_post: {
    /** @description The new Client resource */
    requestBody: {
      content: {
        "application/ld+json": components["schemas"]["Client.jsonld"];
        "application/json": components["schemas"]["Client"];
        "text/html": components["schemas"]["Client"];
      };
    };
    responses: {
      /** @description Client resource created */
      201: {
        content: {
          "application/ld+json": components["schemas"]["Client.jsonld"];
          "application/json": components["schemas"]["Client"];
          "text/html": components["schemas"]["Client"];
        };
      };
      /** @description Invalid input */
      400: {
        content: never;
      };
      /** @description Unprocessable entity */
      422: {
        content: never;
      };
    };
  };
  /**
   * Retrieves a Client resource.
   * @description Retrieves a Client resource.
   */
  api_clients_id_get: {
    parameters: {
      path: {
        /** @description Client identifier */
        id: string;
      };
    };
    responses: {
      /** @description Client resource */
      200: {
        content: {
          "application/ld+json": components["schemas"]["Client.jsonld"];
          "application/json": components["schemas"]["Client"];
          "text/html": components["schemas"]["Client"];
        };
      };
      /** @description Resource not found */
      404: {
        content: never;
      };
    };
  };
  /**
   * Replaces the Client resource.
   * @description Replaces the Client resource.
   */
  api_clients_id_put: {
    parameters: {
      path: {
        /** @description Client identifier */
        id: string;
      };
    };
    /** @description The updated Client resource */
    requestBody: {
      content: {
        "application/ld+json": components["schemas"]["Client.jsonld"];
        "application/json": components["schemas"]["Client"];
        "text/html": components["schemas"]["Client"];
      };
    };
    responses: {
      /** @description Client resource updated */
      200: {
        content: {
          "application/ld+json": components["schemas"]["Client.jsonld"];
          "application/json": components["schemas"]["Client"];
          "text/html": components["schemas"]["Client"];
        };
      };
      /** @description Invalid input */
      400: {
        content: never;
      };
      /** @description Resource not found */
      404: {
        content: never;
      };
      /** @description Unprocessable entity */
      422: {
        content: never;
      };
    };
  };
  /**
   * Removes the Client resource.
   * @description Removes the Client resource.
   */
  api_clients_id_delete: {
    parameters: {
      path: {
        /** @description Client identifier */
        id: string;
      };
    };
    responses: {
      /** @description Client resource deleted */
      204: {
        content: never;
      };
      /** @description Resource not found */
      404: {
        content: never;
      };
    };
  };
  /**
   * Updates the Client resource.
   * @description Updates the Client resource.
   */
  api_clients_id_patch: {
    parameters: {
      path: {
        /** @description Client identifier */
        id: string;
      };
    };
    /** @description The updated Client resource */
    requestBody: {
      content: {
        "application/merge-patch+json": components["schemas"]["Client"];
      };
    };
    responses: {
      /** @description Client resource updated */
      200: {
        content: {
          "application/ld+json": components["schemas"]["Client.jsonld"];
          "application/json": components["schemas"]["Client"];
          "text/html": components["schemas"]["Client"];
        };
      };
      /** @description Invalid input */
      400: {
        content: never;
      };
      /** @description Resource not found */
      404: {
        content: never;
      };
      /** @description Unprocessable entity */
      422: {
        content: never;
      };
    };
  };
  /**
   * Retrieves the collection of Contact resources.
   * @description Retrieves the collection of Contact resources.
   */
  api_contacts_get_collection: {
    parameters: {
      query?: {
        /** @description The collection page number */
        page?: number;
      };
    };
    responses: {
      /** @description Contact collection */
      200: {
        content: {
          "application/ld+json": {
            "hydra:member": components["schemas"]["Contact.jsonld"][];
            "hydra:totalItems"?: number;
            /**
             * @example {
             *   "@id": "string",
             *   "type": "string",
             *   "hydra:first": "string",
             *   "hydra:last": "string",
             *   "hydra:previous": "string",
             *   "hydra:next": "string"
             * }
             */
            "hydra:view"?: {
              /** Format: iri-reference */
              "@id"?: string;
              "@type"?: string;
              /** Format: iri-reference */
              "hydra:first"?: string;
              /** Format: iri-reference */
              "hydra:last"?: string;
              /** Format: iri-reference */
              "hydra:previous"?: string;
              /** Format: iri-reference */
              "hydra:next"?: string;
            };
            "hydra:search"?: {
              "@type"?: string;
              "hydra:template"?: string;
              "hydra:variableRepresentation"?: string;
              "hydra:mapping"?: ({
                  "@type"?: string;
                  variable?: string;
                  property?: string | null;
                  required?: boolean;
                })[];
            };
          };
          "application/json": components["schemas"]["Contact"][];
          "text/html": components["schemas"]["Contact"][];
        };
      };
    };
  };
  /**
   * Creates a Contact resource.
   * @description Creates a Contact resource.
   */
  api_contacts_post: {
    /** @description The new Contact resource */
    requestBody: {
      content: {
        "application/ld+json": components["schemas"]["Contact.jsonld"];
        "application/json": components["schemas"]["Contact"];
        "text/html": components["schemas"]["Contact"];
      };
    };
    responses: {
      /** @description Contact resource created */
      201: {
        content: {
          "application/ld+json": components["schemas"]["Contact.jsonld"];
          "application/json": components["schemas"]["Contact"];
          "text/html": components["schemas"]["Contact"];
        };
      };
      /** @description Invalid input */
      400: {
        content: never;
      };
      /** @description Unprocessable entity */
      422: {
        content: never;
      };
    };
  };
  /**
   * Retrieves a Contact resource.
   * @description Retrieves a Contact resource.
   */
  api_contacts_id_get: {
    parameters: {
      path: {
        /** @description Contact identifier */
        id: string;
      };
    };
    responses: {
      /** @description Contact resource */
      200: {
        content: {
          "application/ld+json": components["schemas"]["Contact.jsonld"];
          "application/json": components["schemas"]["Contact"];
          "text/html": components["schemas"]["Contact"];
        };
      };
      /** @description Resource not found */
      404: {
        content: never;
      };
    };
  };
  /**
   * Replaces the Contact resource.
   * @description Replaces the Contact resource.
   */
  api_contacts_id_put: {
    parameters: {
      path: {
        /** @description Contact identifier */
        id: string;
      };
    };
    /** @description The updated Contact resource */
    requestBody: {
      content: {
        "application/ld+json": components["schemas"]["Contact.jsonld"];
        "application/json": components["schemas"]["Contact"];
        "text/html": components["schemas"]["Contact"];
      };
    };
    responses: {
      /** @description Contact resource updated */
      200: {
        content: {
          "application/ld+json": components["schemas"]["Contact.jsonld"];
          "application/json": components["schemas"]["Contact"];
          "text/html": components["schemas"]["Contact"];
        };
      };
      /** @description Invalid input */
      400: {
        content: never;
      };
      /** @description Resource not found */
      404: {
        content: never;
      };
      /** @description Unprocessable entity */
      422: {
        content: never;
      };
    };
  };
  /**
   * Removes the Contact resource.
   * @description Removes the Contact resource.
   */
  api_contacts_id_delete: {
    parameters: {
      path: {
        /** @description Contact identifier */
        id: string;
      };
    };
    responses: {
      /** @description Contact resource deleted */
      204: {
        content: never;
      };
      /** @description Resource not found */
      404: {
        content: never;
      };
    };
  };
  /**
   * Updates the Contact resource.
   * @description Updates the Contact resource.
   */
  api_contacts_id_patch: {
    parameters: {
      path: {
        /** @description Contact identifier */
        id: string;
      };
    };
    /** @description The updated Contact resource */
    requestBody: {
      content: {
        "application/merge-patch+json": components["schemas"]["Contact"];
      };
    };
    responses: {
      /** @description Contact resource updated */
      200: {
        content: {
          "application/ld+json": components["schemas"]["Contact.jsonld"];
          "application/json": components["schemas"]["Contact"];
          "text/html": components["schemas"]["Contact"];
        };
      };
      /** @description Invalid input */
      400: {
        content: never;
      };
      /** @description Resource not found */
      404: {
        content: never;
      };
      /** @description Unprocessable entity */
      422: {
        content: never;
      };
    };
  };
  /**
   * Retrieves the collection of Equipment resources.
   * @description Retrieves the collection of Equipment resources.
   */
  api_equipment_get_collection: {
    parameters: {
      query?: {
        /** @description The collection page number */
        page?: number;
      };
    };
    responses: {
      /** @description Equipment collection */
      200: {
        content: {
          "application/ld+json": {
            "hydra:member": components["schemas"]["Equipment.jsonld"][];
            "hydra:totalItems"?: number;
            /**
             * @example {
             *   "@id": "string",
             *   "type": "string",
             *   "hydra:first": "string",
             *   "hydra:last": "string",
             *   "hydra:previous": "string",
             *   "hydra:next": "string"
             * }
             */
            "hydra:view"?: {
              /** Format: iri-reference */
              "@id"?: string;
              "@type"?: string;
              /** Format: iri-reference */
              "hydra:first"?: string;
              /** Format: iri-reference */
              "hydra:last"?: string;
              /** Format: iri-reference */
              "hydra:previous"?: string;
              /** Format: iri-reference */
              "hydra:next"?: string;
            };
            "hydra:search"?: {
              "@type"?: string;
              "hydra:template"?: string;
              "hydra:variableRepresentation"?: string;
              "hydra:mapping"?: ({
                  "@type"?: string;
                  variable?: string;
                  property?: string | null;
                  required?: boolean;
                })[];
            };
          };
          "application/json": components["schemas"]["Equipment"][];
          "text/html": components["schemas"]["Equipment"][];
        };
      };
    };
  };
  /**
   * Creates a Equipment resource.
   * @description Creates a Equipment resource.
   */
  api_equipment_post: {
    /** @description The new Equipment resource */
    requestBody: {
      content: {
        "application/ld+json": components["schemas"]["Equipment.jsonld"];
        "application/json": components["schemas"]["Equipment"];
        "text/html": components["schemas"]["Equipment"];
      };
    };
    responses: {
      /** @description Equipment resource created */
      201: {
        content: {
          "application/ld+json": components["schemas"]["Equipment.jsonld"];
          "application/json": components["schemas"]["Equipment"];
          "text/html": components["schemas"]["Equipment"];
        };
      };
      /** @description Invalid input */
      400: {
        content: never;
      };
      /** @description Unprocessable entity */
      422: {
        content: never;
      };
    };
  };
  /**
   * Retrieves a Equipment resource.
   * @description Retrieves a Equipment resource.
   */
  api_equipment_id_get: {
    parameters: {
      path: {
        /** @description Equipment identifier */
        id: string;
      };
    };
    responses: {
      /** @description Equipment resource */
      200: {
        content: {
          "application/ld+json": components["schemas"]["Equipment.jsonld"];
          "application/json": components["schemas"]["Equipment"];
          "text/html": components["schemas"]["Equipment"];
        };
      };
      /** @description Resource not found */
      404: {
        content: never;
      };
    };
  };
  /**
   * Replaces the Equipment resource.
   * @description Replaces the Equipment resource.
   */
  api_equipment_id_put: {
    parameters: {
      path: {
        /** @description Equipment identifier */
        id: string;
      };
    };
    /** @description The updated Equipment resource */
    requestBody: {
      content: {
        "application/ld+json": components["schemas"]["Equipment.jsonld"];
        "application/json": components["schemas"]["Equipment"];
        "text/html": components["schemas"]["Equipment"];
      };
    };
    responses: {
      /** @description Equipment resource updated */
      200: {
        content: {
          "application/ld+json": components["schemas"]["Equipment.jsonld"];
          "application/json": components["schemas"]["Equipment"];
          "text/html": components["schemas"]["Equipment"];
        };
      };
      /** @description Invalid input */
      400: {
        content: never;
      };
      /** @description Resource not found */
      404: {
        content: never;
      };
      /** @description Unprocessable entity */
      422: {
        content: never;
      };
    };
  };
  /**
   * Removes the Equipment resource.
   * @description Removes the Equipment resource.
   */
  api_equipment_id_delete: {
    parameters: {
      path: {
        /** @description Equipment identifier */
        id: string;
      };
    };
    responses: {
      /** @description Equipment resource deleted */
      204: {
        content: never;
      };
      /** @description Resource not found */
      404: {
        content: never;
      };
    };
  };
  /**
   * Updates the Equipment resource.
   * @description Updates the Equipment resource.
   */
  api_equipment_id_patch: {
    parameters: {
      path: {
        /** @description Equipment identifier */
        id: string;
      };
    };
    /** @description The updated Equipment resource */
    requestBody: {
      content: {
        "application/merge-patch+json": components["schemas"]["Equipment"];
      };
    };
    responses: {
      /** @description Equipment resource updated */
      200: {
        content: {
          "application/ld+json": components["schemas"]["Equipment.jsonld"];
          "application/json": components["schemas"]["Equipment"];
          "text/html": components["schemas"]["Equipment"];
        };
      };
      /** @description Invalid input */
      400: {
        content: never;
      };
      /** @description Resource not found */
      404: {
        content: never;
      };
      /** @description Unprocessable entity */
      422: {
        content: never;
      };
    };
  };
  /**
   * Retrieves the collection of EquipmentType resources.
   * @description Retrieves the collection of EquipmentType resources.
   */
  api_equipment_types_get_collection: {
    parameters: {
      query?: {
        /** @description The collection page number */
        page?: number;
      };
    };
    responses: {
      /** @description EquipmentType collection */
      200: {
        content: {
          "application/ld+json": {
            "hydra:member": components["schemas"]["EquipmentType.jsonld"][];
            "hydra:totalItems"?: number;
            /**
             * @example {
             *   "@id": "string",
             *   "type": "string",
             *   "hydra:first": "string",
             *   "hydra:last": "string",
             *   "hydra:previous": "string",
             *   "hydra:next": "string"
             * }
             */
            "hydra:view"?: {
              /** Format: iri-reference */
              "@id"?: string;
              "@type"?: string;
              /** Format: iri-reference */
              "hydra:first"?: string;
              /** Format: iri-reference */
              "hydra:last"?: string;
              /** Format: iri-reference */
              "hydra:previous"?: string;
              /** Format: iri-reference */
              "hydra:next"?: string;
            };
            "hydra:search"?: {
              "@type"?: string;
              "hydra:template"?: string;
              "hydra:variableRepresentation"?: string;
              "hydra:mapping"?: ({
                  "@type"?: string;
                  variable?: string;
                  property?: string | null;
                  required?: boolean;
                })[];
            };
          };
          "application/json": components["schemas"]["EquipmentType"][];
          "text/html": components["schemas"]["EquipmentType"][];
        };
      };
    };
  };
  /**
   * Creates a EquipmentType resource.
   * @description Creates a EquipmentType resource.
   */
  api_equipment_types_post: {
    /** @description The new EquipmentType resource */
    requestBody: {
      content: {
        "application/ld+json": components["schemas"]["EquipmentType.jsonld"];
        "application/json": components["schemas"]["EquipmentType"];
        "text/html": components["schemas"]["EquipmentType"];
      };
    };
    responses: {
      /** @description EquipmentType resource created */
      201: {
        content: {
          "application/ld+json": components["schemas"]["EquipmentType.jsonld"];
          "application/json": components["schemas"]["EquipmentType"];
          "text/html": components["schemas"]["EquipmentType"];
        };
      };
      /** @description Invalid input */
      400: {
        content: never;
      };
      /** @description Unprocessable entity */
      422: {
        content: never;
      };
    };
  };
  /**
   * Retrieves a EquipmentType resource.
   * @description Retrieves a EquipmentType resource.
   */
  api_equipment_types_id_get: {
    parameters: {
      path: {
        /** @description EquipmentType identifier */
        id: string;
      };
    };
    responses: {
      /** @description EquipmentType resource */
      200: {
        content: {
          "application/ld+json": components["schemas"]["EquipmentType.jsonld"];
          "application/json": components["schemas"]["EquipmentType"];
          "text/html": components["schemas"]["EquipmentType"];
        };
      };
      /** @description Resource not found */
      404: {
        content: never;
      };
    };
  };
  /**
   * Replaces the EquipmentType resource.
   * @description Replaces the EquipmentType resource.
   */
  api_equipment_types_id_put: {
    parameters: {
      path: {
        /** @description EquipmentType identifier */
        id: string;
      };
    };
    /** @description The updated EquipmentType resource */
    requestBody: {
      content: {
        "application/ld+json": components["schemas"]["EquipmentType.jsonld"];
        "application/json": components["schemas"]["EquipmentType"];
        "text/html": components["schemas"]["EquipmentType"];
      };
    };
    responses: {
      /** @description EquipmentType resource updated */
      200: {
        content: {
          "application/ld+json": components["schemas"]["EquipmentType.jsonld"];
          "application/json": components["schemas"]["EquipmentType"];
          "text/html": components["schemas"]["EquipmentType"];
        };
      };
      /** @description Invalid input */
      400: {
        content: never;
      };
      /** @description Resource not found */
      404: {
        content: never;
      };
      /** @description Unprocessable entity */
      422: {
        content: never;
      };
    };
  };
  /**
   * Removes the EquipmentType resource.
   * @description Removes the EquipmentType resource.
   */
  api_equipment_types_id_delete: {
    parameters: {
      path: {
        /** @description EquipmentType identifier */
        id: string;
      };
    };
    responses: {
      /** @description EquipmentType resource deleted */
      204: {
        content: never;
      };
      /** @description Resource not found */
      404: {
        content: never;
      };
    };
  };
  /**
   * Updates the EquipmentType resource.
   * @description Updates the EquipmentType resource.
   */
  api_equipment_types_id_patch: {
    parameters: {
      path: {
        /** @description EquipmentType identifier */
        id: string;
      };
    };
    /** @description The updated EquipmentType resource */
    requestBody: {
      content: {
        "application/merge-patch+json": components["schemas"]["EquipmentType"];
      };
    };
    responses: {
      /** @description EquipmentType resource updated */
      200: {
        content: {
          "application/ld+json": components["schemas"]["EquipmentType.jsonld"];
          "application/json": components["schemas"]["EquipmentType"];
          "text/html": components["schemas"]["EquipmentType"];
        };
      };
      /** @description Invalid input */
      400: {
        content: never;
      };
      /** @description Resource not found */
      404: {
        content: never;
      };
      /** @description Unprocessable entity */
      422: {
        content: never;
      };
    };
  };
  /**
   * Retrieves the collection of Finality resources.
   * @description Retrieves the collection of Finality resources.
   */
  api_finalities_get_collection: {
    parameters: {
      query?: {
        /** @description The collection page number */
        page?: number;
      };
    };
    responses: {
      /** @description Finality collection */
      200: {
        content: {
          "application/ld+json": {
            "hydra:member": components["schemas"]["Finality.jsonld"][];
            "hydra:totalItems"?: number;
            /**
             * @example {
             *   "@id": "string",
             *   "type": "string",
             *   "hydra:first": "string",
             *   "hydra:last": "string",
             *   "hydra:previous": "string",
             *   "hydra:next": "string"
             * }
             */
            "hydra:view"?: {
              /** Format: iri-reference */
              "@id"?: string;
              "@type"?: string;
              /** Format: iri-reference */
              "hydra:first"?: string;
              /** Format: iri-reference */
              "hydra:last"?: string;
              /** Format: iri-reference */
              "hydra:previous"?: string;
              /** Format: iri-reference */
              "hydra:next"?: string;
            };
            "hydra:search"?: {
              "@type"?: string;
              "hydra:template"?: string;
              "hydra:variableRepresentation"?: string;
              "hydra:mapping"?: ({
                  "@type"?: string;
                  variable?: string;
                  property?: string | null;
                  required?: boolean;
                })[];
            };
          };
          "application/json": components["schemas"]["Finality"][];
          "text/html": components["schemas"]["Finality"][];
        };
      };
    };
  };
  /**
   * Creates a Finality resource.
   * @description Creates a Finality resource.
   */
  api_finalities_post: {
    /** @description The new Finality resource */
    requestBody: {
      content: {
        "application/ld+json": components["schemas"]["Finality.jsonld"];
        "application/json": components["schemas"]["Finality"];
        "text/html": components["schemas"]["Finality"];
      };
    };
    responses: {
      /** @description Finality resource created */
      201: {
        content: {
          "application/ld+json": components["schemas"]["Finality.jsonld"];
          "application/json": components["schemas"]["Finality"];
          "text/html": components["schemas"]["Finality"];
        };
      };
      /** @description Invalid input */
      400: {
        content: never;
      };
      /** @description Unprocessable entity */
      422: {
        content: never;
      };
    };
  };
  /**
   * Retrieves a Finality resource.
   * @description Retrieves a Finality resource.
   */
  api_finalities_id_get: {
    parameters: {
      path: {
        /** @description Finality identifier */
        id: string;
      };
    };
    responses: {
      /** @description Finality resource */
      200: {
        content: {
          "application/ld+json": components["schemas"]["Finality.jsonld"];
          "application/json": components["schemas"]["Finality"];
          "text/html": components["schemas"]["Finality"];
        };
      };
      /** @description Resource not found */
      404: {
        content: never;
      };
    };
  };
  /**
   * Replaces the Finality resource.
   * @description Replaces the Finality resource.
   */
  api_finalities_id_put: {
    parameters: {
      path: {
        /** @description Finality identifier */
        id: string;
      };
    };
    /** @description The updated Finality resource */
    requestBody: {
      content: {
        "application/ld+json": components["schemas"]["Finality.jsonld"];
        "application/json": components["schemas"]["Finality"];
        "text/html": components["schemas"]["Finality"];
      };
    };
    responses: {
      /** @description Finality resource updated */
      200: {
        content: {
          "application/ld+json": components["schemas"]["Finality.jsonld"];
          "application/json": components["schemas"]["Finality"];
          "text/html": components["schemas"]["Finality"];
        };
      };
      /** @description Invalid input */
      400: {
        content: never;
      };
      /** @description Resource not found */
      404: {
        content: never;
      };
      /** @description Unprocessable entity */
      422: {
        content: never;
      };
    };
  };
  /**
   * Removes the Finality resource.
   * @description Removes the Finality resource.
   */
  api_finalities_id_delete: {
    parameters: {
      path: {
        /** @description Finality identifier */
        id: string;
      };
    };
    responses: {
      /** @description Finality resource deleted */
      204: {
        content: never;
      };
      /** @description Resource not found */
      404: {
        content: never;
      };
    };
  };
  /**
   * Updates the Finality resource.
   * @description Updates the Finality resource.
   */
  api_finalities_id_patch: {
    parameters: {
      path: {
        /** @description Finality identifier */
        id: string;
      };
    };
    /** @description The updated Finality resource */
    requestBody: {
      content: {
        "application/merge-patch+json": components["schemas"]["Finality"];
      };
    };
    responses: {
      /** @description Finality resource updated */
      200: {
        content: {
          "application/ld+json": components["schemas"]["Finality.jsonld"];
          "application/json": components["schemas"]["Finality"];
          "text/html": components["schemas"]["Finality"];
        };
      };
      /** @description Invalid input */
      400: {
        content: never;
      };
      /** @description Resource not found */
      404: {
        content: never;
      };
      /** @description Unprocessable entity */
      422: {
        content: never;
      };
    };
  };
  /**
   * Retrieves the collection of GasType resources.
   * @description Retrieves the collection of GasType resources.
   */
  api_gas_types_get_collection: {
    parameters: {
      query?: {
        /** @description The collection page number */
        page?: number;
      };
    };
    responses: {
      /** @description GasType collection */
      200: {
        content: {
          "application/ld+json": {
            "hydra:member": components["schemas"]["GasType.jsonld"][];
            "hydra:totalItems"?: number;
            /**
             * @example {
             *   "@id": "string",
             *   "type": "string",
             *   "hydra:first": "string",
             *   "hydra:last": "string",
             *   "hydra:previous": "string",
             *   "hydra:next": "string"
             * }
             */
            "hydra:view"?: {
              /** Format: iri-reference */
              "@id"?: string;
              "@type"?: string;
              /** Format: iri-reference */
              "hydra:first"?: string;
              /** Format: iri-reference */
              "hydra:last"?: string;
              /** Format: iri-reference */
              "hydra:previous"?: string;
              /** Format: iri-reference */
              "hydra:next"?: string;
            };
            "hydra:search"?: {
              "@type"?: string;
              "hydra:template"?: string;
              "hydra:variableRepresentation"?: string;
              "hydra:mapping"?: ({
                  "@type"?: string;
                  variable?: string;
                  property?: string | null;
                  required?: boolean;
                })[];
            };
          };
          "application/json": components["schemas"]["GasType"][];
          "text/html": components["schemas"]["GasType"][];
        };
      };
    };
  };
  /**
   * Creates a GasType resource.
   * @description Creates a GasType resource.
   */
  api_gas_types_post: {
    /** @description The new GasType resource */
    requestBody: {
      content: {
        "application/ld+json": components["schemas"]["GasType.jsonld"];
        "application/json": components["schemas"]["GasType"];
        "text/html": components["schemas"]["GasType"];
      };
    };
    responses: {
      /** @description GasType resource created */
      201: {
        content: {
          "application/ld+json": components["schemas"]["GasType.jsonld"];
          "application/json": components["schemas"]["GasType"];
          "text/html": components["schemas"]["GasType"];
        };
      };
      /** @description Invalid input */
      400: {
        content: never;
      };
      /** @description Unprocessable entity */
      422: {
        content: never;
      };
    };
  };
  /**
   * Retrieves a GasType resource.
   * @description Retrieves a GasType resource.
   */
  api_gas_types_id_get: {
    parameters: {
      path: {
        /** @description GasType identifier */
        id: string;
      };
    };
    responses: {
      /** @description GasType resource */
      200: {
        content: {
          "application/ld+json": components["schemas"]["GasType.jsonld"];
          "application/json": components["schemas"]["GasType"];
          "text/html": components["schemas"]["GasType"];
        };
      };
      /** @description Resource not found */
      404: {
        content: never;
      };
    };
  };
  /**
   * Replaces the GasType resource.
   * @description Replaces the GasType resource.
   */
  api_gas_types_id_put: {
    parameters: {
      path: {
        /** @description GasType identifier */
        id: string;
      };
    };
    /** @description The updated GasType resource */
    requestBody: {
      content: {
        "application/ld+json": components["schemas"]["GasType.jsonld"];
        "application/json": components["schemas"]["GasType"];
        "text/html": components["schemas"]["GasType"];
      };
    };
    responses: {
      /** @description GasType resource updated */
      200: {
        content: {
          "application/ld+json": components["schemas"]["GasType.jsonld"];
          "application/json": components["schemas"]["GasType"];
          "text/html": components["schemas"]["GasType"];
        };
      };
      /** @description Invalid input */
      400: {
        content: never;
      };
      /** @description Resource not found */
      404: {
        content: never;
      };
      /** @description Unprocessable entity */
      422: {
        content: never;
      };
    };
  };
  /**
   * Removes the GasType resource.
   * @description Removes the GasType resource.
   */
  api_gas_types_id_delete: {
    parameters: {
      path: {
        /** @description GasType identifier */
        id: string;
      };
    };
    responses: {
      /** @description GasType resource deleted */
      204: {
        content: never;
      };
      /** @description Resource not found */
      404: {
        content: never;
      };
    };
  };
  /**
   * Updates the GasType resource.
   * @description Updates the GasType resource.
   */
  api_gas_types_id_patch: {
    parameters: {
      path: {
        /** @description GasType identifier */
        id: string;
      };
    };
    /** @description The updated GasType resource */
    requestBody: {
      content: {
        "application/merge-patch+json": components["schemas"]["GasType"];
      };
    };
    responses: {
      /** @description GasType resource updated */
      200: {
        content: {
          "application/ld+json": components["schemas"]["GasType.jsonld"];
          "application/json": components["schemas"]["GasType"];
          "text/html": components["schemas"]["GasType"];
        };
      };
      /** @description Invalid input */
      400: {
        content: never;
      };
      /** @description Resource not found */
      404: {
        content: never;
      };
      /** @description Unprocessable entity */
      422: {
        content: never;
      };
    };
  };
  /**
   * Retrieves the collection of InterventionQuestion resources.
   * @description Retrieves the collection of InterventionQuestion resources.
   */
  api_intervention_questions_get_collection: {
    parameters: {
      query?: {
        /** @description The collection page number */
        page?: number;
      };
    };
    responses: {
      /** @description InterventionQuestion collection */
      200: {
        content: {
          "application/ld+json": {
            "hydra:member": components["schemas"]["InterventionQuestion.jsonld"][];
            "hydra:totalItems"?: number;
            /**
             * @example {
             *   "@id": "string",
             *   "type": "string",
             *   "hydra:first": "string",
             *   "hydra:last": "string",
             *   "hydra:previous": "string",
             *   "hydra:next": "string"
             * }
             */
            "hydra:view"?: {
              /** Format: iri-reference */
              "@id"?: string;
              "@type"?: string;
              /** Format: iri-reference */
              "hydra:first"?: string;
              /** Format: iri-reference */
              "hydra:last"?: string;
              /** Format: iri-reference */
              "hydra:previous"?: string;
              /** Format: iri-reference */
              "hydra:next"?: string;
            };
            "hydra:search"?: {
              "@type"?: string;
              "hydra:template"?: string;
              "hydra:variableRepresentation"?: string;
              "hydra:mapping"?: ({
                  "@type"?: string;
                  variable?: string;
                  property?: string | null;
                  required?: boolean;
                })[];
            };
          };
          "application/json": components["schemas"]["InterventionQuestion"][];
          "text/html": components["schemas"]["InterventionQuestion"][];
        };
      };
    };
  };
  /**
   * Creates a InterventionQuestion resource.
   * @description Creates a InterventionQuestion resource.
   */
  api_intervention_questions_post: {
    /** @description The new InterventionQuestion resource */
    requestBody: {
      content: {
        "application/ld+json": components["schemas"]["InterventionQuestion.jsonld"];
        "application/json": components["schemas"]["InterventionQuestion"];
        "text/html": components["schemas"]["InterventionQuestion"];
      };
    };
    responses: {
      /** @description InterventionQuestion resource created */
      201: {
        content: {
          "application/ld+json": components["schemas"]["InterventionQuestion.jsonld"];
          "application/json": components["schemas"]["InterventionQuestion"];
          "text/html": components["schemas"]["InterventionQuestion"];
        };
      };
      /** @description Invalid input */
      400: {
        content: never;
      };
      /** @description Unprocessable entity */
      422: {
        content: never;
      };
    };
  };
  /**
   * Retrieves a InterventionQuestion resource.
   * @description Retrieves a InterventionQuestion resource.
   */
  api_intervention_questions_id_get: {
    parameters: {
      path: {
        /** @description InterventionQuestion identifier */
        id: string;
      };
    };
    responses: {
      /** @description InterventionQuestion resource */
      200: {
        content: {
          "application/ld+json": components["schemas"]["InterventionQuestion.jsonld"];
          "application/json": components["schemas"]["InterventionQuestion"];
          "text/html": components["schemas"]["InterventionQuestion"];
        };
      };
      /** @description Resource not found */
      404: {
        content: never;
      };
    };
  };
  /**
   * Replaces the InterventionQuestion resource.
   * @description Replaces the InterventionQuestion resource.
   */
  api_intervention_questions_id_put: {
    parameters: {
      path: {
        /** @description InterventionQuestion identifier */
        id: string;
      };
    };
    /** @description The updated InterventionQuestion resource */
    requestBody: {
      content: {
        "application/ld+json": components["schemas"]["InterventionQuestion.jsonld"];
        "application/json": components["schemas"]["InterventionQuestion"];
        "text/html": components["schemas"]["InterventionQuestion"];
      };
    };
    responses: {
      /** @description InterventionQuestion resource updated */
      200: {
        content: {
          "application/ld+json": components["schemas"]["InterventionQuestion.jsonld"];
          "application/json": components["schemas"]["InterventionQuestion"];
          "text/html": components["schemas"]["InterventionQuestion"];
        };
      };
      /** @description Invalid input */
      400: {
        content: never;
      };
      /** @description Resource not found */
      404: {
        content: never;
      };
      /** @description Unprocessable entity */
      422: {
        content: never;
      };
    };
  };
  /**
   * Removes the InterventionQuestion resource.
   * @description Removes the InterventionQuestion resource.
   */
  api_intervention_questions_id_delete: {
    parameters: {
      path: {
        /** @description InterventionQuestion identifier */
        id: string;
      };
    };
    responses: {
      /** @description InterventionQuestion resource deleted */
      204: {
        content: never;
      };
      /** @description Resource not found */
      404: {
        content: never;
      };
    };
  };
  /**
   * Updates the InterventionQuestion resource.
   * @description Updates the InterventionQuestion resource.
   */
  api_intervention_questions_id_patch: {
    parameters: {
      path: {
        /** @description InterventionQuestion identifier */
        id: string;
      };
    };
    /** @description The updated InterventionQuestion resource */
    requestBody: {
      content: {
        "application/merge-patch+json": components["schemas"]["InterventionQuestion"];
      };
    };
    responses: {
      /** @description InterventionQuestion resource updated */
      200: {
        content: {
          "application/ld+json": components["schemas"]["InterventionQuestion.jsonld"];
          "application/json": components["schemas"]["InterventionQuestion"];
          "text/html": components["schemas"]["InterventionQuestion"];
        };
      };
      /** @description Invalid input */
      400: {
        content: never;
      };
      /** @description Resource not found */
      404: {
        content: never;
      };
      /** @description Unprocessable entity */
      422: {
        content: never;
      };
    };
  };
  /**
   * Retrieves the collection of InterventionType resources.
   * @description Retrieves the collection of InterventionType resources.
   */
  api_intervention_types_get_collection: {
    parameters: {
      query?: {
        /** @description The collection page number */
        page?: number;
      };
    };
    responses: {
      /** @description InterventionType collection */
      200: {
        content: {
          "application/ld+json": {
            "hydra:member": components["schemas"]["InterventionType.jsonld"][];
            "hydra:totalItems"?: number;
            /**
             * @example {
             *   "@id": "string",
             *   "type": "string",
             *   "hydra:first": "string",
             *   "hydra:last": "string",
             *   "hydra:previous": "string",
             *   "hydra:next": "string"
             * }
             */
            "hydra:view"?: {
              /** Format: iri-reference */
              "@id"?: string;
              "@type"?: string;
              /** Format: iri-reference */
              "hydra:first"?: string;
              /** Format: iri-reference */
              "hydra:last"?: string;
              /** Format: iri-reference */
              "hydra:previous"?: string;
              /** Format: iri-reference */
              "hydra:next"?: string;
            };
            "hydra:search"?: {
              "@type"?: string;
              "hydra:template"?: string;
              "hydra:variableRepresentation"?: string;
              "hydra:mapping"?: ({
                  "@type"?: string;
                  variable?: string;
                  property?: string | null;
                  required?: boolean;
                })[];
            };
          };
          "application/json": components["schemas"]["InterventionType"][];
          "text/html": components["schemas"]["InterventionType"][];
        };
      };
    };
  };
  /**
   * Creates a InterventionType resource.
   * @description Creates a InterventionType resource.
   */
  api_intervention_types_post: {
    /** @description The new InterventionType resource */
    requestBody: {
      content: {
        "application/ld+json": components["schemas"]["InterventionType.jsonld"];
        "application/json": components["schemas"]["InterventionType"];
        "text/html": components["schemas"]["InterventionType"];
      };
    };
    responses: {
      /** @description InterventionType resource created */
      201: {
        content: {
          "application/ld+json": components["schemas"]["InterventionType.jsonld"];
          "application/json": components["schemas"]["InterventionType"];
          "text/html": components["schemas"]["InterventionType"];
        };
      };
      /** @description Invalid input */
      400: {
        content: never;
      };
      /** @description Unprocessable entity */
      422: {
        content: never;
      };
    };
  };
  /**
   * Retrieves a InterventionType resource.
   * @description Retrieves a InterventionType resource.
   */
  api_intervention_types_id_get: {
    parameters: {
      path: {
        /** @description InterventionType identifier */
        id: string;
      };
    };
    responses: {
      /** @description InterventionType resource */
      200: {
        content: {
          "application/ld+json": components["schemas"]["InterventionType.jsonld"];
          "application/json": components["schemas"]["InterventionType"];
          "text/html": components["schemas"]["InterventionType"];
        };
      };
      /** @description Resource not found */
      404: {
        content: never;
      };
    };
  };
  /**
   * Replaces the InterventionType resource.
   * @description Replaces the InterventionType resource.
   */
  api_intervention_types_id_put: {
    parameters: {
      path: {
        /** @description InterventionType identifier */
        id: string;
      };
    };
    /** @description The updated InterventionType resource */
    requestBody: {
      content: {
        "application/ld+json": components["schemas"]["InterventionType.jsonld"];
        "application/json": components["schemas"]["InterventionType"];
        "text/html": components["schemas"]["InterventionType"];
      };
    };
    responses: {
      /** @description InterventionType resource updated */
      200: {
        content: {
          "application/ld+json": components["schemas"]["InterventionType.jsonld"];
          "application/json": components["schemas"]["InterventionType"];
          "text/html": components["schemas"]["InterventionType"];
        };
      };
      /** @description Invalid input */
      400: {
        content: never;
      };
      /** @description Resource not found */
      404: {
        content: never;
      };
      /** @description Unprocessable entity */
      422: {
        content: never;
      };
    };
  };
  /**
   * Removes the InterventionType resource.
   * @description Removes the InterventionType resource.
   */
  api_intervention_types_id_delete: {
    parameters: {
      path: {
        /** @description InterventionType identifier */
        id: string;
      };
    };
    responses: {
      /** @description InterventionType resource deleted */
      204: {
        content: never;
      };
      /** @description Resource not found */
      404: {
        content: never;
      };
    };
  };
  /**
   * Updates the InterventionType resource.
   * @description Updates the InterventionType resource.
   */
  api_intervention_types_id_patch: {
    parameters: {
      path: {
        /** @description InterventionType identifier */
        id: string;
      };
    };
    /** @description The updated InterventionType resource */
    requestBody: {
      content: {
        "application/merge-patch+json": components["schemas"]["InterventionType"];
      };
    };
    responses: {
      /** @description InterventionType resource updated */
      200: {
        content: {
          "application/ld+json": components["schemas"]["InterventionType.jsonld"];
          "application/json": components["schemas"]["InterventionType"];
          "text/html": components["schemas"]["InterventionType"];
        };
      };
      /** @description Invalid input */
      400: {
        content: never;
      };
      /** @description Resource not found */
      404: {
        content: never;
      };
      /** @description Unprocessable entity */
      422: {
        content: never;
      };
    };
  };
  /**
   * Retrieves the collection of Intervention resources.
   * @description Retrieves the collection of Intervention resources.
   */
  api_interventions_get_collection: {
    parameters: {
      query?: {
        /** @description The collection page number */
        page?: number;
      };
    };
    responses: {
      /** @description Intervention collection */
      200: {
        content: {
          "application/ld+json": {
            "hydra:member": components["schemas"]["Intervention.jsonld"][];
            "hydra:totalItems"?: number;
            /**
             * @example {
             *   "@id": "string",
             *   "type": "string",
             *   "hydra:first": "string",
             *   "hydra:last": "string",
             *   "hydra:previous": "string",
             *   "hydra:next": "string"
             * }
             */
            "hydra:view"?: {
              /** Format: iri-reference */
              "@id"?: string;
              "@type"?: string;
              /** Format: iri-reference */
              "hydra:first"?: string;
              /** Format: iri-reference */
              "hydra:last"?: string;
              /** Format: iri-reference */
              "hydra:previous"?: string;
              /** Format: iri-reference */
              "hydra:next"?: string;
            };
            "hydra:search"?: {
              "@type"?: string;
              "hydra:template"?: string;
              "hydra:variableRepresentation"?: string;
              "hydra:mapping"?: ({
                  "@type"?: string;
                  variable?: string;
                  property?: string | null;
                  required?: boolean;
                })[];
            };
          };
          "application/json": components["schemas"]["Intervention"][];
          "text/html": components["schemas"]["Intervention"][];
        };
      };
    };
  };
  /**
   * Creates a Intervention resource.
   * @description Creates a Intervention resource.
   */
  api_interventions_post: {
    /** @description The new Intervention resource */
    requestBody: {
      content: {
        "application/ld+json": components["schemas"]["Intervention.jsonld"];
        "application/json": components["schemas"]["Intervention"];
        "text/html": components["schemas"]["Intervention"];
      };
    };
    responses: {
      /** @description Intervention resource created */
      201: {
        content: {
          "application/ld+json": components["schemas"]["Intervention.jsonld"];
          "application/json": components["schemas"]["Intervention"];
          "text/html": components["schemas"]["Intervention"];
        };
      };
      /** @description Invalid input */
      400: {
        content: never;
      };
      /** @description Unprocessable entity */
      422: {
        content: never;
      };
    };
  };
  /**
   * Retrieves a Intervention resource.
   * @description Retrieves a Intervention resource.
   */
  api_interventions_id_get: {
    parameters: {
      path: {
        /** @description Intervention identifier */
        id: string;
      };
    };
    responses: {
      /** @description Intervention resource */
      200: {
        content: {
          "application/ld+json": components["schemas"]["Intervention.jsonld"];
          "application/json": components["schemas"]["Intervention"];
          "text/html": components["schemas"]["Intervention"];
        };
      };
      /** @description Resource not found */
      404: {
        content: never;
      };
    };
  };
  /**
   * Replaces the Intervention resource.
   * @description Replaces the Intervention resource.
   */
  api_interventions_id_put: {
    parameters: {
      path: {
        /** @description Intervention identifier */
        id: string;
      };
    };
    /** @description The updated Intervention resource */
    requestBody: {
      content: {
        "application/ld+json": components["schemas"]["Intervention.jsonld"];
        "application/json": components["schemas"]["Intervention"];
        "text/html": components["schemas"]["Intervention"];
      };
    };
    responses: {
      /** @description Intervention resource updated */
      200: {
        content: {
          "application/ld+json": components["schemas"]["Intervention.jsonld"];
          "application/json": components["schemas"]["Intervention"];
          "text/html": components["schemas"]["Intervention"];
        };
      };
      /** @description Invalid input */
      400: {
        content: never;
      };
      /** @description Resource not found */
      404: {
        content: never;
      };
      /** @description Unprocessable entity */
      422: {
        content: never;
      };
    };
  };
  /**
   * Removes the Intervention resource.
   * @description Removes the Intervention resource.
   */
  api_interventions_id_delete: {
    parameters: {
      path: {
        /** @description Intervention identifier */
        id: string;
      };
    };
    responses: {
      /** @description Intervention resource deleted */
      204: {
        content: never;
      };
      /** @description Resource not found */
      404: {
        content: never;
      };
    };
  };
  /**
   * Updates the Intervention resource.
   * @description Updates the Intervention resource.
   */
  api_interventions_id_patch: {
    parameters: {
      path: {
        /** @description Intervention identifier */
        id: string;
      };
    };
    /** @description The updated Intervention resource */
    requestBody: {
      content: {
        "application/merge-patch+json": components["schemas"]["Intervention"];
      };
    };
    responses: {
      /** @description Intervention resource updated */
      200: {
        content: {
          "application/ld+json": components["schemas"]["Intervention.jsonld"];
          "application/json": components["schemas"]["Intervention"];
          "text/html": components["schemas"]["Intervention"];
        };
      };
      /** @description Invalid input */
      400: {
        content: never;
      };
      /** @description Resource not found */
      404: {
        content: never;
      };
      /** @description Unprocessable entity */
      422: {
        content: never;
      };
    };
  };
  /**
   * Retrieves the collection of Location resources.
   * @description Retrieves the collection of Location resources.
   */
  api_locations_get_collection: {
    parameters: {
      query?: {
        /** @description The collection page number */
        page?: number;
      };
    };
    responses: {
      /** @description Location collection */
      200: {
        content: {
          "application/ld+json": {
            "hydra:member": components["schemas"]["Location.jsonld"][];
            "hydra:totalItems"?: number;
            /**
             * @example {
             *   "@id": "string",
             *   "type": "string",
             *   "hydra:first": "string",
             *   "hydra:last": "string",
             *   "hydra:previous": "string",
             *   "hydra:next": "string"
             * }
             */
            "hydra:view"?: {
              /** Format: iri-reference */
              "@id"?: string;
              "@type"?: string;
              /** Format: iri-reference */
              "hydra:first"?: string;
              /** Format: iri-reference */
              "hydra:last"?: string;
              /** Format: iri-reference */
              "hydra:previous"?: string;
              /** Format: iri-reference */
              "hydra:next"?: string;
            };
            "hydra:search"?: {
              "@type"?: string;
              "hydra:template"?: string;
              "hydra:variableRepresentation"?: string;
              "hydra:mapping"?: ({
                  "@type"?: string;
                  variable?: string;
                  property?: string | null;
                  required?: boolean;
                })[];
            };
          };
          "application/json": components["schemas"]["Location"][];
          "text/html": components["schemas"]["Location"][];
        };
      };
    };
  };
  /**
   * Creates a Location resource.
   * @description Creates a Location resource.
   */
  api_locations_post: {
    /** @description The new Location resource */
    requestBody: {
      content: {
        "application/ld+json": components["schemas"]["Location.jsonld"];
        "application/json": components["schemas"]["Location"];
        "text/html": components["schemas"]["Location"];
      };
    };
    responses: {
      /** @description Location resource created */
      201: {
        content: {
          "application/ld+json": components["schemas"]["Location.jsonld"];
          "application/json": components["schemas"]["Location"];
          "text/html": components["schemas"]["Location"];
        };
      };
      /** @description Invalid input */
      400: {
        content: never;
      };
      /** @description Unprocessable entity */
      422: {
        content: never;
      };
    };
  };
  /**
   * Retrieves a Location resource.
   * @description Retrieves a Location resource.
   */
  api_locations_id_get: {
    parameters: {
      path: {
        /** @description Location identifier */
        id: string;
      };
    };
    responses: {
      /** @description Location resource */
      200: {
        content: {
          "application/ld+json": components["schemas"]["Location.jsonld"];
          "application/json": components["schemas"]["Location"];
          "text/html": components["schemas"]["Location"];
        };
      };
      /** @description Resource not found */
      404: {
        content: never;
      };
    };
  };
  /**
   * Replaces the Location resource.
   * @description Replaces the Location resource.
   */
  api_locations_id_put: {
    parameters: {
      path: {
        /** @description Location identifier */
        id: string;
      };
    };
    /** @description The updated Location resource */
    requestBody: {
      content: {
        "application/ld+json": components["schemas"]["Location.jsonld"];
        "application/json": components["schemas"]["Location"];
        "text/html": components["schemas"]["Location"];
      };
    };
    responses: {
      /** @description Location resource updated */
      200: {
        content: {
          "application/ld+json": components["schemas"]["Location.jsonld"];
          "application/json": components["schemas"]["Location"];
          "text/html": components["schemas"]["Location"];
        };
      };
      /** @description Invalid input */
      400: {
        content: never;
      };
      /** @description Resource not found */
      404: {
        content: never;
      };
      /** @description Unprocessable entity */
      422: {
        content: never;
      };
    };
  };
  /**
   * Removes the Location resource.
   * @description Removes the Location resource.
   */
  api_locations_id_delete: {
    parameters: {
      path: {
        /** @description Location identifier */
        id: string;
      };
    };
    responses: {
      /** @description Location resource deleted */
      204: {
        content: never;
      };
      /** @description Resource not found */
      404: {
        content: never;
      };
    };
  };
  /**
   * Updates the Location resource.
   * @description Updates the Location resource.
   */
  api_locations_id_patch: {
    parameters: {
      path: {
        /** @description Location identifier */
        id: string;
      };
    };
    /** @description The updated Location resource */
    requestBody: {
      content: {
        "application/merge-patch+json": components["schemas"]["Location"];
      };
    };
    responses: {
      /** @description Location resource updated */
      200: {
        content: {
          "application/ld+json": components["schemas"]["Location.jsonld"];
          "application/json": components["schemas"]["Location"];
          "text/html": components["schemas"]["Location"];
        };
      };
      /** @description Invalid input */
      400: {
        content: never;
      };
      /** @description Resource not found */
      404: {
        content: never;
      };
      /** @description Unprocessable entity */
      422: {
        content: never;
      };
    };
  };
  /**
   * Creates a user token.
   * @description Creates a user token.
   */
  login_check_post: {
    /** @description The login data */
    requestBody: {
      content: {
        "application/json": {
          username: string;
          password: string;
        };
      };
    };
    responses: {
      /** @description User token created */
      200: {
        content: {
          "application/json": {
            token: string;
          };
        };
      };
    };
  };
  /**
   * Retrieves the collection of Model resources.
   * @description Retrieves the collection of Model resources.
   */
  api_models_get_collection: {
    parameters: {
      query?: {
        /** @description The collection page number */
        page?: number;
      };
    };
    responses: {
      /** @description Model collection */
      200: {
        content: {
          "application/ld+json": {
            "hydra:member": components["schemas"]["Model.jsonld"][];
            "hydra:totalItems"?: number;
            /**
             * @example {
             *   "@id": "string",
             *   "type": "string",
             *   "hydra:first": "string",
             *   "hydra:last": "string",
             *   "hydra:previous": "string",
             *   "hydra:next": "string"
             * }
             */
            "hydra:view"?: {
              /** Format: iri-reference */
              "@id"?: string;
              "@type"?: string;
              /** Format: iri-reference */
              "hydra:first"?: string;
              /** Format: iri-reference */
              "hydra:last"?: string;
              /** Format: iri-reference */
              "hydra:previous"?: string;
              /** Format: iri-reference */
              "hydra:next"?: string;
            };
            "hydra:search"?: {
              "@type"?: string;
              "hydra:template"?: string;
              "hydra:variableRepresentation"?: string;
              "hydra:mapping"?: ({
                  "@type"?: string;
                  variable?: string;
                  property?: string | null;
                  required?: boolean;
                })[];
            };
          };
          "application/json": components["schemas"]["Model"][];
          "text/html": components["schemas"]["Model"][];
        };
      };
    };
  };
  /**
   * Creates a Model resource.
   * @description Creates a Model resource.
   */
  api_models_post: {
    /** @description The new Model resource */
    requestBody: {
      content: {
        "application/ld+json": components["schemas"]["Model.jsonld"];
        "application/json": components["schemas"]["Model"];
        "text/html": components["schemas"]["Model"];
      };
    };
    responses: {
      /** @description Model resource created */
      201: {
        content: {
          "application/ld+json": components["schemas"]["Model.jsonld"];
          "application/json": components["schemas"]["Model"];
          "text/html": components["schemas"]["Model"];
        };
      };
      /** @description Invalid input */
      400: {
        content: never;
      };
      /** @description Unprocessable entity */
      422: {
        content: never;
      };
    };
  };
  /**
   * Retrieves a Model resource.
   * @description Retrieves a Model resource.
   */
  api_models_id_get: {
    parameters: {
      path: {
        /** @description Model identifier */
        id: string;
      };
    };
    responses: {
      /** @description Model resource */
      200: {
        content: {
          "application/ld+json": components["schemas"]["Model.jsonld"];
          "application/json": components["schemas"]["Model"];
          "text/html": components["schemas"]["Model"];
        };
      };
      /** @description Resource not found */
      404: {
        content: never;
      };
    };
  };
  /**
   * Replaces the Model resource.
   * @description Replaces the Model resource.
   */
  api_models_id_put: {
    parameters: {
      path: {
        /** @description Model identifier */
        id: string;
      };
    };
    /** @description The updated Model resource */
    requestBody: {
      content: {
        "application/ld+json": components["schemas"]["Model.jsonld"];
        "application/json": components["schemas"]["Model"];
        "text/html": components["schemas"]["Model"];
      };
    };
    responses: {
      /** @description Model resource updated */
      200: {
        content: {
          "application/ld+json": components["schemas"]["Model.jsonld"];
          "application/json": components["schemas"]["Model"];
          "text/html": components["schemas"]["Model"];
        };
      };
      /** @description Invalid input */
      400: {
        content: never;
      };
      /** @description Resource not found */
      404: {
        content: never;
      };
      /** @description Unprocessable entity */
      422: {
        content: never;
      };
    };
  };
  /**
   * Removes the Model resource.
   * @description Removes the Model resource.
   */
  api_models_id_delete: {
    parameters: {
      path: {
        /** @description Model identifier */
        id: string;
      };
    };
    responses: {
      /** @description Model resource deleted */
      204: {
        content: never;
      };
      /** @description Resource not found */
      404: {
        content: never;
      };
    };
  };
  /**
   * Updates the Model resource.
   * @description Updates the Model resource.
   */
  api_models_id_patch: {
    parameters: {
      path: {
        /** @description Model identifier */
        id: string;
      };
    };
    /** @description The updated Model resource */
    requestBody: {
      content: {
        "application/merge-patch+json": components["schemas"]["Model"];
      };
    };
    responses: {
      /** @description Model resource updated */
      200: {
        content: {
          "application/ld+json": components["schemas"]["Model.jsonld"];
          "application/json": components["schemas"]["Model"];
          "text/html": components["schemas"]["Model"];
        };
      };
      /** @description Invalid input */
      400: {
        content: never;
      };
      /** @description Resource not found */
      404: {
        content: never;
      };
      /** @description Unprocessable entity */
      422: {
        content: never;
      };
    };
  };
  /**
   * Retrieves the collection of NfcTag resources.
   * @description Retrieves the collection of NfcTag resources.
   */
  api_nfc_tags_get_collection: {
    parameters: {
      query?: {
        /** @description The collection page number */
        page?: number;
      };
    };
    responses: {
      /** @description NfcTag collection */
      200: {
        content: {
          "application/ld+json": {
            "hydra:member": components["schemas"]["NfcTag.jsonld"][];
            "hydra:totalItems"?: number;
            /**
             * @example {
             *   "@id": "string",
             *   "type": "string",
             *   "hydra:first": "string",
             *   "hydra:last": "string",
             *   "hydra:previous": "string",
             *   "hydra:next": "string"
             * }
             */
            "hydra:view"?: {
              /** Format: iri-reference */
              "@id"?: string;
              "@type"?: string;
              /** Format: iri-reference */
              "hydra:first"?: string;
              /** Format: iri-reference */
              "hydra:last"?: string;
              /** Format: iri-reference */
              "hydra:previous"?: string;
              /** Format: iri-reference */
              "hydra:next"?: string;
            };
            "hydra:search"?: {
              "@type"?: string;
              "hydra:template"?: string;
              "hydra:variableRepresentation"?: string;
              "hydra:mapping"?: ({
                  "@type"?: string;
                  variable?: string;
                  property?: string | null;
                  required?: boolean;
                })[];
            };
          };
          "application/json": components["schemas"]["NfcTag"][];
          "text/html": components["schemas"]["NfcTag"][];
        };
      };
    };
  };
  /**
   * Creates a NfcTag resource.
   * @description Creates a NfcTag resource.
   */
  api_nfc_tags_post: {
    /** @description The new NfcTag resource */
    requestBody: {
      content: {
        "application/ld+json": components["schemas"]["NfcTag.jsonld"];
        "application/json": components["schemas"]["NfcTag"];
        "text/html": components["schemas"]["NfcTag"];
      };
    };
    responses: {
      /** @description NfcTag resource created */
      201: {
        content: {
          "application/ld+json": components["schemas"]["NfcTag.jsonld"];
          "application/json": components["schemas"]["NfcTag"];
          "text/html": components["schemas"]["NfcTag"];
        };
      };
      /** @description Invalid input */
      400: {
        content: never;
      };
      /** @description Unprocessable entity */
      422: {
        content: never;
      };
    };
  };
  /**
   * Retrieves a NfcTag resource.
   * @description Retrieves a NfcTag resource.
   */
  api_nfc_tags_id_get: {
    parameters: {
      path: {
        /** @description NfcTag identifier */
        id: string;
      };
    };
    responses: {
      /** @description NfcTag resource */
      200: {
        content: {
          "application/ld+json": components["schemas"]["NfcTag.jsonld"];
          "application/json": components["schemas"]["NfcTag"];
          "text/html": components["schemas"]["NfcTag"];
        };
      };
      /** @description Resource not found */
      404: {
        content: never;
      };
    };
  };
  /**
   * Replaces the NfcTag resource.
   * @description Replaces the NfcTag resource.
   */
  api_nfc_tags_id_put: {
    parameters: {
      path: {
        /** @description NfcTag identifier */
        id: string;
      };
    };
    /** @description The updated NfcTag resource */
    requestBody: {
      content: {
        "application/ld+json": components["schemas"]["NfcTag.jsonld"];
        "application/json": components["schemas"]["NfcTag"];
        "text/html": components["schemas"]["NfcTag"];
      };
    };
    responses: {
      /** @description NfcTag resource updated */
      200: {
        content: {
          "application/ld+json": components["schemas"]["NfcTag.jsonld"];
          "application/json": components["schemas"]["NfcTag"];
          "text/html": components["schemas"]["NfcTag"];
        };
      };
      /** @description Invalid input */
      400: {
        content: never;
      };
      /** @description Resource not found */
      404: {
        content: never;
      };
      /** @description Unprocessable entity */
      422: {
        content: never;
      };
    };
  };
  /**
   * Removes the NfcTag resource.
   * @description Removes the NfcTag resource.
   */
  api_nfc_tags_id_delete: {
    parameters: {
      path: {
        /** @description NfcTag identifier */
        id: string;
      };
    };
    responses: {
      /** @description NfcTag resource deleted */
      204: {
        content: never;
      };
      /** @description Resource not found */
      404: {
        content: never;
      };
    };
  };
  /**
   * Updates the NfcTag resource.
   * @description Updates the NfcTag resource.
   */
  api_nfc_tags_id_patch: {
    parameters: {
      path: {
        /** @description NfcTag identifier */
        id: string;
      };
    };
    /** @description The updated NfcTag resource */
    requestBody: {
      content: {
        "application/merge-patch+json": components["schemas"]["NfcTag"];
      };
    };
    responses: {
      /** @description NfcTag resource updated */
      200: {
        content: {
          "application/ld+json": components["schemas"]["NfcTag.jsonld"];
          "application/json": components["schemas"]["NfcTag"];
          "text/html": components["schemas"]["NfcTag"];
        };
      };
      /** @description Invalid input */
      400: {
        content: never;
      };
      /** @description Resource not found */
      404: {
        content: never;
      };
      /** @description Unprocessable entity */
      422: {
        content: never;
      };
    };
  };
  /**
   * Retrieves the collection of Person resources.
   * @description Retrieves the collection of Person resources.
   */
  api_people_get_collection: {
    parameters: {
      query?: {
        /** @description The collection page number */
        page?: number;
      };
    };
    responses: {
      /** @description Person collection */
      200: {
        content: {
          "application/ld+json": {
            "hydra:member": components["schemas"]["Person.jsonld"][];
            "hydra:totalItems"?: number;
            /**
             * @example {
             *   "@id": "string",
             *   "type": "string",
             *   "hydra:first": "string",
             *   "hydra:last": "string",
             *   "hydra:previous": "string",
             *   "hydra:next": "string"
             * }
             */
            "hydra:view"?: {
              /** Format: iri-reference */
              "@id"?: string;
              "@type"?: string;
              /** Format: iri-reference */
              "hydra:first"?: string;
              /** Format: iri-reference */
              "hydra:last"?: string;
              /** Format: iri-reference */
              "hydra:previous"?: string;
              /** Format: iri-reference */
              "hydra:next"?: string;
            };
            "hydra:search"?: {
              "@type"?: string;
              "hydra:template"?: string;
              "hydra:variableRepresentation"?: string;
              "hydra:mapping"?: ({
                  "@type"?: string;
                  variable?: string;
                  property?: string | null;
                  required?: boolean;
                })[];
            };
          };
          "application/json": components["schemas"]["Person"][];
          "text/html": components["schemas"]["Person"][];
        };
      };
    };
  };
  /**
   * Creates a Person resource.
   * @description Creates a Person resource.
   */
  api_people_post: {
    /** @description The new Person resource */
    requestBody: {
      content: {
        "application/ld+json": components["schemas"]["Person.jsonld"];
        "application/json": components["schemas"]["Person"];
        "text/html": components["schemas"]["Person"];
      };
    };
    responses: {
      /** @description Person resource created */
      201: {
        content: {
          "application/ld+json": components["schemas"]["Person.jsonld"];
          "application/json": components["schemas"]["Person"];
          "text/html": components["schemas"]["Person"];
        };
      };
      /** @description Invalid input */
      400: {
        content: never;
      };
      /** @description Unprocessable entity */
      422: {
        content: never;
      };
    };
  };
  /**
   * Retrieves a Person resource.
   * @description Retrieves a Person resource.
   */
  api_people_id_get: {
    parameters: {
      path: {
        /** @description Person identifier */
        id: string;
      };
    };
    responses: {
      /** @description Person resource */
      200: {
        content: {
          "application/ld+json": components["schemas"]["Person.jsonld"];
          "application/json": components["schemas"]["Person"];
          "text/html": components["schemas"]["Person"];
        };
      };
      /** @description Resource not found */
      404: {
        content: never;
      };
    };
  };
  /**
   * Replaces the Person resource.
   * @description Replaces the Person resource.
   */
  api_people_id_put: {
    parameters: {
      path: {
        /** @description Person identifier */
        id: string;
      };
    };
    /** @description The updated Person resource */
    requestBody: {
      content: {
        "application/ld+json": components["schemas"]["Person.jsonld"];
        "application/json": components["schemas"]["Person"];
        "text/html": components["schemas"]["Person"];
      };
    };
    responses: {
      /** @description Person resource updated */
      200: {
        content: {
          "application/ld+json": components["schemas"]["Person.jsonld"];
          "application/json": components["schemas"]["Person"];
          "text/html": components["schemas"]["Person"];
        };
      };
      /** @description Invalid input */
      400: {
        content: never;
      };
      /** @description Resource not found */
      404: {
        content: never;
      };
      /** @description Unprocessable entity */
      422: {
        content: never;
      };
    };
  };
  /**
   * Removes the Person resource.
   * @description Removes the Person resource.
   */
  api_people_id_delete: {
    parameters: {
      path: {
        /** @description Person identifier */
        id: string;
      };
    };
    responses: {
      /** @description Person resource deleted */
      204: {
        content: never;
      };
      /** @description Resource not found */
      404: {
        content: never;
      };
    };
  };
  /**
   * Updates the Person resource.
   * @description Updates the Person resource.
   */
  api_people_id_patch: {
    parameters: {
      path: {
        /** @description Person identifier */
        id: string;
      };
    };
    /** @description The updated Person resource */
    requestBody: {
      content: {
        "application/merge-patch+json": components["schemas"]["Person"];
      };
    };
    responses: {
      /** @description Person resource updated */
      200: {
        content: {
          "application/ld+json": components["schemas"]["Person.jsonld"];
          "application/json": components["schemas"]["Person"];
          "text/html": components["schemas"]["Person"];
        };
      };
      /** @description Invalid input */
      400: {
        content: never;
      };
      /** @description Resource not found */
      404: {
        content: never;
      };
      /** @description Unprocessable entity */
      422: {
        content: never;
      };
    };
  };
  /**
   * Retrieves the collection of Placement resources.
   * @description Retrieves the collection of Placement resources.
   */
  api_placements_get_collection: {
    parameters: {
      query?: {
        /** @description The collection page number */
        page?: number;
      };
    };
    responses: {
      /** @description Placement collection */
      200: {
        content: {
          "application/ld+json": {
            "hydra:member": components["schemas"]["Placement.jsonld"][];
            "hydra:totalItems"?: number;
            /**
             * @example {
             *   "@id": "string",
             *   "type": "string",
             *   "hydra:first": "string",
             *   "hydra:last": "string",
             *   "hydra:previous": "string",
             *   "hydra:next": "string"
             * }
             */
            "hydra:view"?: {
              /** Format: iri-reference */
              "@id"?: string;
              "@type"?: string;
              /** Format: iri-reference */
              "hydra:first"?: string;
              /** Format: iri-reference */
              "hydra:last"?: string;
              /** Format: iri-reference */
              "hydra:previous"?: string;
              /** Format: iri-reference */
              "hydra:next"?: string;
            };
            "hydra:search"?: {
              "@type"?: string;
              "hydra:template"?: string;
              "hydra:variableRepresentation"?: string;
              "hydra:mapping"?: ({
                  "@type"?: string;
                  variable?: string;
                  property?: string | null;
                  required?: boolean;
                })[];
            };
          };
          "application/json": components["schemas"]["Placement"][];
          "text/html": components["schemas"]["Placement"][];
        };
      };
    };
  };
  /**
   * Creates a Placement resource.
   * @description Creates a Placement resource.
   */
  api_placements_post: {
    /** @description The new Placement resource */
    requestBody: {
      content: {
        "application/ld+json": components["schemas"]["Placement.jsonld"];
        "application/json": components["schemas"]["Placement"];
        "text/html": components["schemas"]["Placement"];
      };
    };
    responses: {
      /** @description Placement resource created */
      201: {
        content: {
          "application/ld+json": components["schemas"]["Placement.jsonld"];
          "application/json": components["schemas"]["Placement"];
          "text/html": components["schemas"]["Placement"];
        };
      };
      /** @description Invalid input */
      400: {
        content: never;
      };
      /** @description Unprocessable entity */
      422: {
        content: never;
      };
    };
  };
  /**
   * Retrieves a Placement resource.
   * @description Retrieves a Placement resource.
   */
  api_placements_id_get: {
    parameters: {
      path: {
        /** @description Placement identifier */
        id: string;
      };
    };
    responses: {
      /** @description Placement resource */
      200: {
        content: {
          "application/ld+json": components["schemas"]["Placement.jsonld"];
          "application/json": components["schemas"]["Placement"];
          "text/html": components["schemas"]["Placement"];
        };
      };
      /** @description Resource not found */
      404: {
        content: never;
      };
    };
  };
  /**
   * Replaces the Placement resource.
   * @description Replaces the Placement resource.
   */
  api_placements_id_put: {
    parameters: {
      path: {
        /** @description Placement identifier */
        id: string;
      };
    };
    /** @description The updated Placement resource */
    requestBody: {
      content: {
        "application/ld+json": components["schemas"]["Placement.jsonld"];
        "application/json": components["schemas"]["Placement"];
        "text/html": components["schemas"]["Placement"];
      };
    };
    responses: {
      /** @description Placement resource updated */
      200: {
        content: {
          "application/ld+json": components["schemas"]["Placement.jsonld"];
          "application/json": components["schemas"]["Placement"];
          "text/html": components["schemas"]["Placement"];
        };
      };
      /** @description Invalid input */
      400: {
        content: never;
      };
      /** @description Resource not found */
      404: {
        content: never;
      };
      /** @description Unprocessable entity */
      422: {
        content: never;
      };
    };
  };
  /**
   * Removes the Placement resource.
   * @description Removes the Placement resource.
   */
  api_placements_id_delete: {
    parameters: {
      path: {
        /** @description Placement identifier */
        id: string;
      };
    };
    responses: {
      /** @description Placement resource deleted */
      204: {
        content: never;
      };
      /** @description Resource not found */
      404: {
        content: never;
      };
    };
  };
  /**
   * Updates the Placement resource.
   * @description Updates the Placement resource.
   */
  api_placements_id_patch: {
    parameters: {
      path: {
        /** @description Placement identifier */
        id: string;
      };
    };
    /** @description The updated Placement resource */
    requestBody: {
      content: {
        "application/merge-patch+json": components["schemas"]["Placement"];
      };
    };
    responses: {
      /** @description Placement resource updated */
      200: {
        content: {
          "application/ld+json": components["schemas"]["Placement.jsonld"];
          "application/json": components["schemas"]["Placement"];
          "text/html": components["schemas"]["Placement"];
        };
      };
      /** @description Invalid input */
      400: {
        content: never;
      };
      /** @description Resource not found */
      404: {
        content: never;
      };
      /** @description Unprocessable entity */
      422: {
        content: never;
      };
    };
  };
  /**
   * Retrieves the collection of Site resources.
   * @description Retrieves the collection of Site resources.
   */
  api_sites_get_collection: {
    parameters: {
      query?: {
        /** @description The collection page number */
        page?: number;
      };
    };
    responses: {
      /** @description Site collection */
      200: {
        content: {
          "application/ld+json": {
            "hydra:member": components["schemas"]["Site.jsonld"][];
            "hydra:totalItems"?: number;
            /**
             * @example {
             *   "@id": "string",
             *   "type": "string",
             *   "hydra:first": "string",
             *   "hydra:last": "string",
             *   "hydra:previous": "string",
             *   "hydra:next": "string"
             * }
             */
            "hydra:view"?: {
              /** Format: iri-reference */
              "@id"?: string;
              "@type"?: string;
              /** Format: iri-reference */
              "hydra:first"?: string;
              /** Format: iri-reference */
              "hydra:last"?: string;
              /** Format: iri-reference */
              "hydra:previous"?: string;
              /** Format: iri-reference */
              "hydra:next"?: string;
            };
            "hydra:search"?: {
              "@type"?: string;
              "hydra:template"?: string;
              "hydra:variableRepresentation"?: string;
              "hydra:mapping"?: ({
                  "@type"?: string;
                  variable?: string;
                  property?: string | null;
                  required?: boolean;
                })[];
            };
          };
          "application/json": components["schemas"]["Site"][];
          "text/html": components["schemas"]["Site"][];
        };
      };
    };
  };
  /**
   * Creates a Site resource.
   * @description Creates a Site resource.
   */
  api_sites_post: {
    /** @description The new Site resource */
    requestBody: {
      content: {
        "application/ld+json": components["schemas"]["Site.jsonld"];
        "application/json": components["schemas"]["Site"];
        "text/html": components["schemas"]["Site"];
      };
    };
    responses: {
      /** @description Site resource created */
      201: {
        content: {
          "application/ld+json": components["schemas"]["Site.jsonld"];
          "application/json": components["schemas"]["Site"];
          "text/html": components["schemas"]["Site"];
        };
      };
      /** @description Invalid input */
      400: {
        content: never;
      };
      /** @description Unprocessable entity */
      422: {
        content: never;
      };
    };
  };
  /**
   * Retrieves a Site resource.
   * @description Retrieves a Site resource.
   */
  api_sites_id_get: {
    parameters: {
      path: {
        /** @description Site identifier */
        id: string;
      };
    };
    responses: {
      /** @description Site resource */
      200: {
        content: {
          "application/ld+json": components["schemas"]["Site.jsonld"];
          "application/json": components["schemas"]["Site"];
          "text/html": components["schemas"]["Site"];
        };
      };
      /** @description Resource not found */
      404: {
        content: never;
      };
    };
  };
  /**
   * Replaces the Site resource.
   * @description Replaces the Site resource.
   */
  api_sites_id_put: {
    parameters: {
      path: {
        /** @description Site identifier */
        id: string;
      };
    };
    /** @description The updated Site resource */
    requestBody: {
      content: {
        "application/ld+json": components["schemas"]["Site.jsonld"];
        "application/json": components["schemas"]["Site"];
        "text/html": components["schemas"]["Site"];
      };
    };
    responses: {
      /** @description Site resource updated */
      200: {
        content: {
          "application/ld+json": components["schemas"]["Site.jsonld"];
          "application/json": components["schemas"]["Site"];
          "text/html": components["schemas"]["Site"];
        };
      };
      /** @description Invalid input */
      400: {
        content: never;
      };
      /** @description Resource not found */
      404: {
        content: never;
      };
      /** @description Unprocessable entity */
      422: {
        content: never;
      };
    };
  };
  /**
   * Removes the Site resource.
   * @description Removes the Site resource.
   */
  api_sites_id_delete: {
    parameters: {
      path: {
        /** @description Site identifier */
        id: string;
      };
    };
    responses: {
      /** @description Site resource deleted */
      204: {
        content: never;
      };
      /** @description Resource not found */
      404: {
        content: never;
      };
    };
  };
  /**
   * Updates the Site resource.
   * @description Updates the Site resource.
   */
  api_sites_id_patch: {
    parameters: {
      path: {
        /** @description Site identifier */
        id: string;
      };
    };
    /** @description The updated Site resource */
    requestBody: {
      content: {
        "application/merge-patch+json": components["schemas"]["Site"];
      };
    };
    responses: {
      /** @description Site resource updated */
      200: {
        content: {
          "application/ld+json": components["schemas"]["Site.jsonld"];
          "application/json": components["schemas"]["Site"];
          "text/html": components["schemas"]["Site"];
        };
      };
      /** @description Invalid input */
      400: {
        content: never;
      };
      /** @description Resource not found */
      404: {
        content: never;
      };
      /** @description Unprocessable entity */
      422: {
        content: never;
      };
    };
  };
  /**
   * Retrieves the collection of User resources.
   * @description Retrieves the collection of User resources.
   */
  api_users_get_collection: {
    parameters: {
      query?: {
        /** @description The collection page number */
        page?: number;
      };
    };
    responses: {
      /** @description User collection */
      200: {
        content: {
          "application/ld+json": {
            "hydra:member": components["schemas"]["User.jsonld"][];
            "hydra:totalItems"?: number;
            /**
             * @example {
             *   "@id": "string",
             *   "type": "string",
             *   "hydra:first": "string",
             *   "hydra:last": "string",
             *   "hydra:previous": "string",
             *   "hydra:next": "string"
             * }
             */
            "hydra:view"?: {
              /** Format: iri-reference */
              "@id"?: string;
              "@type"?: string;
              /** Format: iri-reference */
              "hydra:first"?: string;
              /** Format: iri-reference */
              "hydra:last"?: string;
              /** Format: iri-reference */
              "hydra:previous"?: string;
              /** Format: iri-reference */
              "hydra:next"?: string;
            };
            "hydra:search"?: {
              "@type"?: string;
              "hydra:template"?: string;
              "hydra:variableRepresentation"?: string;
              "hydra:mapping"?: ({
                  "@type"?: string;
                  variable?: string;
                  property?: string | null;
                  required?: boolean;
                })[];
            };
          };
          "application/json": components["schemas"]["User"][];
          "text/html": components["schemas"]["User"][];
        };
      };
    };
  };
  /**
   * Creates a User resource.
   * @description Creates a User resource.
   */
  api_users_post: {
    /** @description The new User resource */
    requestBody: {
      content: {
        "application/ld+json": components["schemas"]["User.jsonld"];
        "application/json": components["schemas"]["User"];
        "text/html": components["schemas"]["User"];
      };
    };
    responses: {
      /** @description User resource created */
      201: {
        content: {
          "application/ld+json": components["schemas"]["User.jsonld"];
          "application/json": components["schemas"]["User"];
          "text/html": components["schemas"]["User"];
        };
      };
      /** @description Invalid input */
      400: {
        content: never;
      };
      /** @description Unprocessable entity */
      422: {
        content: never;
      };
    };
  };
  /**
   * Retrieves a User resource.
   * @description Retrieves a User resource.
   */
  api_users_id_get: {
    parameters: {
      path: {
        /** @description User identifier */
        id: string;
      };
    };
    responses: {
      /** @description User resource */
      200: {
        content: {
          "application/ld+json": components["schemas"]["User.jsonld"];
          "application/json": components["schemas"]["User"];
          "text/html": components["schemas"]["User"];
        };
      };
      /** @description Resource not found */
      404: {
        content: never;
      };
    };
  };
  /**
   * Replaces the User resource.
   * @description Replaces the User resource.
   */
  api_users_id_put: {
    parameters: {
      path: {
        /** @description User identifier */
        id: string;
      };
    };
    /** @description The updated User resource */
    requestBody: {
      content: {
        "application/ld+json": components["schemas"]["User.jsonld"];
        "application/json": components["schemas"]["User"];
        "text/html": components["schemas"]["User"];
      };
    };
    responses: {
      /** @description User resource updated */
      200: {
        content: {
          "application/ld+json": components["schemas"]["User.jsonld"];
          "application/json": components["schemas"]["User"];
          "text/html": components["schemas"]["User"];
        };
      };
      /** @description Invalid input */
      400: {
        content: never;
      };
      /** @description Resource not found */
      404: {
        content: never;
      };
      /** @description Unprocessable entity */
      422: {
        content: never;
      };
    };
  };
  /**
   * Removes the User resource.
   * @description Removes the User resource.
   */
  api_users_id_delete: {
    parameters: {
      path: {
        /** @description User identifier */
        id: string;
      };
    };
    responses: {
      /** @description User resource deleted */
      204: {
        content: never;
      };
      /** @description Resource not found */
      404: {
        content: never;
      };
    };
  };
  /**
   * Updates the User resource.
   * @description Updates the User resource.
   */
  api_users_id_patch: {
    parameters: {
      path: {
        /** @description User identifier */
        id: string;
      };
    };
    /** @description The updated User resource */
    requestBody: {
      content: {
        "application/merge-patch+json": components["schemas"]["User"];
      };
    };
    responses: {
      /** @description User resource updated */
      200: {
        content: {
          "application/ld+json": components["schemas"]["User.jsonld"];
          "application/json": components["schemas"]["User"];
          "text/html": components["schemas"]["User"];
        };
      };
      /** @description Invalid input */
      400: {
        content: never;
      };
      /** @description Resource not found */
      404: {
        content: never;
      };
      /** @description Unprocessable entity */
      422: {
        content: never;
      };
    };
  };
}
